{"version":3,"file":"static/js/291.ff689118.chunk.js","mappings":"2RAAO,IAAMA,EACN,6EADMA,EAED,4H,mBCoBNC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,KAAMF,EAAAA,KAAaG,SAAS,oHAC5BC,OAAQJ,EAAAA,KAAaG,SAAS,oHAC9BE,OAAQL,EAAAA,KAELG,SAAS,oHACTG,IAAI,KAAO,oMACdC,SAAUP,EAAAA,KAEPG,SAAS,oHACTG,IAAI,EAAG,2QACVR,SAAUE,EAAAA,KAAaG,SAAS,oHAChCK,SAAUR,EAAAA,KAAaG,SAAS,sHAG5BM,EAAgB,CACpBP,KAAM,GACNE,OAAQ,GACRC,OAAQ,GACRE,SAAU,GACVT,SAAU,GACVU,SAAU,IAGCE,EAAiB,SAAH,GACjB,EAARC,SAGK,IAFLC,EAAO,EAAPA,QAAQ,EAAD,EACPC,iBAAAA,OAAgB,MAAG,KAAI,EAEnBA,GACFJ,EAAcP,KAAOW,EAAiBX,KACtCO,EAAcL,OAASS,EAAiBT,OACxCK,EAAcJ,OAASQ,EAAiBR,OACxCI,EAAcF,SAAWM,EAAiBN,SAC1CE,EAAcX,SAAWe,EAAiBf,SAC1CW,EAAcD,SAAWK,EAAiBL,WAE1CC,EAAcP,KAAO,GACrBO,EAAcL,OAAS,GACvBK,EAAcJ,OAAS,GACvBI,EAAcF,SAAW,GACzBE,EAAcX,SAAW,GACzBW,EAAcD,SAAW,IAG3B,ICnE4BM,EDmEtBC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAExBC,GCrEsBJ,EDqEUC,GCpEf,OAAID,GAAUK,MAAK,SAACC,EAAeC,GACxD,IAAMC,EAAiBD,EAAeE,KAAKC,cACzCJ,EAAcG,MAEhB,GAAuB,IAAnBD,EACF,OAAOA,EAGT,GAA2B,UAAvBF,EAAcG,MAA4C,UAAxBF,EAAeE,KAAkB,CAErE,IAAME,EACJL,EAAcM,gBAAgBC,UAC9BN,EAAeK,gBAAgBC,UACjC,GAA4B,IAAxBF,EACF,OAAOA,EAGT,IAAMG,EACJR,EAAcM,gBAAgBG,OAC9BR,EAAeK,gBAAgBG,OACjC,GAAyB,IAArBD,EACF,OAAOA,EAGT,IAAME,EACJV,EAAcM,gBAAgBK,MAC9BV,EAAeK,gBAAgBK,MACjC,GAAwB,IAApBD,EACF,OAAOA,CAEX,CAEA,GAA2B,QAAvBV,EAAcG,MAA0C,QAAxBF,EAAeE,KAAgB,CAEjE,IAAMS,EACJZ,EAAca,cAAcC,SAC5Bb,EAAeY,cAAcC,SAC/B,GAA2B,IAAvBF,EACF,OAAOA,CAEX,CAGA,OAAOZ,EAAcf,OAASgB,EAAehB,MAC/C,KDkCM8B,GAASC,EAAAA,EAAAA,IAAU,CACvB3B,cAAAA,EACAV,iBAAAA,EACAY,SAXmB,SAAC0B,EAAO,GAAoB,IAAjBC,EAAS,EAATA,UAC9BC,QAAQC,IAAIH,GAEZzB,IAEA0B,GACF,IAQA,OACE,UAACG,EAAA,EAAW,CACVC,QAAQ,WACRC,UAAU,OACVhC,SAAUwB,EAAOS,aACjBC,GAAI,CACFC,QAAS,OACTC,IAAK,OACLC,cAAe,SACfjB,MAAO,OACPkB,QAAS,OACT,WAEF,SAACC,EAAA,EAAS,CACRC,GAAG,OACH5B,KAAK,OACLrB,KAAK,OACLkD,MAAM,2EACNC,YAAY,sHACZC,KAAK,QACLC,MAAOpB,EAAOE,OAAOnC,KACrBsD,SAAUrB,EAAOsB,aACjBC,OAAQvB,EAAOwB,WACfC,MAAOzB,EAAO0B,QAAQ3D,MAAQ4D,QAAQ3B,EAAO4B,OAAO7D,MACpD8D,WAAY7B,EAAO0B,QAAQ3D,MAAQiC,EAAO4B,OAAO7D,QAGnD,SAACgD,EAAA,EAAS,CACRC,GAAG,SACH5B,KAAK,OACLrB,KAAK,SACLkD,MAAM,oGACNC,YAAY,+IACZC,KAAK,QACLC,MAAOpB,EAAOE,OAAOjC,OACrBoD,SAAUrB,EAAOsB,aACjBC,OAAQvB,EAAOwB,WACfC,MAAOzB,EAAO0B,QAAQzD,QAAU0D,QAAQ3B,EAAO4B,OAAO3D,QACtD4D,WAAY7B,EAAO0B,QAAQzD,QAAU+B,EAAO4B,OAAO3D,UAGrD,SAAC8C,EAAA,EAAS,CACRC,GAAG,SACH5B,KAAK,SACLrB,KAAK,SACL+D,WAAY,CAAE3D,IAAK,QAAS4D,KAAM,SAClCd,MAAM,+EACNC,YAAY,2GACZC,KAAK,QACLC,MAAOpB,EAAOE,OAAOhC,OACrBmD,SAAUrB,EAAOsB,aACjBC,OAAQvB,EAAOwB,WACfC,MAAOzB,EAAO0B,QAAQxD,QAAUyD,QAAQ3B,EAAO4B,OAAO1D,QACtD2D,WAAY7B,EAAO0B,QAAQxD,QAAU8B,EAAO4B,OAAO1D,UAGrD,SAAC6C,EAAA,EAAS,CACRC,GAAG,WACH5B,KAAK,SACLrB,KAAK,WACL+D,WAAY,CAAE3D,IAAK,IAAK4D,KAAM,KAC9Bd,MAAM,yJACNC,YAAY,qLACZC,KAAK,QACLC,MAAOpB,EAAOE,OAAO9B,SACrBiD,SAAUrB,EAAOsB,aACjBC,OAAQvB,EAAOwB,WACfC,MAAOzB,EAAO0B,QAAQtD,UAAYuD,QAAQ3B,EAAO4B,OAAOxD,UACxDyD,WAAY7B,EAAO0B,QAAQtD,UAAY4B,EAAO4B,OAAOxD,YAEvD,SAAC4D,EAAA,EAAS,CACRhB,GAAG,iBACHN,GAAI,CACFuB,MACEjC,EAAO0B,QAAQ/D,UAAYgE,QAAQ3B,EAAO4B,OAAOjE,UAC7C,UACA,WACN,SACH,+JAID,UAACuE,EAAA,EAAU,CACTnE,KAAK,WACL,kBAAgB,iBAChBqD,MAAOpB,EAAOE,OAAOvC,SACrB0D,SAAUrB,EAAOsB,aACjBC,OAAQvB,EAAOwB,WACfd,GAAI,CACFC,QAAS,OACTE,cAAe,MACfsB,eAAgB,eAChBC,WAAY,SACZH,MACEjC,EAAO0B,QAAQ/D,UAAYgE,QAAQ3B,EAAO4B,OAAOjE,UAC7C,UACA,WACN,WAEF,SAAC0E,EAAA,EAAgB,CACfjB,MAAOzD,EACP2E,SAAS,SAACC,EAAA,EAAK,CAACpB,KAAK,UACrBF,MAAM,wBAGR,SAACoB,EAAA,EAAgB,CACfjB,MAAOzD,EACP2E,SAAS,SAACC,EAAA,EAAK,CAACpB,KAAK,UACrBF,MAAM,8DAGTjB,EAAO0B,QAAQ/D,UAAYgE,QAAQ3B,EAAO4B,OAAOjE,YAChD,SAAC6E,EAAA,EAAc,CAAC9B,GAAI,CAAE+B,OAAQ,kBAAmBR,MAAO,WAAY,SACjEjC,EAAO0B,QAAQ/D,UAAYqC,EAAO4B,OAAOjE,YAI9C,SAACoD,EAAA,EAAS,CACR2B,QAAM,EACN1B,GAAG,WACHG,KAAK,QACLpD,KAAK,WACLqD,MAAOpB,EAAOE,OAAO7B,SACrB4C,MAAM,yCACNI,SAAUrB,EAAOsB,aACjBC,OAAQvB,EAAOwB,WACfC,MAAOzB,EAAO0B,QAAQrD,UAAYsD,QAAQ3B,EAAO4B,OAAOvD,UACxDwD,WAAY7B,EAAO0B,QAAQrD,UAAY2B,EAAO4B,OAAOvD,SAAS,SAE7DU,EAAgB4D,KAAI,SAACtE,GAAQ,OAC5B,UAACuE,EAAA,EAAQ,CAAgBxB,MAAO/C,EAASwE,IAAI,UACxB,UAAlBxE,EAASe,MAAgB,mCAChBf,EAASkB,gBAAgBC,UAAUsD,QAAQ,GAAE,4BAClDzE,EAASkB,gBAAgBG,OAAM,4BAC/BrB,EAASkB,gBAAgBK,MAAK,4BAC9BvB,EAAS0E,MAAK,aAAK1E,EAASH,OAAM,kBAEpB,QAAlBG,EAASe,MAAc,mCACdf,EAASyB,cAAcC,SAAQ,YAAI1B,EAAS0E,MAAK,aAAK1E,EAASH,OAAM,qBARlE8E,EAAAA,EAAAA,MASJ,OAIf,SAACC,EAAA,EAAM,CACL7D,KAAK,SACLmB,QAAQ,YACRY,KAAK,QACLT,GAAI,CAAEd,MAAO,QAAS6C,OAAQ,UAAW,SAEvC/D,GAGA,0BAAM,2FAFN,0BAAM,mFAOhB,C,4GE/OawE,EAAW,SAAH,GAAqC,IAA/BC,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SAAU3E,EAAO,EAAPA,QACzC,OACE,SAAC4E,EAAA,EAAK,CAACF,KAAMA,EAAK,UAChB,UAACG,EAAA,EAAG,CACF5C,GAAI,CACF6C,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACX9D,MAAO,CAAE+D,GAAI,OAAQC,GAAI,SACzBC,SAAU,QACVC,QAAS,OACTC,aAAc,EACdC,UACE,oGACFC,EAAG,GACH,WAEF,SAACC,EAAA,EAAU,CACT,aAAW,QACX/C,KAAK,SACLgD,QAAS,kBAAM1F,GAAS,EACxBiC,GAAI,CAAE6C,SAAU,WAAYC,IAAK,EAAGY,MAAO,GAAI,UAE/C,SAACC,EAAA,EAAS,CAACC,SAAS,SAAS5D,GAAI,CAAEuB,MAAO,eAE3CmB,MAIT,C,wFC/BamB,EAAa,SAAH,GAAqC,IAA/BpB,EAAI,EAAJA,KAAM1E,EAAO,EAAPA,QAAS2E,EAAQ,EAARA,SAC1C,OACE,SAACC,EAAA,EAAK,CAACF,KAAMA,EAAM1E,QAASA,EAAS+F,qBAAmB,YACtD,SAAClB,EAAA,EAAG,CACF5C,GAAI,CACF6C,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXG,SAAU,QACVC,QAAS,OACTC,aAAc,EACdC,UACE,oGACFC,EAAG,GACH,SAEDb,KAIT,C,8ECrBaqB,EAAc,SAAH,GAAsB,IAAhBrB,EAAQ,EAARA,SAC5B,OACE,SAACsB,EAAA,EAAS,CACRb,SAAS,KACTnD,GAAI,CACFC,QAAS,OACTC,IAAK,EACL+D,OAAQ,SACR,SAEDvB,GAGP,C,wDCfO,IAAMtE,EAAkB,SAAC8F,GAAK,OAAKA,EAAMhG,UAAUiG,KAAM,C,0LCEhEC,EAAAA,EAAAA,SAAAA,QAAyB,8CAElB,IAAMC,EAAmB,yCAAG,2GACVD,EAAAA,EAAAA,IAAU,aAAa,KAAD,EAAjC,OAAiC,SAArCE,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACZ,kBAH+B,mCAKnBC,EAAe,yCAAG,WAAOjE,GAAE,8FACf8D,EAAAA,EAAAA,IAAU,aAAD,OAAc9D,IAAM,KAAD,EAAvC,OAAuC,SAA3CgE,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACZ,gBAH2B,sCAKfE,EAAa,yCAAG,WAAOC,GAAI,8FACfL,EAAAA,EAAAA,KAAW,YAAaK,GAAM,KAAD,EAAxC,OAAwC,SAA5CH,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACZ,gBAHyB,sCAKbI,EAAgB,yCAAG,WAAOpE,GAAE,8FAChB8D,EAAAA,EAAAA,OAAa,aAAD,OAAc9D,IAAM,KAAD,EAA1C,OAA0C,SAA9CgE,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACZ,gBAH4B,sCAKhBK,EAAgB,yCAAG,WAAOrE,EAAImE,GAAI,8FACtBL,EAAAA,EAAAA,IAAU,aAAD,OAAc9D,GAAMmE,GAAM,KAAD,EAA7C,OAA6C,SAAjDH,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACZ,gBAH4B,uC,uDCxBtB,ICEDpG,EDFmB,CACvB,CACEoC,GAAI,IACJsE,UAAW,0BACXC,eAAgB,MAChBC,YAAa,MAEf,CACExE,GAAI,IACJsE,UAAW,0BACXC,eAAgB,MAChBC,YAAa,IAEf,CACExE,GAAI,IACJsE,UAAW,0BACXC,eAAgB,MAChBC,YAAa,MAEf,CACExE,GAAI,IACJsE,UAAW,0BACXC,eAAgB,MAChBC,YAAa,IAEf,CACExE,GAAI,IACJsE,UAAW,0BACXC,eAAgB,MAChBC,YAAa,IAEf,CACExE,GAAI,IACJsE,UAAW,0BACXC,eAAgB,MAChBC,YAAa,IAEf,CACExE,GAAI,IACJsE,UAAW,0BACXC,eAAgB,MAChBC,YAAa,IAEf,CACExE,GAAI,IACJsE,UAAW,2BACXC,eAAgB,MAChBC,YAAa,MAEf,CACExE,GAAI,IACJsE,UAAW,2BACXC,eAAgB,MAChBC,YAAa,IAEf,CACExE,GAAI,KACJsE,UAAW,2BACXC,eAAgB,MAChBC,YAAa,MAEf,CACExE,GAAI,KACJsE,UAAW,2BACXC,eAAgB,MAChBC,YAAa,IAEf,CACExE,GAAI,KACJsE,UAAW,2BACXC,eAAgB,MAChBC,YAAa,IAEf,CACExE,GAAI,KACJsE,UAAW,2BACXC,eAAgB,MAChBC,YAAa,IAEf,CACExE,GAAI,KACJsE,UAAW,2BACXC,eAAgB,MAChBC,YAAa,IAEf,CACExE,GAAI,KACJsE,UAAW,qBACXC,eAAgB,MAChBC,YAAa,IAEf,CACExE,GAAI,KACJsE,UAAW,qBACXC,eAAgB,MAChBC,YAAa,IAEf,CACExE,GAAI,KACJsE,UAAW,qBACXC,eAAgB,MAChBC,YAAa,IAEf,CACExE,GAAI,KACJsE,UAAW,qBACXC,eAAgB,MAChBC,YAAa,MAEf,CACExE,GAAI,KACJsE,UAAW,qBACXC,eAAgB,MAChBC,YAAa,IAEf,CACExE,GAAI,KACJsE,UAAW,qBACXC,eAAgB,MAChBC,YAAa,MAEf,CACExE,GAAI,KACJsE,UAAW,qBACXC,eAAgB,MAChBC,YAAa,IAEf,CACExE,GAAI,KACJsE,UAAW,qBACXC,eAAgB,MAChBC,YAAa,IAEf,CACExE,GAAI,KACJsE,UAAW,qBACXC,eAAgB,MAChBC,YAAa,IAEf,CACExE,GAAI,KACJsE,UAAW,qBACXC,eAAgB,MAChBC,YAAa,IAEf,CACExE,GAAI,KACJsE,UAAW,qBACXC,eAAgB,MAChBC,YAAa,MAEf,CACExE,GAAI,KACJsE,UAAW,qBACXC,eAAgB,MAChBC,YAAa,IAEf,CACExE,GAAI,KACJsE,UAAW,qBACXC,eAAgB,MAChBC,YAAa,MAEf,CACExE,GAAI,KACJsE,UAAW,qBACXC,eAAgB,MAChBC,YAAa,KCnKV,SAASC,EAAoBrH,EAAUsH,EAAOlG,GACnD,IAAMmG,EAAa/G,EAAUgH,MAC3B,SAACvH,GAAQ,OACPA,EAASiH,YAAcI,GAASrH,EAASkH,iBAAmB/F,CAAS,IAGzE,OAAiB,IAAbpB,GACMuH,EAAWH,YAAcpH,GAAU0E,QAAQ,GAE5C+C,GAEX,C","sources":["data/workshop.js","components/AddProductForm/AddProductForm.jsx","utils/sortMaterials.js","components/ModalBig/ModalBig.jsx","components/ModalSmall/ModalSmall.jsx","components/MyContainer/MyContainer.jsx","redux/materials/materialsSelector.js","services/products-API.js","data/fakeAPI.js","utils/getMetalConsumption.js"],"sourcesContent":["export const workshop = {\r\n  CNC: \"дільниця з ЧПУ\",\r\n  PRESSING: \"штампувальна дільниця\",\r\n};\r\n","import { useSelector } from \"react-redux\";\r\nimport { nanoid } from \"nanoid\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { useFormik } from \"formik\";\r\n\r\nimport {\r\n  FormControl,\r\n  Button,\r\n  TextField,\r\n  FormLabel,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  FormHelperText,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\n\r\nimport { sortMaterials } from \"utils/sortMaterials\";\r\nimport { workshop } from \"data/workshop\";\r\nimport { selectMaterials } from \"redux/materials/materialsSelector\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  name: yup.string().required(\"Це поле є обов'язковим\"),\r\n  number: yup.string().required(\"Це поле є обов'язковим\"),\r\n  weight: yup\r\n    .number()\r\n    .required(\"Це поле є обов'язковим\")\r\n    .min(0.001, \"Вага деталі повинна бути не менше 0.001 кг\"),\r\n  quantity: yup\r\n    .number()\r\n    .required(\"Це поле є обов'язковим\")\r\n    .min(1, \"Кількість деталей з листа повинно бути не менше 1 шт.\"),\r\n  workshop: yup.string().required(\"Це поле є обов'язковим\"),\r\n  material: yup.string().required(\"Це поле є обов'язковим\"),\r\n});\r\n\r\nconst initialValues = {\r\n  name: \"\",\r\n  number: \"\",\r\n  weight: \"\",\r\n  quantity: \"\",\r\n  workshop: \"\",\r\n  material: \"\",\r\n};\r\n\r\nexport const AddProductForm = ({\r\n  onSubmit,\r\n  onClose,\r\n  productForUpdate = null,\r\n}) => {\r\n  if (productForUpdate) {\r\n    initialValues.name = productForUpdate.name;\r\n    initialValues.number = productForUpdate.number;\r\n    initialValues.weight = productForUpdate.weight;\r\n    initialValues.quantity = productForUpdate.quantity;\r\n    initialValues.workshop = productForUpdate.workshop;\r\n    initialValues.material = productForUpdate.material;\r\n  } else {\r\n    initialValues.name = \"\";\r\n    initialValues.number = \"\";\r\n    initialValues.weight = \"\";\r\n    initialValues.quantity = \"\";\r\n    initialValues.workshop = \"\";\r\n    initialValues.material = \"\";\r\n  }\r\n\r\n  const materials = useSelector(selectMaterials);\r\n\r\n  const sortedMaterials = sortMaterials(materials);\r\n\r\n  const handleSubmit = (values, { resetForm }) => {\r\n    console.log(values);\r\n    // onSubmit(values);\r\n    onClose();\r\n\r\n    resetForm();\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: handleSubmit,\r\n  });\r\n\r\n  return (\r\n    <FormControl\r\n      variant=\"standard\"\r\n      component=\"form\"\r\n      onSubmit={formik.handleSubmit}\r\n      sx={{\r\n        display: \"flex\",\r\n        gap: \"12px\",\r\n        flexDirection: \"column\",\r\n        width: \"100%\",\r\n        padding: \"8px\",\r\n      }}\r\n    >\r\n      <TextField\r\n        id=\"name\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        label=\"Найменування\"\r\n        placeholder=\"Введіть найменування\"\r\n        size=\"small\"\r\n        value={formik.values.name}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.name && Boolean(formik.errors.name)}\r\n        helperText={formik.touched.name && formik.errors.name}\r\n      />\r\n\r\n      <TextField\r\n        id=\"number\"\r\n        type=\"text\"\r\n        name=\"number\"\r\n        label=\"Децимальний номер\"\r\n        placeholder=\"Введіть децимальний номер\"\r\n        size=\"small\"\r\n        value={formik.values.number}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.number && Boolean(formik.errors.number)}\r\n        helperText={formik.touched.number && formik.errors.number}\r\n      />\r\n\r\n      <TextField\r\n        id=\"weight\"\r\n        type=\"number\"\r\n        name=\"weight\"\r\n        inputProps={{ min: \"0.001\", step: \"0.001\" }}\r\n        label=\"Вага деталі, кг.\"\r\n        placeholder=\"Введіть вагу деталі\"\r\n        size=\"small\"\r\n        value={formik.values.weight}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.weight && Boolean(formik.errors.weight)}\r\n        helperText={formik.touched.weight && formik.errors.weight}\r\n      />\r\n\r\n      <TextField\r\n        id=\"quantity\"\r\n        type=\"number\"\r\n        name=\"quantity\"\r\n        inputProps={{ min: \"1\", step: \"1\" }}\r\n        label=\"Кількість деталей з листа, шт.\"\r\n        placeholder=\"Введіть кількість деталей з листа\"\r\n        size=\"small\"\r\n        value={formik.values.quantity}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.quantity && Boolean(formik.errors.quantity)}\r\n        helperText={formik.touched.quantity && formik.errors.quantity}\r\n      />\r\n      <FormLabel\r\n        id=\"radio-workshop\"\r\n        sx={{\r\n          color:\r\n            formik.touched.workshop && Boolean(formik.errors.workshop)\r\n              ? \"#d32f2f\"\r\n              : \"inherit\",\r\n        }}\r\n      >\r\n        Виберіть виробничу дільницю:\r\n      </FormLabel>\r\n\r\n      <RadioGroup\r\n        name=\"workshop\"\r\n        aria-labelledby=\"radio-workshop\"\r\n        value={formik.values.workshop}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-around\",\r\n          alignItems: \"center\",\r\n          color:\r\n            formik.touched.workshop && Boolean(formik.errors.workshop)\r\n              ? \"#d32f2f\"\r\n              : \"inherit\",\r\n        }}\r\n      >\r\n        <FormControlLabel\r\n          value={workshop.CNC}\r\n          control={<Radio size=\"small\" />}\r\n          label=\"ЧПУ\"\r\n        />\r\n\r\n        <FormControlLabel\r\n          value={workshop.PRESSING}\r\n          control={<Radio size=\"small\" />}\r\n          label=\"Штамповка\"\r\n        />\r\n      </RadioGroup>\r\n      {formik.touched.workshop && Boolean(formik.errors.workshop) && (\r\n        <FormHelperText sx={{ margin: \"4px 14px 0 14px\", color: \"#d32f2f\" }}>\r\n          {formik.touched.workshop && formik.errors.workshop}\r\n        </FormHelperText>\r\n      )}\r\n\r\n      <TextField\r\n        select\r\n        id=\"material\"\r\n        size=\"small\"\r\n        name=\"material\"\r\n        value={formik.values.material}\r\n        label=\"Maтеріал\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.material && Boolean(formik.errors.material)}\r\n        helperText={formik.touched.material && formik.errors.material}\r\n      >\r\n        {sortedMaterials.map((material) => (\r\n          <MenuItem key={nanoid()} value={material._id}>\r\n            {material.type === \"sheet\" &&\r\n              `Лист ${material.sheetParameters.thickness.toFixed(1)}\r\n              x${material.sheetParameters.length}\r\n              x${material.sheetParameters.width}\r\n               ${material.brand} (${material.weight}кг.)`}\r\n\r\n            {material.type === \"rod\" &&\r\n              `Круг ${material.rodParameters.diameter} ${material.brand} (${material.weight}кг.)`}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        sx={{ width: \"300px\", margin: \"0 auto\" }}\r\n      >\r\n        {!productForUpdate ? (\r\n          <span>Додати деталь </span>\r\n        ) : (\r\n          <span>Редагувати дані</span>\r\n        )}\r\n      </Button>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\n// =------------------\r\n// import { nanoid } from \"nanoid\";\r\n// import * as yup from \"yup\";\r\n\r\n// import { useFormik } from \"formik\";\r\n\r\n// import {\r\n//   FormControl,\r\n//   Button,\r\n//   TextField,\r\n//   FormLabel,\r\n//   RadioGroup,\r\n//   FormControlLabel,\r\n//   Radio,\r\n//   FormHelperText,\r\n//   MenuItem,\r\n// } from \"@mui/material\";\r\n\r\n// import { getMaterials } from \"data/fakeAPI\";\r\n// import { getUniqueValues } from \"utils\";\r\n// import { workshop } from \"data/workshop\";\r\n\r\n// const validationSchema = yup.object().shape({\r\n//   name: yup.string().required(\"Це поле є обов'язковим\"),\r\n//   number: yup.string().required(\"Це поле є обов'язковим\"),\r\n//   weight: yup\r\n//     .number()\r\n//     .required(\"Це поле є обов'язковим\")\r\n//     .min(0.001, \"Вага деталі повинна бути не менше 0.001 кг\"),\r\n//   quantity: yup\r\n//     .number()\r\n//     .required(\"Це поле є обов'язковим\")\r\n//     .min(1, \"Кількість деталей з листа повинно бути не менше 1 шт.\"),\r\n//   workshop: yup.string().required(\"Це поле є обов'язковим\"),\r\n//   thickness: yup.string().required(\"Це поле є обов'язковим\"),\r\n//   sheet: yup.string().required(\"Це поле є обов'язковим\"),\r\n// });\r\n\r\n// const initialValues = {\r\n//   name: \"\",\r\n//   number: \"\",\r\n//   weight: \"\",\r\n//   quantity: \"\",\r\n//   workshop: \"\",\r\n//   thickness: \"\",\r\n//   sheet: \"\",\r\n// };\r\n\r\n// export const AddProductForm = ({\r\n//   onSubmit,\r\n//   onClose,\r\n//   productForUpdate = null,\r\n// }) => {\r\n//   if (productForUpdate) {\r\n//     initialValues.name = productForUpdate.name;\r\n//     initialValues.number = productForUpdate.number;\r\n//     initialValues.weight = productForUpdate.weight;\r\n//     initialValues.quantity = productForUpdate.quantity;\r\n//     initialValues.workshop = productForUpdate.workshop;\r\n//     initialValues.thickness = productForUpdate.material.thickness;\r\n//     initialValues.sheet = productForUpdate.material.sheet;\r\n//   } else {\r\n//     initialValues.name = \"\";\r\n//     initialValues.number = \"\";\r\n//     initialValues.weight = \"\";\r\n//     initialValues.quantity = \"\";\r\n//     initialValues.workshop = \"\";\r\n//     initialValues.thickness = \"\";\r\n//     initialValues.sheet = \"\";\r\n//   }\r\n\r\n//   const materials = getMaterials();\r\n\r\n//   const valuesSheet = getUniqueValues(materials, \"sizeSheet\");\r\n\r\n//   const valuesThikness = getUniqueValues(materials, \"thicknessSheet\");\r\n\r\n//   const handleSubmit = (values, { resetForm }) => {\r\n//     onSubmit(values);\r\n//     onClose();\r\n\r\n//     resetForm();\r\n//   };\r\n\r\n//   const formik = useFormik({\r\n//     initialValues,\r\n//     validationSchema,\r\n//     onSubmit: handleSubmit,\r\n//   });\r\n\r\n//   return (\r\n//     <FormControl\r\n//       variant=\"standard\"\r\n//       component=\"form\"\r\n//       onSubmit={formik.handleSubmit}\r\n//       sx={{\r\n//         display: \"flex\",\r\n//         gap: \"12px\",\r\n//         flexDirection: \"column\",\r\n//         width: \"100%\",\r\n//         padding: \"8px\",\r\n//       }}\r\n//     >\r\n//       <TextField\r\n//         id=\"name\"\r\n//         type=\"text\"\r\n//         name=\"name\"\r\n//         label=\"Найменування\"\r\n//         placeholder=\"Введіть найменування\"\r\n//         size=\"small\"\r\n//         value={formik.values.name}\r\n//         onChange={formik.handleChange}\r\n//         onBlur={formik.handleBlur}\r\n//         error={formik.touched.name && Boolean(formik.errors.name)}\r\n//         helperText={formik.touched.name && formik.errors.name}\r\n//       />\r\n\r\n//       <TextField\r\n//         id=\"number\"\r\n//         type=\"text\"\r\n//         name=\"number\"\r\n//         label=\"Децимальний номер\"\r\n//         placeholder=\"Введіть децимальний номер\"\r\n//         size=\"small\"\r\n//         value={formik.values.number}\r\n//         onChange={formik.handleChange}\r\n//         onBlur={formik.handleBlur}\r\n//         error={formik.touched.number && Boolean(formik.errors.number)}\r\n//         helperText={formik.touched.number && formik.errors.number}\r\n//       />\r\n\r\n//       <TextField\r\n//         id=\"weight\"\r\n//         type=\"number\"\r\n//         name=\"weight\"\r\n//         inputProps={{ min: \"0.001\", step: \"0.001\" }}\r\n//         label=\"Вага деталі, кг.\"\r\n//         placeholder=\"Введіть вагу деталі\"\r\n//         size=\"small\"\r\n//         value={formik.values.weight}\r\n//         onChange={formik.handleChange}\r\n//         onBlur={formik.handleBlur}\r\n//         error={formik.touched.weight && Boolean(formik.errors.weight)}\r\n//         helperText={formik.touched.weight && formik.errors.weight}\r\n//       />\r\n\r\n//       <TextField\r\n//         id=\"quantity\"\r\n//         type=\"number\"\r\n//         name=\"quantity\"\r\n//         inputProps={{ min: \"1\", step: \"1\" }}\r\n//         label=\"Кількість деталей з листа, шт.\"\r\n//         placeholder=\"Введіть кількість деталей з листа\"\r\n//         size=\"small\"\r\n//         value={formik.values.quantity}\r\n//         onChange={formik.handleChange}\r\n//         onBlur={formik.handleBlur}\r\n//         error={formik.touched.quantity && Boolean(formik.errors.quantity)}\r\n//         helperText={formik.touched.quantity && formik.errors.quantity}\r\n//       />\r\n//       <FormLabel id=\"radio-workshop\">Виберіть виробничу дільницю:</FormLabel>\r\n\r\n//       <RadioGroup\r\n//         name=\"workshop\"\r\n//         aria-labelledby=\"radio-workshop\"\r\n//         value={formik.values.workshop}\r\n//         onChange={formik.handleChange}\r\n//         onBlur={formik.handleBlur}\r\n//         sx={{\r\n//           display: \"flex\",\r\n//           flexDirection: \"row\",\r\n//           justifyContent: \"space-around\",\r\n//           alignItems: \"center\",\r\n//         }}\r\n//       >\r\n//         <FormControlLabel\r\n//           value={workshop.CNC}\r\n//           control={<Radio size=\"small\" />}\r\n//           label=\"ЧПУ\"\r\n//         />\r\n\r\n//         <FormControlLabel\r\n//           value={workshop.PRESSING}\r\n//           control={<Radio size=\"small\" />}\r\n//           label=\"Штамповка\"\r\n//         />\r\n//       </RadioGroup>\r\n//       {formik.touched.workshop && Boolean(formik.errors.workshop) && (\r\n//         <FormHelperText sx={{ margin: \"4px 14px 0 14px\", color: \"#d32f2f\" }}>\r\n//           {formik.touched.workshop && formik.errors.workshop}\r\n//         </FormHelperText>\r\n//       )}\r\n\r\n//       <TextField\r\n//         select\r\n//         name=\"thickness\"\r\n//         size=\"small\"\r\n//         value={formik.values.thickness}\r\n//         label=\"Товщина матеріалу\"\r\n//         onChange={formik.handleChange}\r\n//         onBlur={formik.handleBlur}\r\n//         error={formik.touched.thickness && Boolean(formik.errors.thickness)}\r\n//         helperText={formik.touched.thickness && formik.errors.thickness}\r\n//       >\r\n//         {valuesThikness.map((value) => (\r\n//           <MenuItem key={nanoid()} value={value}>\r\n//             {value} мм.\r\n//           </MenuItem>\r\n//         ))}\r\n//       </TextField>\r\n\r\n//       <TextField\r\n//         select\r\n//         name=\"sheet\"\r\n//         size=\"small\"\r\n//         value={formik.values.sheet}\r\n//         label=\"Розмір листа матеріалу\"\r\n//         onChange={formik.handleChange}\r\n//         onBlur={formik.handleBlur}\r\n//         error={formik.touched.sheet && Boolean(formik.errors.sheet)}\r\n//         helperText={formik.touched.sheet && formik.errors.sheet}\r\n//       >\r\n//         {valuesSheet.map((material) => (\r\n//           <MenuItem key={nanoid()} value={material}>\r\n//             {material}\r\n//           </MenuItem>\r\n//         ))}\r\n//       </TextField>\r\n\r\n//       <Button\r\n//         type=\"submit\"\r\n//         variant=\"contained\"\r\n//         size=\"large\"\r\n//         sx={{ width: \"300px\", margin: \"0 auto\" }}\r\n//       >\r\n//         {!productForUpdate ? (\r\n//           <span>Додати деталь </span>\r\n//         ) : (\r\n//           <span>Редагувати дані</span>\r\n//         )}\r\n//       </Button>\r\n//     </FormControl>\r\n//   );\r\n// };\r\n","export function sortMaterials(arrayObj) {\r\n  const sortedArrayObj = [...arrayObj].sort((firstMaterial, secondMaterial) => {\r\n    const typeComparison = secondMaterial.type.localeCompare(\r\n      firstMaterial.type\r\n    );\r\n    if (typeComparison !== 0) {\r\n      return typeComparison;\r\n    }\r\n\r\n    if (firstMaterial.type === \"sheet\" && secondMaterial.type === \"sheet\") {\r\n      // Сортування за thickness, потім за length, потім за width\r\n      const thicknessComparison =\r\n        firstMaterial.sheetParameters.thickness -\r\n        secondMaterial.sheetParameters.thickness;\r\n      if (thicknessComparison !== 0) {\r\n        return thicknessComparison;\r\n      }\r\n\r\n      const lengthComparison =\r\n        firstMaterial.sheetParameters.length -\r\n        secondMaterial.sheetParameters.length;\r\n      if (lengthComparison !== 0) {\r\n        return lengthComparison;\r\n      }\r\n\r\n      const widthComparison =\r\n        firstMaterial.sheetParameters.width -\r\n        secondMaterial.sheetParameters.width;\r\n      if (widthComparison !== 0) {\r\n        return widthComparison;\r\n      }\r\n    }\r\n\r\n    if (firstMaterial.type === \"rod\" && secondMaterial.type === \"rod\") {\r\n      // Сортування за diameter\r\n      const diameterComparison =\r\n        firstMaterial.rodParameters.diameter -\r\n        secondMaterial.rodParameters.diameter;\r\n      if (diameterComparison !== 0) {\r\n        return diameterComparison;\r\n      }\r\n    }\r\n\r\n    // Сортування за weight\r\n    return firstMaterial.weight - secondMaterial.weight;\r\n  });\r\n\r\n  return sortedArrayObj;\r\n}\r\n","import { Modal, Box, IconButton } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nexport const ModalBig = ({ open, children, onClose }) => {\r\n  return (\r\n    <Modal open={open}>\r\n      <Box\r\n        sx={{\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          width: { xs: \"100%\", md: \"500px\" },\r\n          maxWidth: \"500px\",\r\n          bgcolor: \"#fff\",\r\n          borderRadius: 2,\r\n          boxShadow:\r\n            \"0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),  0px 2px 1px rgba(0, 0, 0, 0.2)\",\r\n          p: 4,\r\n        }}\r\n      >\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          size=\"medium\"\r\n          onClick={() => onClose()}\r\n          sx={{ position: \"absolute\", top: 3, right: 3 }}\r\n        >\r\n          <CloseIcon fontSize=\"medium\" sx={{ color: \"#1976d2\" }} />\r\n        </IconButton>\r\n        {children}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n","import { Modal, Box } from \"@mui/material\";\r\n\r\nexport const ModalSmall = ({ open, onClose, children }) => {\r\n  return (\r\n    <Modal open={open} onClose={onClose} disableRestoreFocus>\r\n      <Box\r\n        sx={{\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          maxWidth: \"460px\",\r\n          bgcolor: \"#fff\",\r\n          borderRadius: 2,\r\n          boxShadow:\r\n            \"0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),  0px 2px 1px rgba(0, 0, 0, 0.2)\",\r\n          p: 4,\r\n        }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n","import { Container } from \"@mui/material\";\r\n\r\nexport const MyContainer = ({ children }) => {\r\n  return (\r\n    <Container\r\n      maxWidth=\"xl\"\r\n      sx={{\r\n        display: \"flex\",\r\n        gap: 2,\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n","export const selectMaterials = (state) => state.materials.items;\r\nexport const selectIsLoading = (state) => state.materials.isLoading;\r\nexport const selectError = (state) => state.materials.errors;\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://technology-backend.onrender.com/api\";\r\n\r\nexport const fetchAllProductsAPI = async () => {\r\n  const { data } = await axios.get(\"/products\");\r\n  return data;\r\n};\r\n\r\nexport const fetchProductAPI = async (id) => {\r\n  const { data } = await axios.get(`/products/${id}`);\r\n  return data;\r\n};\r\n\r\nexport const addProductAPI = async (body) => {\r\n  const { data } = await axios.post(\"/products\", body);\r\n  return data;\r\n};\r\n\r\nexport const removeProductAPI = async (id) => {\r\n  const { data } = await axios.delete(`/products/${id}`);\r\n  return data;\r\n};\r\n\r\nexport const updateProductAPI = async (id, body) => {\r\n  const { data } = await axios.put(`/products/${id}`, body);\r\n  return data;\r\n};\r\n","export const materials = [\r\n  {\r\n    id: \"1\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20.8,\r\n  },\r\n  {\r\n    id: \"2\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 26,\r\n  },\r\n  {\r\n    id: \"3\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 31.2,\r\n  },\r\n  {\r\n    id: \"4\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 39,\r\n  },\r\n  {\r\n    id: \"5\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 52,\r\n  },\r\n  {\r\n    id: \"6\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 65,\r\n  },\r\n  {\r\n    id: \"7\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 78,\r\n  },\r\n  {\r\n    id: \"8\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20.8,\r\n  },\r\n  {\r\n    id: \"9\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 26,\r\n  },\r\n  {\r\n    id: \"10\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 31.2,\r\n  },\r\n  {\r\n    id: \"11\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 39,\r\n  },\r\n  {\r\n    id: \"12\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 52,\r\n  },\r\n  {\r\n    id: \"13\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 65,\r\n  },\r\n  {\r\n    id: \"14\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 78,\r\n  },\r\n  {\r\n    id: \"15\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20,\r\n  },\r\n  {\r\n    id: \"16\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 25,\r\n  },\r\n  {\r\n    id: \"17\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 30,\r\n  },\r\n  {\r\n    id: \"18\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 37.5,\r\n  },\r\n  {\r\n    id: \"19\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 50,\r\n  },\r\n  {\r\n    id: \"20\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 62.5,\r\n  },\r\n  {\r\n    id: \"21\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 75,\r\n  },\r\n  {\r\n    id: \"22\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20,\r\n  },\r\n  {\r\n    id: \"23\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 25,\r\n  },\r\n  {\r\n    id: \"24\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 30,\r\n  },\r\n  {\r\n    id: \"25\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 37.5,\r\n  },\r\n  {\r\n    id: \"26\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 50,\r\n  },\r\n  {\r\n    id: \"27\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 62.5,\r\n  },\r\n  {\r\n    id: \"28\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 75,\r\n  },\r\n];\r\n\r\nexport const getMaterials = () => {\r\n  return materials;\r\n};\r\n","import { getMaterials } from \"../data/fakeAPI\";\r\n\r\nconst materials = getMaterials();\r\n\r\nexport function getMetalConsumption(quantity, sheet, thickness) {\r\n  const isMaterial = materials.find(\r\n    (material) =>\r\n      material.sizeSheet === sheet && material.thicknessSheet === thickness\r\n  );\r\n\r\n  if (quantity !== 0) {\r\n    return (isMaterial.weightSheet / quantity).toFixed(3);\r\n  } else {\r\n    return Infinity;\r\n  }\r\n}\r\n"],"names":["workshop","validationSchema","yup","shape","name","required","number","weight","min","quantity","material","initialValues","AddProductForm","onSubmit","onClose","productForUpdate","arrayObj","materials","useSelector","selectMaterials","sortedMaterials","sort","firstMaterial","secondMaterial","typeComparison","type","localeCompare","thicknessComparison","sheetParameters","thickness","lengthComparison","length","widthComparison","width","diameterComparison","rodParameters","diameter","formik","useFormik","values","resetForm","console","log","FormControl","variant","component","handleSubmit","sx","display","gap","flexDirection","padding","TextField","id","label","placeholder","size","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","inputProps","step","FormLabel","color","RadioGroup","justifyContent","alignItems","FormControlLabel","control","Radio","FormHelperText","margin","select","map","MenuItem","_id","toFixed","brand","nanoid","Button","ModalBig","open","children","Modal","Box","position","top","left","transform","xs","md","maxWidth","bgcolor","borderRadius","boxShadow","p","IconButton","onClick","right","Close","fontSize","ModalSmall","disableRestoreFocus","MyContainer","Container","height","state","items","axios","fetchAllProductsAPI","data","fetchProductAPI","addProductAPI","body","removeProductAPI","updateProductAPI","sizeSheet","thicknessSheet","weightSheet","getMetalConsumption","sheet","isMaterial","find","Infinity"],"sourceRoot":""}