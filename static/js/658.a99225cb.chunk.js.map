{"version":3,"file":"static/js/658.a99225cb.chunk.js","mappings":"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","sources":["components/ContentModalDelete/ContentModalDelete.jsx","components/ModalBig/ModalBig.jsx","components/ModalSmall/ModalSmall.jsx","components/MyContainer/MyContainer.jsx","redux/materials/materialsSelector.js","components/AddSheetForm/AddSheetForm.jsx","components/AddRodForm/AddRodForm.jsx","components/MaterialsList/MaterialsList.jsx","data/typeMaterialData.js","components/AddMaterialForm/AddMaterialForm.jsx","components/MaterialsDashboard/MaterialsDashboard.jsx","pages/Materials/Materials.jsx","../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/icons-material/DeleteForever.js","../node_modules/@mui/icons-material/Edit.js","../node_modules/@mui/icons-material/PostAdd.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\n\r\nimport { Box, Button, Typography } from \"@mui/material\";\r\n\r\nexport const ContentModalDelete = ({ onDelete, onClose, title }) => {\r\n  const btnRef = useRef();\r\n\r\n  useEffect(() => {\r\n    btnRef.current.focus({ focusVisible: true });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" component=\"p\" align=\"center\" sx={{ mb: 2 }}>\r\n        {title}\r\n      </Typography>\r\n      <Box sx={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\r\n        <Button variant=\"contained\" size=\"small\" onClick={() => onDelete()}>\r\n          Так\r\n        </Button>\r\n        <Button\r\n          ref={btnRef}\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n          onClick={() => onClose()}\r\n        >\r\n          Hi\r\n        </Button>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n","import { Modal, Box, IconButton } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nexport const ModalBig = ({ open, children, onClose }) => {\r\n  return (\r\n    <Modal open={open}>\r\n      <Box\r\n        sx={{\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          width: { xs: \"100%\", md: \"500px\" },\r\n          maxWidth: \"500px\",\r\n          bgcolor: \"#fff\",\r\n          borderRadius: 2,\r\n          boxShadow:\r\n            \"0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),  0px 2px 1px rgba(0, 0, 0, 0.2)\",\r\n          p: 4,\r\n        }}\r\n      >\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          size=\"medium\"\r\n          onClick={() => onClose()}\r\n          sx={{ position: \"absolute\", top: 3, right: 3 }}\r\n        >\r\n          <CloseIcon fontSize=\"medium\" sx={{ color: \"#1976d2\" }} />\r\n        </IconButton>\r\n        {children}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n","import { Modal, Box } from \"@mui/material\";\r\n\r\nexport const ModalSmall = ({ open, onClose, children }) => {\r\n  return (\r\n    <Modal open={open} onClose={onClose} disableRestoreFocus>\r\n      <Box\r\n        sx={{\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          maxWidth: \"460px\",\r\n          bgcolor: \"#fff\",\r\n          borderRadius: 2,\r\n          boxShadow:\r\n            \"0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),  0px 2px 1px rgba(0, 0, 0, 0.2)\",\r\n          p: 4,\r\n        }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n","import { Container } from \"@mui/material\";\r\n\r\nexport const MyContainer = ({ children }) => {\r\n  return (\r\n    <Container\r\n      maxWidth=\"xl\"\r\n      sx={{\r\n        display: \"flex\",\r\n        gap: 2,\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n","export const selectMaterials = (state) => state.materials.items;\r\nexport const selectIsLoading = (state) => state.materials.isLoading;\r\nexport const selectError = (state) => state.materials.errors;\r\n","import { useDispatch } from \"react-redux\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\n\r\nimport { Button, FormControl, TextField } from \"@mui/material\";\r\n\r\nimport {\r\n  addMaterial,\r\n  updateMaterial,\r\n} from \"redux/materials/materialsOperation\";\r\n\r\nconst initialValues = {\r\n  brand: \"\",\r\n  length: \"\",\r\n  width: \"\",\r\n  thickness: \"\",\r\n  weight: \"\",\r\n};\r\n\r\nconst validationSchema = yup.object().shape({\r\n  brand: yup.string().required(\"Це поле є обов'язковим\"),\r\n  width: yup\r\n    .number()\r\n    .required(\"Це поле є обов'язковим\")\r\n    .moreThan(0, \"Значення повинно бути більше 0\")\r\n    .notOneOf([0], \"Значення не може бути рівним 0\"),\r\n  length: yup\r\n    .number()\r\n    .required(\"Це поле є обов'язковим\")\r\n    .moreThan(0, \"Значення повинно бути більше 0\")\r\n    .notOneOf([0], \"Значення не може бути рівним 0\"),\r\n  thickness: yup\r\n    .number()\r\n    .required(\"Це поле є обов'язковим\")\r\n    .moreThan(0, \"Значення повинно бути більше 0\")\r\n    .notOneOf([0], \"Значення не може бути рівним 0\"),\r\n  weight: yup\r\n    .number()\r\n    .required(\"Це поле є обов'язковим\")\r\n    .moreThan(0, \"Значення повинно бути більше 0\")\r\n    .notOneOf([0], \"Значення не може бути рівним 0\"),\r\n});\r\n\r\nexport const AddSheetForm = ({\r\n  type,\r\n  onClearType,\r\n  onClose,\r\n  materialToUpdate = null,\r\n}) => {\r\n  if (materialToUpdate) {\r\n    initialValues.brand = materialToUpdate.brand;\r\n    initialValues.width = materialToUpdate.sheetParameters.width;\r\n    initialValues.length = materialToUpdate.sheetParameters.length;\r\n    initialValues.thickness = materialToUpdate.sheetParameters.thickness;\r\n    initialValues.weight = materialToUpdate.weight;\r\n  } else {\r\n    initialValues.brand = \"\";\r\n    initialValues.width = \"\";\r\n    initialValues.length = \"\";\r\n    initialValues.thickness = \"\";\r\n    initialValues.weight = \"\";\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (\r\n    { brand, width, length, thickness, weight },\r\n    { resetForm }\r\n  ) => {\r\n    if (!materialToUpdate) {\r\n      const newMaterial = {\r\n        type,\r\n        brand,\r\n        sheetParameters: { width, length, thickness },\r\n        weight,\r\n      };\r\n\r\n      dispatch(addMaterial(newMaterial)).then((res) => {\r\n        if (!res.error) {\r\n          resetForm();\r\n          onClearType();\r\n          onClose();\r\n        }\r\n      });\r\n    } else {\r\n      const data = {\r\n        id: materialToUpdate._id,\r\n        body: {\r\n          type: materialToUpdate.type,\r\n          brand,\r\n          sheetParameters: { width, length, thickness },\r\n          weight,\r\n        },\r\n      };\r\n\r\n      dispatch(updateMaterial(data)).then((res) => {\r\n        if (!res.error) {\r\n          resetForm();\r\n          onClose();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: handleSubmit,\r\n  });\r\n\r\n  return (\r\n    <FormControl\r\n      variant=\"standard\"\r\n      component=\"form\"\r\n      onSubmit={formik.handleSubmit}\r\n      sx={{\r\n        display: \"flex\",\r\n        gap: \"12px\",\r\n        flexDirection: \"column\",\r\n        width: \"100%\",\r\n        padding: materialToUpdate ? \"8px\" : \"0\",\r\n      }}\r\n    >\r\n      <TextField\r\n        id=\"brand\"\r\n        type=\"text\"\r\n        name=\"brand\"\r\n        label=\"Марка матеріалу\"\r\n        placeholder=\"Введіть марку матеріалу\"\r\n        size=\"small\"\r\n        value={formik.values.brand}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.brand && Boolean(formik.errors.brand)}\r\n        helperText={formik.touched.brand && formik.errors.brand}\r\n      />\r\n\r\n      <TextField\r\n        id=\"thickness\"\r\n        type=\"number\"\r\n        name=\"thickness\"\r\n        inputProps={{ min: \"0\", step: \"0.1\" }}\r\n        label=\"Товщина листа, мм.\"\r\n        placeholder=\"Введіть товщину листа.\"\r\n        size=\"small\"\r\n        value={formik.values.thickness}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.thickness && Boolean(formik.errors.thickness)}\r\n        helperText={formik.touched.thickness && formik.errors.thickness}\r\n      />\r\n\r\n      <TextField\r\n        id=\"length\"\r\n        type=\"number\"\r\n        name=\"length\"\r\n        inputProps={{ min: \"0\", step: \"0.1\" }}\r\n        label=\"Довжина листа, мм.\"\r\n        placeholder=\"Введіть довжину листа\"\r\n        size=\"small\"\r\n        value={formik.values.length}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.length && Boolean(formik.errors.length)}\r\n        helperText={formik.touched.length && formik.errors.length}\r\n      />\r\n\r\n      <TextField\r\n        id=\"width\"\r\n        type=\"number\"\r\n        name=\"width\"\r\n        inputProps={{ min: \"0\", step: \"0.1\" }}\r\n        label=\"Ширина листа, мм.\"\r\n        placeholder=\"Введіть ширину листа\"\r\n        size=\"small\"\r\n        value={formik.values.width}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.width && Boolean(formik.errors.width)}\r\n        helperText={formik.touched.width && formik.errors.width}\r\n      />\r\n\r\n      <TextField\r\n        id=\"weight\"\r\n        type=\"number\"\r\n        name=\"weight\"\r\n        inputProps={{ min: \"0\", step: \"0.001\" }}\r\n        label=\"Вага листа,кг.\"\r\n        placeholder=\"Введіть вагу листа\"\r\n        size=\"small\"\r\n        value={formik.values.weight}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.weight && Boolean(formik.errors.weight)}\r\n        helperText={formik.touched.weight && formik.errors.weight}\r\n      />\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        sx={{ width: \"300px\", margin: \"0 auto\" }}\r\n      >\r\n        {!materialToUpdate ? \"Додати матеріал\" : \"Редагувати матеріал\"}\r\n      </Button>\r\n    </FormControl>\r\n  );\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\n\r\nimport { Button, FormControl, TextField } from \"@mui/material\";\r\n\r\nimport {\r\n  addMaterial,\r\n  updateMaterial,\r\n} from \"redux/materials/materialsOperation\";\r\n\r\nconst initialValues = {\r\n  brand: \"\",\r\n  diameter: \"\",\r\n  weight: \"\",\r\n};\r\n\r\nconst validationSchema = yup.object().shape({\r\n  brand: yup.string().required(\"Це поле є обов'язковим\"),\r\n  diameter: yup\r\n    .number()\r\n    .required(\"Це поле є обов'язковим\")\r\n    .moreThan(0, \"Значення повинно бути більше 0\")\r\n    .notOneOf([0], \"Значення не може бути рівним 0\"),\r\n\r\n  weight: yup\r\n    .number()\r\n    .required(\"Це поле є обов'язковим\")\r\n    .moreThan(0, \"Значення повинно бути більше 0\")\r\n    .notOneOf([0], \"Значення не може бути рівним 0\"),\r\n});\r\n\r\nexport const AddRodForm = ({\r\n  type,\r\n  onClearType,\r\n  onClose,\r\n  materialToUpdate = null,\r\n}) => {\r\n  if (materialToUpdate) {\r\n    initialValues.brand = materialToUpdate.brand;\r\n    initialValues.diameter = materialToUpdate.rodParameters.diameter;\r\n    initialValues.weight = materialToUpdate.weight;\r\n  } else {\r\n    initialValues.brand = \"\";\r\n    initialValues.diameter = \"\";\r\n    initialValues.weight = \"\";\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = ({ brand, diameter, weight }, { resetForm }) => {\r\n    if (!materialToUpdate) {\r\n      const newMaterial = {\r\n        type,\r\n        brand,\r\n        rodParameters: { diameter },\r\n        weight,\r\n      };\r\n\r\n      dispatch(addMaterial(newMaterial)).then((res) => {\r\n        if (!res.error) {\r\n          resetForm();\r\n          onClearType();\r\n          onClose();\r\n        }\r\n      });\r\n    } else {\r\n      const data = {\r\n        id: materialToUpdate._id,\r\n        body: {\r\n          type: materialToUpdate.type,\r\n          brand,\r\n          rodParameters: { diameter },\r\n          weight,\r\n        },\r\n      };\r\n\r\n      dispatch(updateMaterial(data)).then((res) => {\r\n        if (!res.error) {\r\n          resetForm();\r\n          onClose();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: handleSubmit,\r\n  });\r\n\r\n  return (\r\n    <FormControl\r\n      variant=\"standard\"\r\n      component=\"form\"\r\n      onSubmit={formik.handleSubmit}\r\n      sx={{\r\n        display: \"flex\",\r\n        gap: \"12px\",\r\n        flexDirection: \"column\",\r\n        width: \"100%\",\r\n        padding: materialToUpdate ? \"8px\" : \"0\",\r\n      }}\r\n    >\r\n      <TextField\r\n        id=\"brand\"\r\n        type=\"text\"\r\n        name=\"brand\"\r\n        label=\"Марка матеріалу\"\r\n        placeholder=\"Введіть марку матеріалу\"\r\n        size=\"small\"\r\n        value={formik.values.brand}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.brand && Boolean(formik.errors.brand)}\r\n        helperText={formik.touched.brand && formik.errors.brand}\r\n      />\r\n\r\n      <TextField\r\n        id=\"diameter\"\r\n        type=\"number\"\r\n        name=\"diameter\"\r\n        inputProps={{ min: \"0\", step: \"0,1\" }}\r\n        label=\"Діаметр круга, мм.\"\r\n        placeholder=\"Введіть діаметр круга\"\r\n        size=\"small\"\r\n        value={formik.values.diameter}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.diameter && Boolean(formik.errors.diameter)}\r\n        helperText={formik.touched.diameter && formik.errors.diameter}\r\n      />\r\n\r\n      <TextField\r\n        id=\"weight\"\r\n        type=\"number\"\r\n        name=\"weight\"\r\n        inputProps={{ min: \"0.001\", step: \"0.001\" }}\r\n        label=\"Вага одного м.п. круга,кг.\"\r\n        placeholder=\"Введіть вагу одного м.п. круга\"\r\n        size=\"small\"\r\n        value={formik.values.weight}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.weight && Boolean(formik.errors.weight)}\r\n        helperText={formik.touched.weight && formik.errors.weight}\r\n      />\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        sx={{ width: \"300px\", margin: \"0 auto\" }}\r\n      >\r\n        {!materialToUpdate ? \"Додати матеріал\" : \"Редагувати матеріал\"}\r\n      </Button>\r\n    </FormControl>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteMaterial } from \"redux/materials/materialsOperation\";\r\n\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Paper,\r\n  IconButton,\r\n} from \"@mui/material\";\r\n\r\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\n\r\nimport { selectMaterials } from \"redux/materials/materialsSelector\";\r\nimport { ModalSmall } from \"components/ModalSmall\";\r\nimport { ModalBig } from \"components/ModalBig\";\r\nimport { ContentModalDelete } from \"components/ContentModalDelete\";\r\nimport { AddSheetForm } from \"components/AddSheetForm\";\r\nimport { AddRodForm } from \"components/AddRodForm\";\r\n\r\nexport const MaterialsList = () => {\r\n  const [showModalUpdate, setShowModaUpdate] = useState(false);\r\n  const [showModalDelete, setShowModalDelete] = useState(false);\r\n  const [idMaterialToDelete, setIdMaterialToDelete] = useState(null);\r\n  const [materialToUpdate, setMaterialToUpdate] = useState(null);\r\n\r\n  const materials = useSelector(selectMaterials);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const openModalUpdate = (material) => {\r\n    setShowModaUpdate(true);\r\n    setMaterialToUpdate(material);\r\n  };\r\n  const closeModalUpdate = () => {\r\n    setMaterialToUpdate(null);\r\n    setShowModaUpdate(false);\r\n  };\r\n\r\n  const openModalDelete = (id) => {\r\n    setShowModalDelete(true);\r\n    setIdMaterialToDelete(id);\r\n  };\r\n  const closeModalDelete = () => {\r\n    setShowModalDelete(false);\r\n  };\r\n  const handleDeleteMaterial = () => {\r\n    dispatch(deleteMaterial(idMaterialToDelete));\r\n    setIdMaterialToDelete(null);\r\n    closeModalDelete();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper}>\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow\r\n              sx={{ position: \"sticky\", top: 0, zIndex: 1, background: \"#fff\" }}\r\n            >\r\n              <TableCell align=\"center\">№ п.п.</TableCell>\r\n              <TableCell align=\"center\">Марка матеріалу</TableCell>\r\n              <TableCell align=\"center\">Cортамент</TableCell>\r\n              <TableCell align=\"center\">Розміри, мм.</TableCell>\r\n              <TableCell align=\"center\">Вага листа, кг.</TableCell>\r\n              <TableCell align=\"center\">Редагувати</TableCell>\r\n              <TableCell align=\"center\">Видалити</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {materials?.map((material, index) => {\r\n              return (\r\n                <TableRow\r\n                  key={material._id}\r\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                >\r\n                  <TableCell align=\"center\">{index + 1}</TableCell>\r\n                  <TableCell align=\"center\">{material.brand}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {material.type === \"sheet\" ? \"Лист\" : \"Круг\"}\r\n                  </TableCell>\r\n\r\n                  {material.type === \"sheet\" && (\r\n                    <TableCell align=\"center\">\r\n                      {material.sheetParameters.thickness.toFixed(1)}x\r\n                      {material.sheetParameters.length}x\r\n                      {material.sheetParameters.width}\r\n                    </TableCell>\r\n                  )}\r\n                  {material.type === \"rod\" && (\r\n                    <TableCell align=\"center\">\r\n                      {material.rodParameters.diameter}\r\n                    </TableCell>\r\n                  )}\r\n\r\n                  <TableCell align=\"center\">{material.weight}</TableCell>\r\n\r\n                  <TableCell align=\"center\">\r\n                    <IconButton\r\n                      sx={{ color: \"#1976d2\" }}\r\n                      aria-label=\"delete\"\r\n                      size=\"medium\"\r\n                      onClick={() => openModalUpdate(material)}\r\n                    >\r\n                      <EditIcon fontSize=\"medium\" />\r\n                    </IconButton>\r\n                  </TableCell>\r\n\r\n                  <TableCell align=\"center\">\r\n                    <IconButton\r\n                      sx={{ color: \"#1976d2\" }}\r\n                      aria-label=\"delete\"\r\n                      size=\"medium\"\r\n                      onClick={() => openModalDelete(material._id)}\r\n                    >\r\n                      <DeleteForeverIcon fontSize=\"medium\" />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <ModalSmall open={showModalDelete} onClose={closeModalDelete}>\r\n        <ContentModalDelete\r\n          title={\"Бажаєте видалити матеріал?\"}\r\n          onDelete={handleDeleteMaterial}\r\n          onClose={closeModalDelete}\r\n        />\r\n      </ModalSmall>\r\n\r\n      <ModalBig open={showModalUpdate} onClose={closeModalUpdate}>\r\n        {materialToUpdate?.type === \"sheet\" && (\r\n          <AddSheetForm\r\n            materialToUpdate={materialToUpdate}\r\n            onClose={closeModalUpdate}\r\n          />\r\n        )}\r\n        {materialToUpdate?.type === \"rod\" && (\r\n          <AddRodForm\r\n            materialToUpdate={materialToUpdate}\r\n            onClose={closeModalUpdate}\r\n          />\r\n        )}\r\n      </ModalBig>\r\n    </>\r\n  );\r\n};\r\n","export const typeMaterialData = [\r\n  { label: \"Лист\", value: \"sheet\" },\r\n  { label: \"Круг\", value: \"rod\" },\r\n];\r\n","import { useState } from \"react\";\r\n\r\nimport { nanoid } from \"nanoid\";\r\n\r\nimport { TextField, Typography, MenuItem, Box } from \"@mui/material\";\r\n\r\nimport { AddSheetForm } from \"components/AddSheetForm\";\r\nimport { AddRodForm } from \"components/AddRodForm\";\r\n\r\nimport { typeMaterialData } from \"data/typeMaterialData\";\r\n\r\nexport const AddMaterialForm = ({ onClose }) => {\r\n  const [materialType, setMaterialType] = useState(\"\");\r\n\r\n  const handleClearType = () => {\r\n    setMaterialType(\"\");\r\n  };\r\n\r\n  const handleTypeChange = (e) => {\r\n    const selectedType = e.target.value;\r\n    setMaterialType(selectedType);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        gap: \"12px\",\r\n        flexDirection: \"column\",\r\n        width: \"100%\",\r\n        padding: \"8px\",\r\n      }}\r\n    >\r\n      {!materialType && <Typography> Виберіть тип матеріалу</Typography>}\r\n\r\n      <TextField\r\n        select\r\n        name=\"type\"\r\n        size=\"small\"\r\n        value={materialType}\r\n        label=\"Тип матеріалу\"\r\n        onChange={handleTypeChange}\r\n      >\r\n        {typeMaterialData.map(({ label, value }) => (\r\n          <MenuItem key={nanoid()} value={value}>\r\n            {label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n\r\n      {materialType === \"sheet\" && (\r\n        <AddSheetForm\r\n          type={materialType}\r\n          onClearType={handleClearType}\r\n          onClose={onClose}\r\n        />\r\n      )}\r\n      {materialType === \"rod\" && (\r\n        <AddRodForm\r\n          type={materialType}\r\n          onClearType={handleClearType}\r\n          onClose={onClose}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n","import { Box, Button } from \"@mui/material\";\r\nimport PostAddIcon from \"@mui/icons-material/PostAdd\";\r\nimport { useState } from \"react\";\r\nimport { ModalBig } from \"components/ModalBig\";\r\nimport { AddMaterialForm } from \"components/AddMaterialForm\";\r\n\r\nexport const MaterialsDashboard = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n  };\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          startIcon={<PostAddIcon />}\r\n          onClick={openModal}\r\n          sx={{ width: \"300px\" }}\r\n        >\r\n          Добавити матеріал\r\n        </Button>\r\n      </Box>\r\n      <ModalBig open={showModal} onClose={closeModal}>\r\n        <AddMaterialForm onClose={closeModal} />\r\n      </ModalBig>\r\n    </>\r\n  );\r\n};\r\n","import { Box } from \"@mui/material\";\r\n\r\nimport { Loader } from \"components/Loader\";\r\nimport { MyContainer } from \"components/MyContainer\";\r\nimport { MaterialsList } from \"components/MaterialsList\";\r\n\r\nimport { MaterialsDashboard } from \"components/MaterialsDashboard\";\r\n\r\nconst Materials = () => {\r\n  return (\r\n    <MyContainer>\r\n      <Box\r\n        sx={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          gap: \"12px\",\r\n          mt: 10,\r\n          mb: 6,\r\n          p: 1,\r\n          borderRadius: 4,\r\n          backgroundColor: \"#f5f5f5\",\r\n          boxShadow: \"0 0 8px 0 rgba(0,0,0,.3)\",\r\n        }}\r\n      >\r\n        <MaterialsDashboard />\r\n        <MaterialsList />\r\n      </Box>\r\n    </MyContainer>\r\n  );\r\n};\r\n\r\nexport default Materials;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12 1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteForever');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 19.22H5V7h7V5H5c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-7h-2v7.22z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 2h-2v3h-3c.01.01 0 2 0 2h3v2.99c.01.01 2 0 2 0V7h3V5h-3V2zM7 9h8v2H7zm0 3v2h8v-2h-3zm0 3h8v2H7z\"\n}, \"1\")], 'PostAdd');\nexports.default = _default;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["ContentModalDelete","onDelete","onClose","title","btnRef","useRef","useEffect","current","focus","focusVisible","Typography","variant","component","align","sx","mb","Box","display","justifyContent","Button","size","onClick","ref","ModalBig","open","children","Modal","position","top","left","transform","width","xs","md","maxWidth","bgcolor","borderRadius","boxShadow","p","IconButton","right","Close","fontSize","color","ModalSmall","disableRestoreFocus","MyContainer","Container","gap","height","selectMaterials","state","materials","items","initialValues","brand","length","thickness","weight","validationSchema","yup","shape","required","moreThan","notOneOf","AddSheetForm","type","onClearType","materialToUpdate","sheetParameters","dispatch","useDispatch","formik","useFormik","onSubmit","resetForm","data","id","_id","body","updateMaterial","then","res","error","newMaterial","addMaterial","FormControl","handleSubmit","flexDirection","padding","TextField","name","label","placeholder","value","values","onChange","handleChange","onBlur","handleBlur","touched","Boolean","errors","helperText","inputProps","min","step","margin","diameter","AddRodForm","rodParameters","MaterialsList","useState","showModalUpdate","setShowModaUpdate","showModalDelete","setShowModalDelete","idMaterialToDelete","setIdMaterialToDelete","setMaterialToUpdate","useSelector","closeModalUpdate","closeModalDelete","TableContainer","Paper","Table","TableHead","TableRow","zIndex","background","TableCell","TableBody","map","material","index","border","toFixed","openModalUpdate","Edit","DeleteForever","deleteMaterial","typeMaterialData","AddMaterialForm","materialType","setMaterialType","handleClearType","select","e","selectedType","target","MenuItem","nanoid","MaterialsDashboard","showModal","setShowModal","closeModal","startIcon","PostAdd","alignItems","mt","backgroundColor","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}