{"version":3,"file":"static/js/598.427cc27f.chunk.js","mappings":"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","sources":["data/fakeAPI.js","components/AddForm/AddForm.jsx","components/Filter/Filter.jsx","components/ProductItem/ProductItem.jsx","components/ProductsList/ProductsList.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","services/products-API.js","pages/Products/Products.jsx"],"sourcesContent":["export const materials = [\r\n  {\r\n    id: \"1\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20.8,\r\n  },\r\n  {\r\n    id: \"2\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 26,\r\n  },\r\n  {\r\n    id: \"3\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 31.2,\r\n  },\r\n  {\r\n    id: \"4\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 39,\r\n  },\r\n  {\r\n    id: \"5\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 52,\r\n  },\r\n  {\r\n    id: \"6\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 65,\r\n  },\r\n  {\r\n    id: \"7\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 78,\r\n  },\r\n  {\r\n    id: \"8\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20.8,\r\n  },\r\n  {\r\n    id: \"9\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 26,\r\n  },\r\n  {\r\n    id: \"10\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 31.2,\r\n  },\r\n  {\r\n    id: \"11\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 39,\r\n  },\r\n  {\r\n    id: \"12\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 52,\r\n  },\r\n  {\r\n    id: \"13\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 65,\r\n  },\r\n  {\r\n    id: \"14\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 78,\r\n  },\r\n  {\r\n    id: \"15\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20,\r\n  },\r\n  {\r\n    id: \"16\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 25,\r\n  },\r\n  {\r\n    id: \"17\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 30,\r\n  },\r\n  {\r\n    id: \"18\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 37.5,\r\n  },\r\n  {\r\n    id: \"19\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 50,\r\n  },\r\n  {\r\n    id: \"20\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 62.5,\r\n  },\r\n  {\r\n    id: \"21\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 75,\r\n  },\r\n  {\r\n    id: \"22\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20,\r\n  },\r\n  {\r\n    id: \"23\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 25,\r\n  },\r\n  {\r\n    id: \"24\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 30,\r\n  },\r\n  {\r\n    id: \"25\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 37.5,\r\n  },\r\n  {\r\n    id: \"26\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 50,\r\n  },\r\n  {\r\n    id: \"27\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 62.5,\r\n  },\r\n  {\r\n    id: \"28\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 75,\r\n  },\r\n];\r\n\r\nexport const getMaterials = () => {\r\n  return materials;\r\n};\r\n","import { nanoid } from \"nanoid\";\r\n\r\nimport { getMaterials } from \"../../data/fakeAPI\";\r\n\r\nconst Workshop = {\r\n  CNC: \"Дільниця з ЧПУ\",\r\n  PRESSING: \"Штамповочна дільниця\",\r\n};\r\n\r\nexport const AddForm = ({ onSubmit, onClose, productForUpdate }) => {\r\n  const nameInputId = nanoid();\r\n  const numberInputId = nanoid();\r\n  const quantityInputId = nanoid();\r\n  const weightInputId = nanoid();\r\n\r\n  //  визначаємо унікальни розміри листів та товщини листів\r\n  // треба прописати через функцію яка буде фільтрувати унікальні елементи в масивіЙЙ\r\n\r\n  const materials = getMaterials();\r\n\r\n  const valuesSheet = materials\r\n    .map(({ sizeSheet }) => sizeSheet)\r\n    .filter((sizeSheet, index, array) => array.indexOf(sizeSheet) === index);\r\n\r\n  const valuesThikness = materials\r\n    .map(({ thicknessSheet }) => thicknessSheet)\r\n    .filter(\r\n      (thicknessSheet, index, array) => array.indexOf(thicknessSheet) === index\r\n    );\r\n\r\n  console.log(\"productForUpdate в  формі\", productForUpdate);\r\n\r\n  const initialValues = {};\r\n\r\n  if (productForUpdate) {\r\n    initialValues.name = productForUpdate.name;\r\n    initialValues.number = productForUpdate.number;\r\n    initialValues.weight = productForUpdate.weight;\r\n\r\n    initialValues.quantity = productForUpdate.quantity;\r\n    initialValues.workshop = productForUpdate.workshop;\r\n    initialValues.thickness = productForUpdate.material.thickness;\r\n    initialValues.sheet = productForUpdate.material.sheet;\r\n    console.log(initialValues);\r\n\r\n    console.log(\"ми тут\");\r\n  }\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const form = evt.currentTarget;\r\n\r\n    const name = form.elements.name.value;\r\n    const number = form.elements.number.value;\r\n    const weight = form.elements.weight.value;\r\n    const quantity = form.elements.quantity.value;\r\n    const workshop = form.elements.workshop.value;\r\n    const thickness = form.elements.thickness.value;\r\n    const sheet = form.elements.sheet.value;\r\n\r\n    onSubmit({\r\n      name,\r\n      number,\r\n      weight,\r\n      quantity,\r\n      workshop,\r\n      thickness,\r\n      sheet,\r\n    });\r\n\r\n    onClose();\r\n    form.reset();\r\n  };\r\n\r\n  return (\r\n    <form style={{ display: \" inline-grid\" }} onSubmit={handleSubmit}>\r\n      <label htmlFor={nameInputId}>Найменування</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id={nameInputId}\r\n        defaultValue={initialValues.name}\r\n      />\r\n      <label htmlFor={numberInputId}>Децимальний номер</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"number\"\r\n        id={numberInputId}\r\n        defaultValue={initialValues.number}\r\n      />\r\n      <label htmlFor={weightInputId}>Вага деталі, кг.</label>\r\n\r\n      <input\r\n        type=\"number\"\r\n        name=\"weight\"\r\n        min=\"0\"\r\n        step=\"0.001\"\r\n        id={weightInputId}\r\n        defaultValue={initialValues.weight}\r\n      />\r\n\r\n      <label htmlFor={quantityInputId}>Кількість деталей з листа, шт.</label>\r\n      <input\r\n        type=\"number\"\r\n        name=\"quantity\"\r\n        min=\"1\"\r\n        id={quantityInputId}\r\n        defaultValue={initialValues.quantity}\r\n      />\r\n      <p>Виберіть виробничу дільницю</p>\r\n      <label>\r\n        ЧПУ\r\n        <input\r\n          type=\"radio\"\r\n          name=\"workshop\"\r\n          value={Workshop.CNC}\r\n          defaultChecked={initialValues.workshop === Workshop.CNC}\r\n        />\r\n      </label>\r\n      <label>\r\n        Штамповка\r\n        <input\r\n          type=\"radio\"\r\n          name=\"workshop\"\r\n          value={Workshop.PRESSING}\r\n          defaultChecked={initialValues.workshop === Workshop.PRESSING}\r\n        />\r\n      </label>\r\n      <label>\r\n        Товщина матеріалу:\r\n        <select name=\"thickness\" defaultValue={initialValues.thickness}>\r\n          {valuesThikness.map((value) => (\r\n            <option key={nanoid()} value={value}>\r\n              {value} мм.\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n      <label>\r\n        Розмір листа матеріалу:\r\n        <select name=\"sheet\" defaultValue={initialValues.sheet}>\r\n          {valuesSheet.map((material) => (\r\n            <option key={nanoid()} value={material}>\r\n              {material}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n      {/* {розглянути можливість формування опцій з файлу даних} */}\r\n      {/* <label>\r\n        Всі дані введені вірно\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={agreed}\r\n          onChange={handleChangeChecked}\r\n        />\r\n      </label> */}\r\n      {/* групування полів */}\r\n      <button type=\"submit\">\r\n        {!productForUpdate ? (\r\n          <span>Додати деталь до списку</span>\r\n        ) : (\r\n          <span>Гедагувати дані про деталь</span>\r\n        )}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n","export const Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div>\r\n      <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\r\n    </div>\r\n  );\r\n};\r\n","export const ProductItem = ({\r\n  id,\r\n  name,\r\n  number,\r\n  onDeleteProduct,\r\n  onOpenModalOnUpdate,\r\n}) => {\r\n  return (\r\n    <li>\r\n      <p>\r\n        {name} - {number}\r\n      </p>\r\n\r\n      <button type=\"button\" onClick={() => onDeleteProduct(id)}>\r\n        Видалити\r\n      </button>\r\n\r\n      <button type=\"button\" onClick={() => onOpenModalOnUpdate(id)}>\r\n        Редагувати\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n","import { ProductItem } from \"../ProductItem\";\r\n\r\nimport List from \"@mui/material/List\";\r\n\r\nexport const ProductsList = ({\r\n  products,\r\n  onDeleteProduct,\r\n  onOpenModalOnUpdate,\r\n}) => {\r\n  return (\r\n    <List\r\n      sx={{\r\n        width: \"100%\",\r\n        maxWidth: 360,\r\n        bgcolor: \"background.paper\",\r\n        position: \"relative\",\r\n        overflow: \"auto\",\r\n        maxHeight: \"75vh\",\r\n        \"& ul\": { padding: 0 },\r\n      }}\r\n    >\r\n      {products.map(({ _id, name, number }) => {\r\n        return (\r\n          <ProductItem\r\n            key={_id}\r\n            id={_id}\r\n            name={name}\r\n            number={number}\r\n            onDeleteProduct={onDeleteProduct}\r\n            onOpenModalOnUpdate={onOpenModalOnUpdate}\r\n          />\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ModalBackdrop = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nexport const ModalContet = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  max-height: 450px;\r\n  height: 100%;\r\n\r\n  max-width: 450px;\r\n  width: 100%;\r\n  background-color: #fff;\r\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\r\n    0px 2px 1px rgba(0, 0, 0, 0.2);\r\n  border-radius: 4px;\r\n  border: 2px solid #fff;\r\n`;\r\n","import { createPortal } from \"react-dom\";\r\n\r\nimport { ModalBackdrop, ModalContet } from \"./Modal.styled\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport const Modal = ({ children, onClose }) => {\r\n  const hendleBackdropClick = (evt) => {\r\n    if (evt.target === evt.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n  return createPortal(\r\n    <ModalBackdrop onClick={hendleBackdropClick}>\r\n      <ModalContet>{children}</ModalContet>\r\n    </ModalBackdrop>,\r\n    modalRoot\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://technology-backend.onrender.com/api\";\r\n\r\nexport const fetchAllProductAPI = async () => {\r\n  const { data } = await axios.get(\"/products\");\r\n  return data;\r\n};\r\n\r\nexport const fetchProductAPI = async () => {};\r\n\r\nexport const addProductAPI = async (body) => {\r\n  const { data } = await axios.post(\"/products\", body);\r\n  return data;\r\n};\r\n\r\nexport const removeProductAPI = async (id) => {\r\n  const { data } = await axios.delete(`/products/${id}`);\r\n  return data;\r\n};\r\n\r\nexport const updateProductAPI = async (id, body) => {\r\n  const { data } = await axios.put(`/products/${id}`, body);\r\n  return data;\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport { Container } from \"@mui/material\";\r\n\r\nimport { AddForm } from \"../../components/AddForm\";\r\nimport { Filter } from \"../../components/Filter\";\r\nimport { ProductsList } from \"../../components/ProductsList\";\r\n// import { ProductDetails } from \"../../components/ProductDetails/ProductDetails\";\r\nimport { Modal } from \"../../components/Modal\";\r\n\r\nimport * as API from \"../../services/products-API\";\r\n\r\nconst Products = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [filter, setFilter] = useState(\"\");\r\n  // const [isUpdate, setIsUpdate] = useState(false);\r\n  const [productForUpdate, setProductForUpdate] = useState(null);\r\n\r\n  // const [selectedProduct, setSelectedProduct] = useState(null);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n    setProductForUpdate(null);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    // setIsUpdate(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getAllProducts() {\r\n      try {\r\n        const { data } = await API.fetchAllProductAPI();\r\n        setProducts(data.products);\r\n      } catch (error) {}\r\n    }\r\n    getAllProducts();\r\n  }, []);\r\n\r\n  // const selectProduct = (idProduct) => {\r\n  //   setSelectedProduct(products.find((product) => product.id === idProduct));\r\n\r\n  // дописати логігу вибраного продукту\r\n  // };\r\n\r\n  const addProduct = async ({\r\n    name,\r\n    number,\r\n    weight,\r\n    quantity,\r\n    workshop,\r\n    thickness,\r\n    sheet,\r\n  }) => {\r\n    const newProduct = {\r\n      name,\r\n      number,\r\n      weight,\r\n      quantity,\r\n      workshop,\r\n      material: {\r\n        thickness,\r\n        sheet,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await API.addProductAPI(newProduct);\r\n\r\n      setProducts((prevProducts) => [data.product, ...prevProducts]);\r\n    } catch (error) {\r\n    } finally {\r\n    }\r\n  };\r\n\r\n  const deleteProduct = async (id) => {\r\n    try {\r\n      const response = await API.removeProductAPI(id);\r\n      setProducts((prevProducts) =>\r\n        prevProducts.filter(({ _id }) => _id !== response.id)\r\n      );\r\n    } catch (error) {\r\n      console.log(error.mesage);\r\n    }\r\n  };\r\n\r\n  const openModalOnUpdate = async (id) => {\r\n    openModal();\r\n    console.log(\"відправляємо на редагування\");\r\n    setProductForUpdate(() => products.find((product) => product._id === id));\r\n  };\r\n\r\n  const updateProduct = async ({\r\n    name,\r\n    number,\r\n    weight,\r\n    quantity,\r\n    workshop,\r\n    thickness,\r\n    sheet,\r\n  }) => {\r\n    const updateData = {\r\n      name,\r\n      number,\r\n      weight,\r\n      quantity,\r\n      workshop,\r\n      material: {\r\n        thickness,\r\n        sheet,\r\n      },\r\n    };\r\n\r\n    console.log(\"редагуємо\");\r\n    console.log(\"productForUpdate._id\", productForUpdate._id);\r\n    console.log(\"updateData\", updateData);\r\n\r\n    try {\r\n      const response = await API.updateProductAPI(\r\n        productForUpdate._id,\r\n        updateData\r\n      );\r\n      // мені здається що можна змінити тут більш простим методом\r\n\r\n      setProducts((prevProducts) => {\r\n        const indexUpdatedProduct = prevProducts.findIndex(\r\n          (product) => product._id === productForUpdate._id\r\n        );\r\n\r\n        if (indexUpdatedProduct !== -1) {\r\n          prevProducts[indexUpdatedProduct] = {\r\n            ...prevProducts[indexUpdatedProduct],\r\n            ...response.data,\r\n          };\r\n        }\r\n\r\n        const updatetedProducts = [...prevProducts];\r\n        return updatetedProducts;\r\n      });\r\n    } catch (error) {}\r\n  };\r\n\r\n  const handleChangeFilter = (evt) => {\r\n    const { value } = evt.currentTarget;\r\n    setFilter(value);\r\n  };\r\n\r\n  const getVisibelProducts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return products.filter(\r\n      (product) =>\r\n        product.name.toLowerCase().includes(normalizedFilter) ||\r\n        product.number.startsWith(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  const visibleProducts = getVisibelProducts();\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"sm\">\r\n        <button type=\"button\" onClick={openModal}>\r\n          Добавити деталь до списку\r\n        </button>\r\n\r\n        <p>тут буде лист з продукцією</p>\r\n        <Filter value={filter} onChange={handleChangeFilter} />\r\n        <ProductsList\r\n          products={visibleProducts}\r\n          onDeleteProduct={deleteProduct}\r\n          onOpenModalOnUpdate={openModalOnUpdate}\r\n        />\r\n      </Container>\r\n      {showModal && (\r\n        <Modal onClose={closeModal}>\r\n          <AddForm\r\n            onSubmit={!productForUpdate ? addProduct : updateProduct}\r\n            onClose={closeModal}\r\n            productForUpdate={productForUpdate}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n"],"names":["materials","id","sizeSheet","thicknessSheet","weightSheet","getMaterials","Workshop","AddForm","onSubmit","onClose","productForUpdate","nameInputId","nanoid","numberInputId","quantityInputId","weightInputId","valuesSheet","map","filter","index","array","indexOf","valuesThikness","console","log","initialValues","name","number","weight","quantity","workshop","thickness","material","sheet","style","display","evt","preventDefault","form","currentTarget","elements","value","reset","htmlFor","type","defaultValue","min","step","defaultChecked","Filter","onChange","ProductItem","onDeleteProduct","onOpenModalOnUpdate","onClick","ProductsList","products","List","sx","width","maxWidth","bgcolor","position","overflow","maxHeight","padding","_id","ModalBackdrop","styled","ModalContet","modalRoot","document","querySelector","Modal","children","createPortal","target","axios","fetchAllProductAPI","data","addProductAPI","body","removeProductAPI","updateProductAPI","useState","setProducts","setFilter","setProductForUpdate","showModal","setShowModal","openModal","closeModal","useEffect","API","getAllProducts","addProduct","newProduct","prevProducts","product","deleteProduct","response","mesage","openModalOnUpdate","find","updateProduct","updateData","indexUpdatedProduct","findIndex","visibleProducts","normalizedFilter","toLowerCase","includes","startsWith","getVisibelProducts","Container"],"sourceRoot":""}