{"version":3,"file":"static/js/691.a4c1465b.chunk.js","mappings":"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","sources":["data/fakeAPI.js","pages/Materials/Materials.jsx"],"sourcesContent":["export const materials = [\r\n  {\r\n    id: \"1\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20.8,\r\n  },\r\n  {\r\n    id: \"2\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 26,\r\n  },\r\n  {\r\n    id: \"3\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 31.2,\r\n  },\r\n  {\r\n    id: \"4\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 39,\r\n  },\r\n  {\r\n    id: \"5\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 52,\r\n  },\r\n  {\r\n    id: \"6\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 65,\r\n  },\r\n  {\r\n    id: \"7\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 78,\r\n  },\r\n  {\r\n    id: \"8\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20.8,\r\n  },\r\n  {\r\n    id: \"9\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 26,\r\n  },\r\n  {\r\n    id: \"10\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 31.2,\r\n  },\r\n  {\r\n    id: \"11\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 39,\r\n  },\r\n  {\r\n    id: \"12\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 52,\r\n  },\r\n  {\r\n    id: \"13\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 65,\r\n  },\r\n  {\r\n    id: \"14\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 78,\r\n  },\r\n  {\r\n    id: \"15\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20,\r\n  },\r\n  {\r\n    id: \"16\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 25,\r\n  },\r\n  {\r\n    id: \"17\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 30,\r\n  },\r\n  {\r\n    id: \"18\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 37.5,\r\n  },\r\n  {\r\n    id: \"19\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 50,\r\n  },\r\n  {\r\n    id: \"20\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 62.5,\r\n  },\r\n  {\r\n    id: \"21\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 75,\r\n  },\r\n  {\r\n    id: \"22\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20,\r\n  },\r\n  {\r\n    id: \"23\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 25,\r\n  },\r\n  {\r\n    id: \"24\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 30,\r\n  },\r\n  {\r\n    id: \"25\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 37.5,\r\n  },\r\n  {\r\n    id: \"26\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 50,\r\n  },\r\n  {\r\n    id: \"27\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 62.5,\r\n  },\r\n  {\r\n    id: \"28\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 75,\r\n  },\r\n];\r\n\r\nexport const getMaterials = () => {\r\n  return materials;\r\n};\r\n","import { useState } from \"react\";\r\n\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\n// import TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\n\r\nimport { getMaterials } from \"../../data/fakeAPI\";\r\n// import { autocompleteClasses } from \"@mui/material\";\r\n\r\nconst columns = [\r\n  { id: \"index\", label: \"№ п.п\", minWidth: 50, align: \"center\" },\r\n  {\r\n    id: \"sizeSheet\",\r\n    label: \"Розмір та тип листа\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"thicknessSheet\",\r\n    label: \"Товщина листа, мм\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n    // format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"weightSheet\",\r\n    label: \"Вага листа, мм.\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n  {\r\n    id: \"event\",\r\n    label: \"Видалити\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n  },\r\n];\r\n\r\nconst Materials = () => {\r\n  const [materials, setMaterials] = useState(getMaterials());\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        width: 850,\r\n        // overflow: \"hidden\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n      }}\r\n    >\r\n      <TableContainer>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {materials.map((material, index) => {\r\n              return (\r\n                <>\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    tabIndex={-1}\r\n                    key={material.id}\r\n                  >\r\n                    {columns.map((column) => {\r\n                      let value = null;\r\n                      if (column.id === \"index\") {\r\n                        value = index + 1;\r\n                      } else {\r\n                        value = material[column.id];\r\n                      }\r\n                      if (column.id === \"event\") {\r\n                        value = <button>Видалити дані</button>;\r\n                      }\r\n\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === \"number\"\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                </>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {/* <table>\r\n        <thead>\r\n          <tr>\r\n            <th>№ п.п </th>\r\n            <th>Розмір та тип листа</th>\r\n            <th>Товщина листа, мм.</th>\r\n            <th>Вага листа, мм.</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {materials.map(\r\n            ({ id, sizeSheet, thicknessSheet, weightSheet }, index) => (\r\n              <tr key={id}>\r\n                <td>{index + 1}</td>\r\n                <td> {sizeSheet}</td>\r\n                <td>{thicknessSheet}</td>\r\n                <td>{weightSheet}</td>\r\n              </tr>\r\n            )\r\n          )}\r\n        </tbody>\r\n      </table> */}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Materials;\r\n"],"names":["materials","id","sizeSheet","thicknessSheet","weightSheet","getMaterials","columns","label","minWidth","align","format","value","toFixed","useState","Paper","sx","width","marginLeft","marginRight","TableContainer","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","style","TableBody","material","index","hover","role","tabIndex"],"sourceRoot":""}