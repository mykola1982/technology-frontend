{"version":3,"file":"static/js/630.9563a18b.chunk.js","mappings":"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","sources":["data/fakeAPI.js","services/products-API.js","components/AddForm/AddForm.jsx","components/ProductItem/ProductItem.jsx","components/ProductsList/ProductsList.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","pages/Products/Products.jsx"],"sourcesContent":["export const materials = [\r\n  {\r\n    id: \"1\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20.8,\r\n  },\r\n  {\r\n    id: \"2\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 26,\r\n  },\r\n  {\r\n    id: \"3\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 31.2,\r\n  },\r\n  {\r\n    id: \"4\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 39,\r\n  },\r\n  {\r\n    id: \"5\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 52,\r\n  },\r\n  {\r\n    id: \"6\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 65,\r\n  },\r\n  {\r\n    id: \"7\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 78,\r\n  },\r\n  {\r\n    id: \"8\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20.8,\r\n  },\r\n  {\r\n    id: \"9\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 26,\r\n  },\r\n  {\r\n    id: \"10\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 31.2,\r\n  },\r\n  {\r\n    id: \"11\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 39,\r\n  },\r\n  {\r\n    id: \"12\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 52,\r\n  },\r\n  {\r\n    id: \"13\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 65,\r\n  },\r\n  {\r\n    id: \"14\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 78,\r\n  },\r\n  {\r\n    id: \"15\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20,\r\n  },\r\n  {\r\n    id: \"16\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 25,\r\n  },\r\n  {\r\n    id: \"17\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 30,\r\n  },\r\n  {\r\n    id: \"18\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 37.5,\r\n  },\r\n  {\r\n    id: \"19\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 50,\r\n  },\r\n  {\r\n    id: \"20\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 62.5,\r\n  },\r\n  {\r\n    id: \"21\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 75,\r\n  },\r\n  {\r\n    id: \"22\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20,\r\n  },\r\n  {\r\n    id: \"23\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 25,\r\n  },\r\n  {\r\n    id: \"24\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 30,\r\n  },\r\n  {\r\n    id: \"25\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 37.5,\r\n  },\r\n  {\r\n    id: \"26\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 50,\r\n  },\r\n  {\r\n    id: \"27\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 62.5,\r\n  },\r\n  {\r\n    id: \"28\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 75,\r\n  },\r\n];\r\n\r\nexport const getMaterials = () => {\r\n  return materials;\r\n};\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://technology-backend.onrender.com/api\";\r\n\r\nexport const fetchAllProductAPI = async () => {\r\n  const { data } = await axios.get(\"/products\");\r\n  return data;\r\n};\r\n\r\nexport const fetchProductAPI = async () => {};\r\n\r\nexport const addProductAPI = async (body) => {\r\n  const { data } = await axios.post(\"/products\", body);\r\n  return data;\r\n};\r\n\r\nexport const deleteProductAPI = async () => {};\r\n\r\nexport const updateProductAPI = async () => {};\r\n","import { nanoid } from \"nanoid\";\r\nimport { useState } from \"react\";\r\n\r\nimport { getMaterials } from \"../../data/fakeAPI\";\r\n\r\nimport * as API from \"../../services/products-API\";\r\n\r\nconst Workshop = {\r\n  CNC: \"Дільниця з ЧПУ\",\r\n  PRESSING: \"Штамповочна дільниця\",\r\n};\r\n\r\nexport const AddForm = ({ onSubmit, onClose }) => {\r\n  const nameInputId = nanoid();\r\n  const numberInputId = nanoid();\r\n  const quantityInputId = nanoid();\r\n  const weightInputId = nanoid();\r\n\r\n  //  визначаємо унікальни розміри листів та товщини листів\r\n  // треба прописати через функцію яка буде фільтрувати унікальні елементи в масивіЙЙ\r\n\r\n  const materials = getMaterials();\r\n\r\n  const valuesSheet = materials\r\n    .map(({ sizeSheet }) => sizeSheet)\r\n    .filter((sizeSheet, index, array) => array.indexOf(sizeSheet) === index);\r\n\r\n  const valuesThikness = materials\r\n    .map(({ thicknessSheet }) => thicknessSheet)\r\n    .filter(\r\n      (thicknessSheet, index, array) => array.indexOf(thicknessSheet) === index\r\n    );\r\n\r\n  // стейт що контролює вибір виробничої дільниці цеху\r\n  //   const [department, setDepartment] = useState(\"\");\r\n\r\n  // стейт що контролює кнопку сабміту форми через чекбокс\r\n  const [agreed, setAgreed] = useState(false);\r\n\r\n  const handleChangeChecked = (evt) => {\r\n    setAgreed(evt.target.checked);\r\n  };\r\n\r\n  const handleSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n    const form = evt.currentTarget;\r\n\r\n    const name = form.elements.name.value;\r\n    const number = form.elements.number.value;\r\n    const weight = form.elements.weight.value;\r\n    const quantity = form.elements.quantity.value;\r\n    const workshop = form.elements.workshop.value;\r\n    const thickness = form.elements.thickness.value;\r\n    const sheet = form.elements.sheet.value;\r\n\r\n    onSubmit({\r\n      name,\r\n      number,\r\n      weight,\r\n      quantity,\r\n      workshop,\r\n      thickness,\r\n      sheet,\r\n    });\r\n    //   почитати про форм дата FormData\r\n    onClose();\r\n    form.reset();\r\n  };\r\n\r\n  return (\r\n    <form style={{ display: \" inline-grid\" }} onSubmit={handleSubmit}>\r\n      <label htmlFor={nameInputId}>Найменування</label>\r\n      <input type=\"text\" name=\"name\" id={nameInputId} />\r\n      <label htmlFor={numberInputId}>Децимальний номер</label>\r\n      <input type=\"text\" name=\"number\" id={numberInputId} />\r\n      <label htmlFor={weightInputId}>Вага деталі, кг.</label>\r\n\r\n      <input\r\n        type=\"number\"\r\n        name=\"weight\"\r\n        min=\"0\"\r\n        step=\"0.001\"\r\n        id={weightInputId}\r\n      />\r\n\r\n      <label htmlFor={quantityInputId}>Кількість деталей з листа, шт.</label>\r\n      <input type=\"number\" name=\"quantity\" min=\"1\" id={quantityInputId} />\r\n      <p>Виберіть виробничу дільницю</p>\r\n      <label>\r\n        ЧПУ\r\n        <input\r\n          type=\"radio\"\r\n          checked\r\n          name=\"workshop\"\r\n          value={Workshop.CNC}\r\n          //   onChange={ }\r\n        />\r\n      </label>\r\n      <label>\r\n        Штамповка\r\n        <input\r\n          type=\"radio\"\r\n          //   checked={department === Department.PRESSING}\r\n          name=\"workshop\"\r\n          value={Workshop.PRESSING}\r\n          //   onChange={}\r\n        />\r\n      </label>\r\n      <label>\r\n        Товщина матеріалу:\r\n        <select name=\"thickness\">\r\n          {valuesThikness.map((value) => (\r\n            <option key={nanoid()} value={value}>\r\n              {value} мм.\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n      <label>\r\n        Розмір листа матеріалу:\r\n        <select name=\"sheet\">\r\n          {valuesSheet.map((material) => (\r\n            <option key={nanoid()} value={material}>\r\n              {material}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n      {/* {розглянути можливість формування опцій з файлу даних} */}\r\n      <label>\r\n        Всі дані введені вірно\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={agreed}\r\n          onChange={handleChangeChecked}\r\n        />\r\n      </label>\r\n      {/* групування полів */}\r\n      <button type=\"submit\" disabled={!agreed}>\r\n        Додати деталь до списку\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n","export const ProductItem = ({ id, name, number, onSelectProduct }) => {\r\n  return (\r\n    <li\r\n      onClick={() => {\r\n        onSelectProduct(id);\r\n      }}\r\n      onFocus={() => console.log(id)}\r\n      style={{ cursor: \"pointer\" }}\r\n    >\r\n      <p>\r\n        {name} - {number}\r\n      </p>\r\n    </li>\r\n  );\r\n};\r\n","import { ProductItem } from \"../ProductItem\";\r\n\r\nimport List from \"@mui/material/List\";\r\n\r\nexport const ProductsList = ({ products, onSelectProduct }) => {\r\n  return (\r\n    <List\r\n      sx={{\r\n        width: \"100%\",\r\n        maxWidth: 360,\r\n        bgcolor: \"background.paper\",\r\n        position: \"relative\",\r\n        overflow: \"auto\",\r\n        maxHeight: \"75vh\",\r\n        \"& ul\": { padding: 0 },\r\n      }}\r\n    >\r\n      {products.map(({ _id, name, number }) => {\r\n        return (\r\n          <ProductItem\r\n            key={_id}\r\n            id={_id}\r\n            name={name}\r\n            number={number}\r\n            onSelectProduct={onSelectProduct}\r\n          />\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ModalBackdrop = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nexport const ModalContet = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  max-height: 450px;\r\n  height: 100%;\r\n\r\n  max-width: 450px;\r\n  width: 100%;\r\n  background-color: #fff;\r\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\r\n    0px 2px 1px rgba(0, 0, 0, 0.2);\r\n  border-radius: 4px;\r\n  border: 2px solid #fff;\r\n`;\r\n","import { createPortal } from \"react-dom\";\r\n\r\nimport { ModalBackdrop, ModalContet } from \"./Modal.styled\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport const Modal = ({ children, onClose }) => {\r\n  const hendleBackdropClick = (evt) => {\r\n    if (evt.target === evt.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n  return createPortal(\r\n    <ModalBackdrop onClick={hendleBackdropClick}>\r\n      <ModalContet>{children}</ModalContet>\r\n    </ModalBackdrop>,\r\n    modalRoot\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport { Container } from \"@mui/material\";\r\n\r\nimport { AddForm } from \"../../components/AddForm\";\r\n// import { Filter } from \"../../components/Filter\";\r\nimport { ProductsList } from \"../../components/ProductsList\";\r\n// import { ProductDetails } from \"../../components/ProductDetails/ProductDetails\";\r\nimport { Modal } from \"../../components/Modal\";\r\n\r\nimport * as API from \"../../services/products-API\";\r\n\r\nconst Products = () => {\r\n  // const [filter, setFilter] = useState(\"\");\r\n  // const [selectedProduct, setSelectedProduct] = useState(null);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getAllProducts() {\r\n      try {\r\n        const { data } = await API.fetchAllProductAPI();\r\n        setProducts(data.products);\r\n      } catch (error) {}\r\n    }\r\n    getAllProducts();\r\n  }, []);\r\n\r\n  // const selectProduct = (idProduct) => {\r\n  //   setSelectedProduct(products.find((product) => product.id === idProduct));\r\n\r\n  // дописати логігу вибраного продукту\r\n  // };\r\n\r\n  const addProduct = async ({\r\n    name,\r\n    number,\r\n    weight,\r\n    quantity,\r\n    workshop,\r\n    thickness,\r\n    sheet,\r\n  }) => {\r\n    const newProduct = {\r\n      name,\r\n      number,\r\n      weight,\r\n      quantity,\r\n      workshop,\r\n      material: {\r\n        thickness,\r\n        sheet,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await API.addProductAPI(newProduct);\r\n      console.log(\"при додаванні\", data.product);\r\n      setProducts((prevProducts) => [data.product, ...prevProducts]);\r\n    } catch (error) {\r\n    } finally {\r\n    }\r\n\r\n    // setProducts((prevProducts) => [newProduct, ...prevProducts]);\r\n  };\r\n\r\n  // const handleChangeFilter = (evt) => {\r\n  //   const { value } = evt.currentTarget;\r\n  //   setFilter(value);\r\n  // };\r\n\r\n  // const getVisibelProducts = () => {\r\n  //   const normalizedFilter = filter.toLowerCase();\r\n  //   return products.filter(\r\n  //     (product) =>\r\n  //       product.name.toLowerCase().includes(normalizedFilter) ||\r\n  //       product.number.startsWith(normalizedFilter)\r\n  //   );\r\n  // };\r\n\r\n  // const visibleProducts = getVisibelProducts();\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"sm\">\r\n        <button type=\"button\" onClick={openModal}>\r\n          Добавити деталь до списку\r\n        </button>\r\n\r\n        <p>тут буде лист з продукцією</p>\r\n        {/* <Filter value={filter} onChange={handleChangeFilter} /> */}\r\n        <ProductsList\r\n          products={products}\r\n          // onSelectProduct={selectProduct}\r\n        />\r\n\r\n        {/* {selectedProduct ? (\r\n          <ProductDetails product={selectedProduct} />\r\n        ) : (\r\n          <div> тут буде вибраний продукт </div>\r\n        )} */}\r\n      </Container>\r\n      {showModal && (\r\n        <Modal onClose={closeModal}>\r\n          <AddForm onSubmit={addProduct} onClose={closeModal} />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n"],"names":["materials","id","sizeSheet","thicknessSheet","weightSheet","getMaterials","axios","fetchAllProductAPI","data","addProductAPI","body","Workshop","AddForm","onSubmit","onClose","nameInputId","nanoid","numberInputId","quantityInputId","weightInputId","valuesSheet","map","filter","index","array","indexOf","valuesThikness","useState","agreed","setAgreed","handleSubmit","evt","preventDefault","form","currentTarget","name","elements","value","number","weight","quantity","workshop","thickness","sheet","reset","style","display","htmlFor","type","min","step","checked","material","onChange","target","disabled","ProductItem","onSelectProduct","onClick","onFocus","console","log","cursor","ProductsList","products","List","sx","width","maxWidth","bgcolor","position","overflow","maxHeight","padding","_id","ModalBackdrop","styled","ModalContet","modalRoot","document","querySelector","Modal","children","createPortal","showModal","setShowModal","closeModal","setProducts","useEffect","API","getAllProducts","addProduct","newProduct","product","prevProducts","Container"],"sourceRoot":""}