{"version":3,"file":"static/js/658.56909aef.chunk.js","mappings":"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","sources":["components/ContentModalDelete/ContentModalDelete.jsx","components/ModalBig/ModalBig.jsx","components/ModalSmall/ModalSmall.jsx","components/MyContainer/MyContainer.jsx","redux/materials/materialsSelector.js","components/MaterialsList/MaterialsList.jsx","components/AddSheetForm/AddSheetForm.jsx","components/AddRodForm/AddRodForm.jsx","data/typeMaterialData.js","components/AddMaterialForm/AddMaterialForm.jsx","components/MaterialsDashboard/MaterialsDashboard.jsx","pages/Materials/Materials.jsx","../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/icons-material/DeleteForever.js","../node_modules/@mui/icons-material/Edit.js","../node_modules/@mui/icons-material/PostAdd.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\n\r\nimport { Box, Button, Typography } from \"@mui/material\";\r\n\r\nexport const ContentModalDelete = ({ onDelete, onClose, title }) => {\r\n  const btnRef = useRef();\r\n\r\n  useEffect(() => {\r\n    btnRef.current.focus({ focusVisible: true });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" component=\"p\" align=\"center\" sx={{ mb: 2 }}>\r\n        {title}\r\n      </Typography>\r\n      <Box sx={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\r\n        <Button variant=\"contained\" size=\"small\" onClick={() => onDelete()}>\r\n          Так\r\n        </Button>\r\n        <Button\r\n          ref={btnRef}\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n          onClick={() => onClose()}\r\n        >\r\n          Hi\r\n        </Button>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n","import { Modal, Box, IconButton } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nexport const ModalBig = ({ open, children, onClose }) => {\r\n  return (\r\n    <Modal open={open}>\r\n      <Box\r\n        sx={{\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          width: { xs: \"100%\", md: \"500px\" },\r\n          maxWidth: \"500px\",\r\n          bgcolor: \"#fff\",\r\n          borderRadius: 2,\r\n          boxShadow:\r\n            \"0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),  0px 2px 1px rgba(0, 0, 0, 0.2)\",\r\n          p: 4,\r\n        }}\r\n      >\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          size=\"medium\"\r\n          onClick={() => onClose()}\r\n          sx={{ position: \"absolute\", top: 3, right: 3 }}\r\n        >\r\n          <CloseIcon fontSize=\"medium\" sx={{ color: \"#1976d2\" }} />\r\n        </IconButton>\r\n        {children}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n","import { Modal, Box } from \"@mui/material\";\r\n\r\nexport const ModalSmall = ({ open, onClose, children }) => {\r\n  return (\r\n    <Modal open={open} onClose={onClose} disableRestoreFocus>\r\n      <Box\r\n        sx={{\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          maxWidth: \"460px\",\r\n          bgcolor: \"#fff\",\r\n          borderRadius: 2,\r\n          boxShadow:\r\n            \"0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),  0px 2px 1px rgba(0, 0, 0, 0.2)\",\r\n          p: 4,\r\n        }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n","import { Container } from \"@mui/material\";\r\n\r\nexport const MyContainer = ({ children }) => {\r\n  return (\r\n    <Container\r\n      maxWidth=\"xl\"\r\n      sx={{\r\n        display: \"flex\",\r\n        gap: 2,\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n","export const selectMaterials = (state) => state.materials.items;\r\nexport const selectIsLoading = (state) => state.materials.isLoading;\r\nexport const selectError = (state) => state.materials.errors;\r\n","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteMaterial } from \"redux/materials/materialsOperation\";\r\n\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Paper,\r\n  IconButton,\r\n} from \"@mui/material\";\r\n\r\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\n\r\nimport { selectMaterials } from \"redux/materials/materialsSelector\";\r\nimport { ModalSmall } from \"components/ModalSmall\";\r\nimport { ContentModalDelete } from \"components/ContentModalDelete\";\r\n\r\nexport const MaterialsList = () => {\r\n  const [showModalDelete, setShowModalDelete] = useState(false);\r\n  const [idMaterialToDelete, setIdMaterialToDelete] = useState(null);\r\n\r\n  const materials = useSelector(selectMaterials);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const openModalDelete = (id) => {\r\n    setShowModalDelete(true);\r\n    setIdMaterialToDelete(id);\r\n  };\r\n  const closeModalDelete = () => {\r\n    setShowModalDelete(false);\r\n  };\r\n  const handleDeleteMaterial = () => {\r\n    dispatch(deleteMaterial(idMaterialToDelete));\r\n    setIdMaterialToDelete(null);\r\n    closeModalDelete();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper}>\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow\r\n              sx={{ position: \"sticky\", top: 0, zIndex: 1, background: \"#fff\" }}\r\n            >\r\n              <TableCell align=\"center\">№ п.п.</TableCell>\r\n              <TableCell align=\"center\">Марка матеріалу</TableCell>\r\n              <TableCell align=\"center\">Cортамент</TableCell>\r\n              <TableCell align=\"center\">Розміри, мм.</TableCell>\r\n              <TableCell align=\"center\">Вага листа, кг.</TableCell>\r\n              <TableCell align=\"center\">Редагувати</TableCell>\r\n              <TableCell align=\"center\">Видалити</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {materials?.map((material, index) => {\r\n              return (\r\n                <TableRow\r\n                  key={material._id}\r\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                >\r\n                  <TableCell align=\"center\">{index + 1}</TableCell>\r\n                  <TableCell align=\"center\">{material.brand}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {material.type === \"sheet\" ? \"Лист\" : \"Круг\"}\r\n                  </TableCell>\r\n\r\n                  {material.type === \"sheet\" && (\r\n                    <TableCell align=\"center\">\r\n                      {material.sheetParameters.thickness}x\r\n                      {material.sheetParameters.length}x\r\n                      {material.sheetParameters.width}\r\n                    </TableCell>\r\n                  )}\r\n                  {material.type === \"rod\" && (\r\n                    <TableCell align=\"center\">\r\n                      {material.rodParameters.diameter}\r\n                    </TableCell>\r\n                  )}\r\n\r\n                  <TableCell align=\"center\">{material.weight}</TableCell>\r\n\r\n                  <TableCell align=\"center\">\r\n                    <IconButton\r\n                      sx={{ color: \"#1976d2\" }}\r\n                      aria-label=\"delete\"\r\n                      size=\"medium\"\r\n                    >\r\n                      <EditIcon fontSize=\"medium\" />\r\n                    </IconButton>\r\n                  </TableCell>\r\n\r\n                  <TableCell align=\"center\">\r\n                    <IconButton\r\n                      sx={{ color: \"#1976d2\" }}\r\n                      aria-label=\"delete\"\r\n                      size=\"medium\"\r\n                      onClick={() => openModalDelete(material._id)}\r\n                    >\r\n                      <DeleteForeverIcon fontSize=\"medium\" />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <ModalSmall open={showModalDelete} onClose={closeModalDelete}>\r\n        <ContentModalDelete\r\n          title={\"Бажаєте видалити матеріал?\"}\r\n          onDelete={handleDeleteMaterial}\r\n          onClose={closeModalDelete}\r\n        />\r\n      </ModalSmall>\r\n    </>\r\n  );\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\n\r\nimport { Button, FormControl, TextField } from \"@mui/material\";\r\n\r\nimport { addMaterial } from \"redux/materials/materialsOperation\";\r\n\r\nconst initialValues = {\r\n  brand: \"\",\r\n  width: \"\",\r\n  length: \"\",\r\n  thickness: \"\",\r\n  weight: \"\",\r\n};\r\n\r\nconst validationSchema = yup.object().shape({\r\n  brand: yup.string().required(\"Це поле є обов'язковим\"),\r\n  width: yup\r\n    .number()\r\n    .required(\"Це поле є обов'язковим\")\r\n    .moreThan(0, \"Значення повинно бути більше 0\")\r\n    .notOneOf([0], \"Значення не може бути рівним 0\"),\r\n  length: yup\r\n    .number()\r\n    .required(\"Це поле є обов'язковим\")\r\n    .moreThan(0, \"Значення повинно бути більше 0\")\r\n    .notOneOf([0], \"Значення не може бути рівним 0\"),\r\n  thickness: yup\r\n    .number()\r\n    .required(\"Це поле є обов'язковим\")\r\n    .moreThan(0, \"Значення повинно бути більше 0\")\r\n    .notOneOf([0], \"Значення не може бути рівним 0\"),\r\n  weight: yup\r\n    .number()\r\n    .required(\"Це поле є обов'язковим\")\r\n    .moreThan(0, \"Значення повинно бути більше 0\")\r\n    .notOneOf([0], \"Значення не може бути рівним 0\"),\r\n});\r\n\r\nexport const AddSheetForm = ({ type, onClearType, onClose }) => {\r\n  const dispath = useDispatch();\r\n\r\n  const handleSubmit = (\r\n    { brand, width, length, thickness, weight },\r\n    { resetForm }\r\n  ) => {\r\n    const newMaterial = {\r\n      type,\r\n      brand,\r\n      sheetParameters: { width, length, thickness },\r\n      weight,\r\n    };\r\n\r\n    dispath(addMaterial(newMaterial)).then((res) => {\r\n      if (!res.error) {\r\n        resetForm();\r\n        onClearType();\r\n        onClose();\r\n      }\r\n    });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: handleSubmit,\r\n  });\r\n\r\n  return (\r\n    <FormControl\r\n      variant=\"standard\"\r\n      component=\"form\"\r\n      onSubmit={formik.handleSubmit}\r\n    >\r\n      <TextField\r\n        id=\"brand\"\r\n        type=\"text\"\r\n        name=\"brand\"\r\n        label=\"Марка матеріалу\"\r\n        placeholder=\"Введіть марку матеріалу\"\r\n        size=\"small\"\r\n        value={formik.values.brand}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.brand && Boolean(formik.errors.brand)}\r\n        helperText={formik.touched.brand && formik.errors.brand}\r\n      />\r\n\r\n      <TextField\r\n        id=\"thickness\"\r\n        type=\"number\"\r\n        name=\"thickness\"\r\n        inputProps={{ min: \"0\", step: \"0.1\" }}\r\n        label=\"Товщина листа, мм.\"\r\n        placeholder=\"Введіть товщину листа.\"\r\n        size=\"small\"\r\n        value={formik.values.thickness}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.thickness && Boolean(formik.errors.thickness)}\r\n        helperText={formik.touched.thickness && formik.errors.thickness}\r\n      />\r\n\r\n      <TextField\r\n        id=\"length\"\r\n        type=\"number\"\r\n        name=\"length\"\r\n        inputProps={{ min: \"0\", step: \"0.1\" }}\r\n        label=\"Довжина листа, мм.\"\r\n        placeholder=\"Введіть довжину листа\"\r\n        size=\"small\"\r\n        value={formik.values.length}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.length && Boolean(formik.errors.length)}\r\n        helperText={formik.touched.length && formik.errors.length}\r\n      />\r\n\r\n      <TextField\r\n        id=\"width\"\r\n        type=\"number\"\r\n        name=\"width\"\r\n        inputProps={{ min: \"0\", step: \"0.1\" }}\r\n        label=\"Ширина листа, мм.\"\r\n        placeholder=\"Введіть ширину листа\"\r\n        size=\"small\"\r\n        value={formik.values.width}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.width && Boolean(formik.errors.width)}\r\n        helperText={formik.touched.width && formik.errors.width}\r\n      />\r\n\r\n      <TextField\r\n        id=\"weight\"\r\n        type=\"number\"\r\n        name=\"weight\"\r\n        inputProps={{ min: \"0\", step: \"0.001\" }}\r\n        label=\"Вага листа,кг.\"\r\n        placeholder=\"Введіть вагу листа\"\r\n        size=\"small\"\r\n        value={formik.values.weight}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.weight && Boolean(formik.errors.weight)}\r\n        helperText={formik.touched.weight && formik.errors.weight}\r\n      />\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        sx={{ width: \"300px\", margin: \"0 auto\" }}\r\n      >\r\n        Додати матеріал\r\n      </Button>\r\n    </FormControl>\r\n  );\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\n\r\nimport { Button, FormControl, TextField } from \"@mui/material\";\r\n\r\nimport { addMaterial } from \"redux/materials/materialsOperation\";\r\n\r\nconst initialValues = {\r\n  brand: \"\",\r\n  diameter: \"\",\r\n  weight: \"\",\r\n};\r\n\r\nconst validationSchema = yup.object().shape({\r\n  brand: yup.string().required(\"Це поле є обов'язковим\"),\r\n  diameter: yup\r\n    .number()\r\n    .required(\"Це поле є обов'язковим\")\r\n    .moreThan(0, \"Значення повинно бути більше 0\")\r\n    .notOneOf([0], \"Значення не може бути рівним 0\"),\r\n\r\n  weight: yup\r\n    .number()\r\n    .required(\"Це поле є обов'язковим\")\r\n    .moreThan(0, \"Значення повинно бути більше 0\")\r\n    .notOneOf([0], \"Значення не може бути рівним 0\"),\r\n});\r\n\r\nexport const AddRodForm = ({ type, onClearType, onClose }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = ({ brand, diameter, weight }, { resetForm }) => {\r\n    const newMaterial = {\r\n      type,\r\n      brand,\r\n      rodParameters: { diameter },\r\n      weight,\r\n    };\r\n\r\n    dispatch(addMaterial(newMaterial)).then((res) => {\r\n      if (!res.error) {\r\n        resetForm();\r\n        onClearType();\r\n        onClose();\r\n      }\r\n    });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: handleSubmit,\r\n  });\r\n\r\n  return (\r\n    <FormControl\r\n      variant=\"standard\"\r\n      component=\"form\"\r\n      onSubmit={formik.handleSubmit}\r\n    >\r\n      <TextField\r\n        id=\"brand\"\r\n        type=\"text\"\r\n        name=\"brand\"\r\n        label=\"Марка матеріалу\"\r\n        placeholder=\"Введіть марку матеріалу\"\r\n        size=\"small\"\r\n        value={formik.values.brand}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.brand && Boolean(formik.errors.brand)}\r\n        helperText={formik.touched.brand && formik.errors.brand}\r\n      />\r\n\r\n      <TextField\r\n        id=\"diameter\"\r\n        type=\"number\"\r\n        name=\"diameter\"\r\n        inputProps={{ min: \"0\", step: \"0,1\" }}\r\n        label=\"Діаметр круга, мм.\"\r\n        placeholder=\"Введіть діаметр круга\"\r\n        size=\"small\"\r\n        value={formik.values.diameter}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.diameter && Boolean(formik.errors.diameter)}\r\n        helperText={formik.touched.diameter && formik.errors.diameter}\r\n      />\r\n\r\n      <TextField\r\n        id=\"weight\"\r\n        type=\"number\"\r\n        name=\"weight\"\r\n        inputProps={{ min: \"0.001\", step: \"0.001\" }}\r\n        label=\"Вага одного м.п. круга,кг.\"\r\n        placeholder=\"Введіть вагу одного м.п. круга\"\r\n        size=\"small\"\r\n        value={formik.values.weight}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.weight && Boolean(formik.errors.weight)}\r\n        helperText={formik.touched.weight && formik.errors.weight}\r\n      />\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        sx={{ width: \"300px\", margin: \"0 auto\" }}\r\n      >\r\n        Додати матеріал\r\n      </Button>\r\n    </FormControl>\r\n  );\r\n};\r\n","export const typeMaterialData = [\r\n  { label: \"Лист\", value: \"sheet\" },\r\n  { label: \"Круг\", value: \"rod\" },\r\n];\r\n","import { useState } from \"react\";\r\n\r\nimport { nanoid } from \"nanoid\";\r\n\r\nimport { TextField, Typography, MenuItem, Box } from \"@mui/material\";\r\n\r\nimport { AddSheetForm } from \"components/AddSheetForm\";\r\nimport { AddRodForm } from \"components/AddRodForm\";\r\n\r\nimport { typeMaterialData } from \"data/typeMaterialData\";\r\n\r\nexport const AddMaterialForm = ({ onClose }) => {\r\n  const [materialType, setMaterialType] = useState(\"\");\r\n\r\n  const handleClearType = () => {\r\n    setMaterialType(\"\");\r\n  };\r\n\r\n  const handleTypeChange = (e) => {\r\n    const selectedType = e.target.value;\r\n    setMaterialType(selectedType);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        gap: \"12px\",\r\n        flexDirection: \"column\",\r\n\r\n        width: \"100%\",\r\n        padding: \"8px\",\r\n      }}\r\n    >\r\n      <Typography> Добавити матеріл до списку:</Typography>\r\n\r\n      <TextField\r\n        select\r\n        name=\"type\"\r\n        size=\"small\"\r\n        value={materialType}\r\n        label=\"Тип матеріалу\"\r\n        onChange={handleTypeChange}\r\n      >\r\n        {typeMaterialData.map(({ label, value }) => (\r\n          <MenuItem key={nanoid()} value={value}>\r\n            {label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n\r\n      {materialType === \"sheet\" && (\r\n        <AddSheetForm\r\n          type={materialType}\r\n          onClearType={handleClearType}\r\n          onClose={onClose}\r\n        />\r\n      )}\r\n      {materialType === \"rod\" && (\r\n        <AddRodForm\r\n          type={materialType}\r\n          onClearType={handleClearType}\r\n          onClose={onClose}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\n// ________________________________________\r\n// import { useState } from \"react\";\r\n\r\n// import * as yup from \"yup\";\r\n\r\n// import { useFormik } from \"formik\";\r\n\r\n// import {\r\n//   Button,\r\n//   FormControl,\r\n//   FormControlLabel,\r\n//   FormLabel,\r\n//   RadioGroup,\r\n//   Radio,\r\n//   FormHelperText,\r\n//   TextField,\r\n// } from \"@mui/material\";\r\n\r\n// const initialValues = {\r\n//   type: \"\",\r\n//   brand: \"\",\r\n//   sheetParameters: { width: \"\", length: \"\", thickness: \"\" },\r\n//   rodParameters: { diameter: \"\" },\r\n//   weight: \"\",\r\n// };\r\n\r\n// const validationSchema = yup.object().shape({\r\n//   type: yup.string().oneOf([\"sheet\", \"rod\"]).required(\"Це поле є обов'язковим\"),\r\n//   brand: yup.string().required(\"Це поле є обов'язковим\"),\r\n\r\n//   sheetParameters: yup.object().when(\"type\", {\r\n//     is: (type) => type === \"sheet\",\r\n//     then: yup.object().shape({\r\n//       width: yup.string().required(\"Це поле є обов'язковим\"),\r\n//       length: yup.string().required(\"Це поле є обов'язковим\"),\r\n//       thickness: yup.string().required(\"Це поле є обов'язковим\"),\r\n//     }),\r\n//     otherwise: yup.object().strip(),\r\n//   }),\r\n\r\n//   rodParameters: yup.object().when(\"type\", {\r\n//     is: (type) => type === \"rod\",\r\n//     then: yup\r\n//       .object()\r\n//       .shape({ diameter: yup.string().required(\"Це поле є обов'язковим\") }),\r\n//     otherwise: yup.object().strip(),\r\n//   }),\r\n//   weight: yup.number().required(\"Це поле є обов'язковим\"),\r\n// });\r\n\r\n// export const AddMaterialForm = () => {\r\n//   const handleSubmit = (values, { resetForm }) => {\r\n//     console.log(values);\r\n//     resetForm();\r\n//   };\r\n\r\n//   const formik = useFormik({\r\n//     initialValues,\r\n//     validationSchema: () => validationSchema(),\r\n//     onSubmit: handleSubmit,\r\n//   });\r\n\r\n//   let labelWeight;\r\n//   if (formik.values.type === \"sheet\") {\r\n//     labelWeight = \"Вага листа,кг.\";\r\n//   } else if (formik.values.type === \"rod\") {\r\n//     labelWeight = \"Вага одного м.п. прута,кг.\";\r\n//   }\r\n\r\n//   let placeholderWeight;\r\n\r\n//   if (formik.values.type === \"sheet\") {\r\n//     placeholderWeight = \"Введіть вагу листа,кг.\";\r\n//   } else if (formik.values.type === \"rod\") {\r\n//     placeholderWeight = \"Введіть вагу одного м.п. прута,кг.\";\r\n//   }\r\n\r\n//   return (\r\n//     <FormControl\r\n//       variant=\"standard\"\r\n//       component=\"form\"\r\n//       onSubmit={formik.handleSubmit}\r\n//     >\r\n//       <FormLabel id=\"radio-buttons-group-type\">Тип метеріалу:</FormLabel>\r\n//       <RadioGroup\r\n//         name=\"type\"\r\n//         aria-labelledby=\"radio-buttons-group-type\"\r\n//         value={formik.values.type}\r\n//         onChange={formik.handleChange}\r\n//       >\r\n//         <FormControlLabel value=\"sheet\" control={<Radio />} label=\"Лист\" />\r\n//         <FormControlLabel value=\"rod\" control={<Radio />} label=\"Круг\" />\r\n//       </RadioGroup>\r\n//       {formik.touched.type && Boolean(formik.errors.type) && (\r\n//         <FormHelperText sx={{ margin: \"4px 14px 0 14px\", color: \"#d32f2f\" }}>\r\n//           {formik.touched.type && formik.errors.type}\r\n//         </FormHelperText>\r\n//       )}\r\n//       <TextField\r\n//         id=\"brand\"\r\n//         type=\"text\"\r\n//         name=\"brand\"\r\n//         label=\"Марка матеріалу\"\r\n//         placeholder=\"Введіть марку матеріалу\"\r\n//         size=\"small\"\r\n//         value={formik.values.brand}\r\n//         onChange={formik.handleChange}\r\n//         onBlur={formik.handleBlur}\r\n//         error={formik.touched.brand && Boolean(formik.errors.brand)}\r\n//         helperText={formik.touched.brand && formik.errors.brand}\r\n//       />\r\n\r\n//       {formik.values.type === \"sheet\" && (\r\n//         <>\r\n//           <TextField\r\n//             id=\"width\"\r\n//             type=\"number\"\r\n//             name=\"sheetParameters.width\"\r\n//             label=\"Ширина листа\"\r\n//             placeholder=\"Введіть ширину листа\"\r\n//             size=\"small\"\r\n//             value={formik.values.sheetParameters.width}\r\n//             onChange={formik.handleChange}\r\n//             onBlur={formik.handleBlur}\r\n//             error={formik.touched.width && Boolean(formik.errors.width)}\r\n//             helperText={formik.touched.width && formik.errors.width}\r\n//           />\r\n//           <TextField\r\n//             id=\"length\"\r\n//             type=\"number\"\r\n//             name=\"sheetParameters.length\"\r\n//             label=\"Довжина листа\"\r\n//             placeholder=\"Введіть довжину листа\"\r\n//             size=\"small\"\r\n//             value={formik.values.sheetParameters.length}\r\n//             onChange={formik.handleChange}\r\n//             onBlur={formik.handleBlur}\r\n//             error={formik.touched.length && Boolean(formik.errors.length)}\r\n//             helperText={formik.touched.length && formik.errors.length}\r\n//           />\r\n//           <TextField\r\n//             id=\"thickness\"\r\n//             type=\"number\"\r\n//             name=\"sheetParameters.thickness\"\r\n//             inputProps={{ min: \"0.1\", step: \"0.1\" }}\r\n//             label=\"Товщина листа\"\r\n//             placeholder=\"Введіть товщину листа\"\r\n//             size=\"small\"\r\n//             value={formik.values.thickness}\r\n//             onChange={formik.handleChange}\r\n//             onBlur={formik.handleBlur}\r\n//             error={formik.touched.thickness && Boolean(formik.errors.thickness)}\r\n//             helperText={formik.touched.thickness && formik.errors.thickness}\r\n//           />\r\n//         </>\r\n//       )}\r\n\r\n//       {formik.values.type === \"rod\" && (\r\n//         <TextField\r\n//           id=\"diameter\"\r\n//           type=\"number\"\r\n//           name=\"rodParameters.diameter\"\r\n//           label=\"Діаметер прута\"\r\n//           placeholder=\"Введіть діаметер, мм.\"\r\n//           size=\"small\"\r\n//           value={formik.values.rodParameters.diameter}\r\n//           onChange={formik.handleChange}\r\n//           onBlur={formik.handleBlur}\r\n//           error={formik.touched.diameter && Boolean(formik.errors.diameter)}\r\n//           helperText={formik.touched.diameter && formik.errors.diameter}\r\n//         />\r\n//       )}\r\n\r\n//       {formik.values.type && (\r\n//         <TextField\r\n//           id=\"weight\"\r\n//           type=\"number\"\r\n//           name=\"weight\"\r\n//           inputProps={{ min: \"0.001\", step: \"0.001\" }}\r\n//           label={labelWeight}\r\n//           placeholder={placeholderWeight}\r\n//           size=\"small\"\r\n//           value={formik.values.weight}\r\n//           onChange={formik.handleChange}\r\n//           onBlur={formik.handleBlur}\r\n//           error={formik.touched.weight && Boolean(formik.errors.weight)}\r\n//           helperText={formik.touched.weight && formik.errors.weight}\r\n//         />\r\n//       )}\r\n//       <Button\r\n//         type=\"submit\"\r\n//         variant=\"contained\"\r\n//         size=\"large\"\r\n//         sx={{ width: \"300px\", margin: \"0 auto\" }}\r\n//       >\r\n//         Додати матеріал\r\n//       </Button>\r\n//     </FormControl>\r\n//   );\r\n// };\r\n","import { Box, Button } from \"@mui/material\";\r\nimport PostAddIcon from \"@mui/icons-material/PostAdd\";\r\nimport { useState } from \"react\";\r\nimport { ModalBig } from \"components/ModalBig\";\r\nimport { AddMaterialForm } from \"components/AddMaterialForm\";\r\n\r\nexport const MaterialsDashboard = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n  };\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          startIcon={<PostAddIcon />}\r\n          onClick={openModal}\r\n          sx={{ width: \"300px\" }}\r\n        >\r\n          Добавити матеріал\r\n        </Button>\r\n      </Box>\r\n      <ModalBig open={showModal} onClose={closeModal}>\r\n        <AddMaterialForm onClose={closeModal} />\r\n      </ModalBig>\r\n    </>\r\n  );\r\n};\r\n","import { Box } from \"@mui/material\";\r\n\r\nimport { Loader } from \"components/Loader\";\r\nimport { MyContainer } from \"components/MyContainer\";\r\nimport { MaterialsList } from \"components/MaterialsList\";\r\n\r\nimport { MaterialsDashboard } from \"components/MaterialsDashboard\";\r\n\r\nconst Materials = () => {\r\n  return (\r\n    <MyContainer>\r\n      <Box\r\n        sx={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          gap: \"12px\",\r\n          mt: 10,\r\n          mb: 6,\r\n          p: 1,\r\n          borderRadius: 4,\r\n          backgroundColor: \"#f5f5f5\",\r\n          boxShadow: \"0 0 8px 0 rgba(0,0,0,.3)\",\r\n        }}\r\n      >\r\n        <MaterialsDashboard />\r\n        <MaterialsList />\r\n      </Box>\r\n    </MyContainer>\r\n  );\r\n};\r\n\r\nexport default Materials;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12 1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteForever');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 19.22H5V7h7V5H5c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-7h-2v7.22z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 2h-2v3h-3c.01.01 0 2 0 2h3v2.99c.01.01 2 0 2 0V7h3V5h-3V2zM7 9h8v2H7zm0 3v2h8v-2h-3zm0 3h8v2H7z\"\n}, \"1\")], 'PostAdd');\nexports.default = _default;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["ContentModalDelete","onDelete","onClose","title","btnRef","useRef","useEffect","current","focus","focusVisible","Typography","variant","component","align","sx","mb","Box","display","justifyContent","Button","size","onClick","ref","ModalBig","open","children","Modal","position","top","left","transform","width","xs","md","maxWidth","bgcolor","borderRadius","boxShadow","p","IconButton","right","Close","fontSize","color","ModalSmall","disableRestoreFocus","MyContainer","Container","gap","height","selectMaterials","state","materials","items","MaterialsList","useState","showModalDelete","setShowModalDelete","idMaterialToDelete","setIdMaterialToDelete","useSelector","dispatch","useDispatch","closeModalDelete","TableContainer","Paper","Table","TableHead","TableRow","zIndex","background","TableCell","TableBody","map","material","index","border","brand","type","sheetParameters","thickness","length","rodParameters","diameter","weight","Edit","id","_id","DeleteForever","deleteMaterial","initialValues","validationSchema","yup","shape","required","moreThan","notOneOf","AddSheetForm","onClearType","dispath","formik","useFormik","onSubmit","resetForm","newMaterial","addMaterial","then","res","error","FormControl","handleSubmit","TextField","name","label","placeholder","value","values","onChange","handleChange","onBlur","handleBlur","touched","Boolean","errors","helperText","inputProps","min","step","margin","AddRodForm","typeMaterialData","AddMaterialForm","materialType","setMaterialType","handleClearType","flexDirection","padding","select","e","selectedType","target","MenuItem","nanoid","MaterialsDashboard","showModal","setShowModal","closeModal","startIcon","PostAdd","alignItems","mt","backgroundColor","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}