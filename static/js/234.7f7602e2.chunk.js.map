{"version":3,"file":"static/js/234.7f7602e2.chunk.js","mappings":"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","sources":["components/AddForm/AddForm.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","data/fakeAPI.js","pages/ProductDetails/ProductDetails.jsx","services/products-API.js","utils/getMetalConsumption.js"],"sourcesContent":["import { nanoid } from \"nanoid\";\r\n\r\nimport { getMaterials } from \"../../data/fakeAPI\";\r\n\r\nconst Workshop = {\r\n  CNC: \"Дільниця з ЧПУ\",\r\n  PRESSING: \"Штамповочна дільниця\",\r\n};\r\n\r\nexport const AddForm = ({ onSubmit, onClose, productForUpdate }) => {\r\n  const nameInputId = nanoid();\r\n  const numberInputId = nanoid();\r\n  const quantityInputId = nanoid();\r\n  const weightInputId = nanoid();\r\n\r\n  //  визначаємо унікальни розміри листів та товщини листів\r\n  // треба прописати через функцію яка буде фільтрувати унікальні елементи в масивіЙЙ\r\n\r\n  const materials = getMaterials();\r\n\r\n  const valuesSheet = materials\r\n    .map(({ sizeSheet }) => sizeSheet)\r\n    .filter((sizeSheet, index, array) => array.indexOf(sizeSheet) === index);\r\n\r\n  const valuesThikness = materials\r\n    .map(({ thicknessSheet }) => thicknessSheet)\r\n    .filter(\r\n      (thicknessSheet, index, array) => array.indexOf(thicknessSheet) === index\r\n    );\r\n\r\n  console.log(\"productForUpdate в  формі\", productForUpdate);\r\n\r\n  const initialValues = {};\r\n\r\n  if (productForUpdate) {\r\n    initialValues.name = productForUpdate.name;\r\n    initialValues.number = productForUpdate.number;\r\n    initialValues.weight = productForUpdate.weight;\r\n\r\n    initialValues.quantity = productForUpdate.quantity;\r\n    initialValues.workshop = productForUpdate.workshop;\r\n    initialValues.thickness = productForUpdate.material.thickness;\r\n    initialValues.sheet = productForUpdate.material.sheet;\r\n  }\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const form = evt.currentTarget;\r\n\r\n    const name = form.elements.name.value;\r\n    const number = form.elements.number.value;\r\n    const weight = form.elements.weight.value;\r\n    const quantity = form.elements.quantity.value;\r\n    const workshop = form.elements.workshop.value;\r\n    const thickness = form.elements.thickness.value;\r\n    const sheet = form.elements.sheet.value;\r\n\r\n    onSubmit({\r\n      name,\r\n      number,\r\n      weight,\r\n      quantity,\r\n      workshop,\r\n      thickness,\r\n      sheet,\r\n    });\r\n\r\n    onClose();\r\n    form.reset();\r\n  };\r\n\r\n  return (\r\n    <form style={{ display: \" inline-grid\" }} onSubmit={handleSubmit}>\r\n      <label htmlFor={nameInputId}>Найменування</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id={nameInputId}\r\n        defaultValue={initialValues.name}\r\n      />\r\n      <label htmlFor={numberInputId}>Децимальний номер</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"number\"\r\n        id={numberInputId}\r\n        defaultValue={initialValues.number}\r\n      />\r\n      <label htmlFor={weightInputId}>Вага деталі, кг.</label>\r\n\r\n      <input\r\n        type=\"number\"\r\n        name=\"weight\"\r\n        min=\"0\"\r\n        step=\"0.001\"\r\n        id={weightInputId}\r\n        defaultValue={initialValues.weight}\r\n      />\r\n\r\n      <label htmlFor={quantityInputId}>Кількість деталей з листа, шт.</label>\r\n      <input\r\n        type=\"number\"\r\n        name=\"quantity\"\r\n        min=\"1\"\r\n        id={quantityInputId}\r\n        defaultValue={initialValues.quantity}\r\n      />\r\n      <p>Виберіть виробничу дільницю</p>\r\n      <label>\r\n        ЧПУ\r\n        <input\r\n          type=\"radio\"\r\n          name=\"workshop\"\r\n          value={Workshop.CNC}\r\n          defaultChecked={initialValues.workshop === Workshop.CNC}\r\n        />\r\n      </label>\r\n      <label>\r\n        Штамповка\r\n        <input\r\n          type=\"radio\"\r\n          name=\"workshop\"\r\n          value={Workshop.PRESSING}\r\n          defaultChecked={initialValues.workshop === Workshop.PRESSING}\r\n        />\r\n      </label>\r\n      <label>\r\n        Товщина матеріалу:\r\n        <select name=\"thickness\" defaultValue={initialValues.thickness}>\r\n          {valuesThikness.map((value) => (\r\n            <option key={nanoid()} value={value}>\r\n              {value} мм.\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n      <label>\r\n        Розмір листа матеріалу:\r\n        <select name=\"sheet\" defaultValue={initialValues.sheet}>\r\n          {valuesSheet.map((material) => (\r\n            <option key={nanoid()} value={material}>\r\n              {material}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n      {/* {розглянути можливість формування опцій з файлу даних} */}\r\n      {/* <label>\r\n        Всі дані введені вірно\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={agreed}\r\n          onChange={handleChangeChecked}\r\n        />\r\n      </label> */}\r\n      {/* групування полів */}\r\n      <button type=\"submit\">\r\n        {!productForUpdate ? (\r\n          <span>Додати деталь до списку</span>\r\n        ) : (\r\n          <span>Гедагувати дані про деталь</span>\r\n        )}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ModalBackdrop = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nexport const ModalContet = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  max-height: 450px;\r\n  height: 100%;\r\n\r\n  max-width: 450px;\r\n  width: 100%;\r\n  background-color: #fff;\r\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\r\n    0px 2px 1px rgba(0, 0, 0, 0.2);\r\n  border-radius: 4px;\r\n  border: 2px solid #fff;\r\n`;\r\n","import { createPortal } from \"react-dom\";\r\n\r\nimport { IconButton } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nimport { ModalBackdrop, ModalContet } from \"./Modal.styled\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport const Modal = ({ children, onClose }) => {\r\n  return createPortal(\r\n    <ModalBackdrop>\r\n      <ModalContet>\r\n        {children}\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          size=\"medium\"\r\n          onClick={onClose}\r\n          sx={{ position: \"absolute\", top: 3, right: 3 }}\r\n        >\r\n          <CloseIcon fontSize=\"medium\" sx={{ color: \"#1976d2\" }} />\r\n        </IconButton>\r\n      </ModalContet>\r\n    </ModalBackdrop>,\r\n    modalRoot\r\n  );\r\n};\r\n","export const materials = [\r\n  {\r\n    id: \"1\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20.8,\r\n  },\r\n  {\r\n    id: \"2\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 26,\r\n  },\r\n  {\r\n    id: \"3\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 31.2,\r\n  },\r\n  {\r\n    id: \"4\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 39,\r\n  },\r\n  {\r\n    id: \"5\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 52,\r\n  },\r\n  {\r\n    id: \"6\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 65,\r\n  },\r\n  {\r\n    id: \"7\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 78,\r\n  },\r\n  {\r\n    id: \"8\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20.8,\r\n  },\r\n  {\r\n    id: \"9\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 26,\r\n  },\r\n  {\r\n    id: \"10\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 31.2,\r\n  },\r\n  {\r\n    id: \"11\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 39,\r\n  },\r\n  {\r\n    id: \"12\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 52,\r\n  },\r\n  {\r\n    id: \"13\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 65,\r\n  },\r\n  {\r\n    id: \"14\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 78,\r\n  },\r\n  {\r\n    id: \"15\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20,\r\n  },\r\n  {\r\n    id: \"16\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 25,\r\n  },\r\n  {\r\n    id: \"17\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 30,\r\n  },\r\n  {\r\n    id: \"18\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 37.5,\r\n  },\r\n  {\r\n    id: \"19\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 50,\r\n  },\r\n  {\r\n    id: \"20\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 62.5,\r\n  },\r\n  {\r\n    id: \"21\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 75,\r\n  },\r\n  {\r\n    id: \"22\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20,\r\n  },\r\n  {\r\n    id: \"23\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 25,\r\n  },\r\n  {\r\n    id: \"24\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 30,\r\n  },\r\n  {\r\n    id: \"25\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 37.5,\r\n  },\r\n  {\r\n    id: \"26\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 50,\r\n  },\r\n  {\r\n    id: \"27\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 62.5,\r\n  },\r\n  {\r\n    id: \"28\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 75,\r\n  },\r\n];\r\n\r\nexport const getMaterials = () => {\r\n  return materials;\r\n};\r\n","import { getMetalConsumption } from \"../../utils/getMetalConsumption\";\r\n\r\nimport { useParams, useLocation, Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { Container, Box, Button } from \"@mui/material\";\r\n\r\nimport * as API from \"../../services/products-API\";\r\n\r\nimport { AddForm } from \"../../components/AddForm\";\r\nimport { Modal } from \"../../components/Modal\";\r\n\r\nconst ProductDetails = () => {\r\n  const location = useLocation();\r\n  const { productId } = useParams();\r\n\r\n  const [detailsProduct, setDetailsProduct] = useState(null);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n  };\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getProduct() {\r\n      try {\r\n        const response = await API.fetchProductAPI(productId);\r\n        setDetailsProduct(response.data);\r\n      } catch (error) {}\r\n    }\r\n    getProduct();\r\n  }, [productId, detailsProduct]);\r\n\r\n  const deleteProduct = async (id) => {\r\n    try {\r\n      await API.removeProductAPI(id);\r\n      setDetailsProduct(null);\r\n      toast.success(`Деталь успішно видалена iз списку`);\r\n    } catch (error) {\r\n      toast.error(`Щось пішло не так. Спробуй знову...`);\r\n    }\r\n  };\r\n\r\n  const updateProduct = async ({\r\n    name,\r\n    number,\r\n    weight,\r\n    quantity,\r\n    workshop,\r\n    thickness,\r\n    sheet,\r\n  }) => {\r\n    const updateData = {\r\n      name,\r\n      number,\r\n      weight,\r\n      quantity,\r\n      workshop,\r\n      material: {\r\n        thickness,\r\n        sheet,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await API.updateProductAPI(productId, updateData);\r\n      setDetailsProduct(...response);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const backLinkHref = location.state?.from ?? \"/\";\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"xl\" sx={{ display: \"flex\", height: \"100vh\" }}>\r\n        <Box\r\n          sx={{\r\n            borderRadius: 4,\r\n            mt: 10,\r\n            mb: 2,\r\n            p: 2,\r\n            flexGrow: 1,\r\n            backgroundColor: \"#f5f5f5\",\r\n            boxShadow: \"0 0 8px 0 rgba(0,0,0,.3)\",\r\n          }}\r\n        >\r\n          <Button\r\n            component={Link}\r\n            to={backLinkHref}\r\n            variant=\"contained\"\r\n            sazi=\"large\"\r\n          >\r\n            Назад\r\n          </Button>\r\n\r\n          {detailsProduct ? (\r\n            <>\r\n              <div>\r\n                Тут буде дельний опис про деталь\r\n                <h2>\r\n                  Опис деталі - {detailsProduct.name} {detailsProduct.number}\r\n                </h2>\r\n                <p>Найменування - {detailsProduct.name}</p>\r\n                <p>Децимальний номер - {detailsProduct.number}</p>\r\n                <p>Дільниця виготовлення -{detailsProduct.workshop}</p>\r\n                <p>Матеріал -{detailsProduct.material.sheet} </p>\r\n                <p>\r\n                  Норма витрати-{\" \"}\r\n                  {getMetalConsumption(\r\n                    detailsProduct.quantity,\r\n                    detailsProduct.material.sheet,\r\n                    detailsProduct.material.thickness\r\n                  )}\r\n                </p>\r\n                <p>Товщина металу-{detailsProduct.material.thickness} мм.</p>\r\n                <p>Кількість деталей листа-{detailsProduct.quantity} шт.</p>\r\n                <p> Вага деталі-{detailsProduct.weight}кг.</p>\r\n              </div>\r\n              <Button\r\n                component={Link}\r\n                variant=\"contained\"\r\n                sazi=\"large\"\r\n                onClick={() => deleteProduct(productId)}\r\n              >\r\n                Bидалити\r\n              </Button>\r\n\r\n              <Button\r\n                component={Link}\r\n                variant=\"contained\"\r\n                sazi=\"large\"\r\n                onClick={openModal}\r\n              >\r\n                Редагувати\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <p>Дані про деталь відсутні...</p>\r\n          )}\r\n        </Box>\r\n      </Container>\r\n\r\n      {showModal && (\r\n        <Modal onClose={closeModal}>\r\n          <AddForm\r\n            onSubmit={updateProduct}\r\n            onClose={closeModal}\r\n            productForUpdate={detailsProduct}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductDetails;\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://technology-backend.onrender.com/api\";\r\n\r\nexport const fetchAllProductAPI = async () => {\r\n  const { data } = await axios.get(\"/products\");\r\n  return data;\r\n};\r\n\r\nexport const fetchProductAPI = async (id) => {\r\n  const { data } = await axios.get(`/products/${id}`);\r\n  return data;\r\n};\r\n\r\nexport const addProductAPI = async (body) => {\r\n  const { data } = await axios.post(\"/products\", body);\r\n  return data;\r\n};\r\n\r\nexport const removeProductAPI = async (id) => {\r\n  const { data } = await axios.delete(`/products/${id}`);\r\n  return data;\r\n};\r\n\r\nexport const updateProductAPI = async (id, body) => {\r\n  const { data } = await axios.put(`/products/${id}`, body);\r\n  return data;\r\n};\r\n","// функція отримання норми витрати маталу\r\n\r\nimport { getMaterials } from \"../data/fakeAPI\";\r\n\r\nconst materials = getMaterials();\r\n\r\nexport function getMetalConsumption(quantity, sheet, thickness) {\r\n  // потрібна перевірка на кількість деталей щоб була\r\n\r\n  const isMaterial = materials.find(\r\n    (material) =>\r\n      material.sizeSheet === sheet && material.thicknessSheet === thickness\r\n  );\r\n\r\n  return (isMaterial.weightSheet / quantity).toFixed(3);\r\n  // потрібна буде перевірка щоб математичний вираз виконувася\r\n}\r\n"],"names":["Workshop","AddForm","onSubmit","onClose","productForUpdate","nameInputId","nanoid","numberInputId","quantityInputId","weightInputId","materials","getMaterials","valuesSheet","map","sizeSheet","filter","index","array","indexOf","valuesThikness","thicknessSheet","console","log","initialValues","name","number","weight","quantity","workshop","thickness","material","sheet","style","display","evt","preventDefault","form","currentTarget","elements","value","reset","htmlFor","type","id","defaultValue","min","step","defaultChecked","ModalBackdrop","styled","ModalContet","modalRoot","document","querySelector","Modal","children","createPortal","IconButton","size","onClick","sx","position","top","right","Close","fontSize","color","weightSheet","location","useLocation","productId","useParams","useState","detailsProduct","setDetailsProduct","showModal","setShowModal","closeModal","useEffect","API","response","data","getProduct","deleteProduct","toast","updateProduct","updateData","backLinkHref","state","from","Container","maxWidth","height","Box","borderRadius","mt","mb","p","flexGrow","backgroundColor","boxShadow","Button","component","Link","to","variant","sazi","getMetalConsumption","axios","fetchAllProductAPI","fetchProductAPI","addProductAPI","body","removeProductAPI","updateProductAPI","find","toFixed"],"sourceRoot":""}