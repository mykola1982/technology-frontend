{"version":3,"file":"static/js/50.69c757f2.chunk.js","mappings":"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","sources":["data/workshop.js","components/AddProductForm/AddProductForm.jsx","utils/sortMaterials.js","components/ModalBig/ModalBig.jsx","components/ModalSmall/ModalSmall.jsx","components/MyContainer/MyContainer.jsx","components/Filter/Filter.jsx","components/ProductItem/ProductItem.jsx","components/ProductsList/ProductsList.jsx","components/SelectedProductList/SelectedProductList.jsx","components/FormQuantityProduct/FormQuantityProduct.jsx","pages/Products/Products.jsx","redux/materials/materialsSelector.js","services/orders-API.js","services/products-API.js","utils/getMetalConsumption.js","utils/getMaterialsForOneOrder.js","utils/formatDate.js","utils/formatTime.js","utils/normalizeProductsForOrder.js","utils/normalizeMaterialsForOrder.js","utils/getTotalWeight.js"],"sourcesContent":["export const workshop = {\r\n  CNC: \"дільниця з ЧПУ\",\r\n  PRESSING: \"штампувальна дільниця\",\r\n};\r\n","import { useSelector } from \"react-redux\";\r\nimport { nanoid } from \"nanoid\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { useFormik } from \"formik\";\r\n\r\nimport {\r\n  FormControl,\r\n  Button,\r\n  TextField,\r\n  FormLabel,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  FormHelperText,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nimport { sortMaterials } from \"utils/sortMaterials\";\r\nimport { workshop } from \"data/workshop\";\r\nimport { selectMaterials } from \"redux/materials/materialsSelector\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  name: yup.string().required(\"Це поле є обов'язковим\"),\r\n  number: yup.string().required(\"Це поле є обов'язковим\"),\r\n  weight: yup\r\n    .number()\r\n    .required(\"Це поле є обов'язковим\")\r\n    .min(0.001, \"Вага деталі повинна бути не менше 0.001 кг\"),\r\n  quantity: yup\r\n    .number()\r\n    .required(\"Це поле є обов'язковим\")\r\n    .min(1, \"Кількість деталей з листа повинно бути не менше 1 шт.\"),\r\n  workshop: yup.string().required(\"Це поле є обов'язковим\"),\r\n  material: yup.string().required(\"Це поле є обов'язковим\"),\r\n});\r\n\r\nconst initialValues = {\r\n  name: \"\",\r\n  number: \"\",\r\n  weight: \"\",\r\n  quantity: \"\",\r\n  workshop: \"\",\r\n  material: \"\",\r\n};\r\n\r\nexport const AddProductForm = ({\r\n  onSubmit,\r\n  onClose,\r\n  productForUpdate = null,\r\n}) => {\r\n  if (productForUpdate) {\r\n    initialValues.name = productForUpdate.name;\r\n    initialValues.number = productForUpdate.number;\r\n    initialValues.weight = productForUpdate.weight;\r\n    initialValues.quantity = productForUpdate.quantity;\r\n    initialValues.workshop = productForUpdate.workshop;\r\n    if (productForUpdate.material) {\r\n      initialValues.material = productForUpdate.material._id;\r\n    } else {\r\n      initialValues.material = \"\";\r\n    }\r\n  } else {\r\n    initialValues.name = \"\";\r\n    initialValues.number = \"\";\r\n    initialValues.weight = \"\";\r\n    initialValues.quantity = \"\";\r\n    initialValues.workshop = \"\";\r\n    initialValues.material = \"\";\r\n  }\r\n\r\n  const materials = useSelector(selectMaterials);\r\n\r\n  const sortedMaterials = sortMaterials(materials);\r\n\r\n  const handleSubmit = (values, { resetForm }) => {\r\n    onSubmit(values).then((res) => {\r\n      if (!res) {\r\n        onClose();\r\n        resetForm();\r\n      }\r\n    });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: handleSubmit,\r\n  });\r\n\r\n  return (\r\n    <FormControl\r\n      variant=\"standard\"\r\n      component=\"form\"\r\n      onSubmit={formik.handleSubmit}\r\n      sx={{\r\n        display: \"flex\",\r\n        gap: \"12px\",\r\n        flexDirection: \"column\",\r\n        width: \"100%\",\r\n        padding: \"8px\",\r\n      }}\r\n    >\r\n      <TextField\r\n        id=\"name\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        label=\"Найменування\"\r\n        placeholder=\"Введіть найменування\"\r\n        size=\"small\"\r\n        value={formik.values.name}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.name && Boolean(formik.errors.name)}\r\n        helperText={formik.touched.name && formik.errors.name}\r\n      />\r\n\r\n      <TextField\r\n        id=\"number\"\r\n        type=\"text\"\r\n        name=\"number\"\r\n        label=\"Децимальний номер\"\r\n        placeholder=\"Введіть децимальний номер\"\r\n        size=\"small\"\r\n        value={formik.values.number}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.number && Boolean(formik.errors.number)}\r\n        helperText={formik.touched.number && formik.errors.number}\r\n      />\r\n\r\n      <TextField\r\n        id=\"weight\"\r\n        type=\"number\"\r\n        name=\"weight\"\r\n        inputProps={{ min: \"0.001\", step: \"0.001\" }}\r\n        label=\"Вага деталі, кг.\"\r\n        placeholder=\"Введіть вагу деталі\"\r\n        size=\"small\"\r\n        value={formik.values.weight}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.weight && Boolean(formik.errors.weight)}\r\n        helperText={formik.touched.weight && formik.errors.weight}\r\n      />\r\n\r\n      <TextField\r\n        id=\"quantity\"\r\n        type=\"number\"\r\n        name=\"quantity\"\r\n        inputProps={{ min: \"1\", step: \"1\" }}\r\n        label=\"Кількість деталей з листа(з 6 м.п), шт.\"\r\n        placeholder=\"Введіть кількість деталей з листа(з 6 м.п)\"\r\n        size=\"small\"\r\n        value={formik.values.quantity}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.quantity && Boolean(formik.errors.quantity)}\r\n        helperText={formik.touched.quantity && formik.errors.quantity}\r\n      />\r\n      <FormLabel\r\n        id=\"radio-workshop\"\r\n        sx={{\r\n          color:\r\n            formik.touched.workshop && Boolean(formik.errors.workshop)\r\n              ? \"#d32f2f\"\r\n              : \"inherit\",\r\n        }}\r\n      >\r\n        Виберіть виробничу дільницю:\r\n      </FormLabel>\r\n\r\n      <RadioGroup\r\n        name=\"workshop\"\r\n        aria-labelledby=\"radio-workshop\"\r\n        value={formik.values.workshop}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-around\",\r\n          alignItems: \"center\",\r\n          color:\r\n            formik.touched.workshop && Boolean(formik.errors.workshop)\r\n              ? \"#d32f2f\"\r\n              : \"inherit\",\r\n        }}\r\n      >\r\n        <FormControlLabel\r\n          value={workshop.CNC}\r\n          control={<Radio size=\"small\" />}\r\n          label=\"ЧПУ\"\r\n        />\r\n\r\n        <FormControlLabel\r\n          value={workshop.PRESSING}\r\n          control={<Radio size=\"small\" />}\r\n          label=\"Штамповка\"\r\n        />\r\n      </RadioGroup>\r\n      {formik.touched.workshop && Boolean(formik.errors.workshop) && (\r\n        <FormHelperText sx={{ margin: \"4px 14px 0 14px\", color: \"#d32f2f\" }}>\r\n          {formik.touched.workshop && formik.errors.workshop}\r\n        </FormHelperText>\r\n      )}\r\n\r\n      <TextField\r\n        select\r\n        id=\"material\"\r\n        size=\"small\"\r\n        name=\"material\"\r\n        value={formik.values.material}\r\n        label=\"Maтеріал\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.material && Boolean(formik.errors.material)}\r\n        helperText={formik.touched.material && formik.errors.material}\r\n      >\r\n        {sortedMaterials.map((material) => (\r\n          <MenuItem key={nanoid()} value={material._id}>\r\n            {material.type === \"sheet\" && (\r\n              <Typography component=\"span\">\r\n                Лист {material.sheetParameters.thickness.toFixed(1)}x\r\n                {material.sheetParameters.length}x\r\n                {material.sheetParameters.width}\r\n                {material.brand} ({material.weight} кг.)\r\n              </Typography>\r\n            )}\r\n\r\n            {material.type === \"rod\" && (\r\n              <Typography component=\"span\">\r\n                Круг {material.rodParameters.diameter} {material.brand} (\r\n                {material.weight} кг.)\r\n              </Typography>\r\n            )}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        sx={{ width: \"300px\", margin: \"0 auto\" }}\r\n      >\r\n        {!productForUpdate ? (\r\n          <span>Додати деталь </span>\r\n        ) : (\r\n          <span>Редагувати дані</span>\r\n        )}\r\n      </Button>\r\n    </FormControl>\r\n  );\r\n};\r\n","export function sortMaterials(arrayObj) {\r\n  const sortedArrayObj = [...arrayObj].sort((firstMaterial, secondMaterial) => {\r\n    const typeComparison = secondMaterial.type.localeCompare(\r\n      firstMaterial.type\r\n    );\r\n    if (typeComparison !== 0) {\r\n      return typeComparison;\r\n    }\r\n\r\n    if (firstMaterial.type === \"sheet\" && secondMaterial.type === \"sheet\") {\r\n      // Сортування за thickness, потім за length, потім за width\r\n      const thicknessComparison =\r\n        firstMaterial.sheetParameters.thickness -\r\n        secondMaterial.sheetParameters.thickness;\r\n      if (thicknessComparison !== 0) {\r\n        return thicknessComparison;\r\n      }\r\n\r\n      const lengthComparison =\r\n        firstMaterial.sheetParameters.length -\r\n        secondMaterial.sheetParameters.length;\r\n      if (lengthComparison !== 0) {\r\n        return lengthComparison;\r\n      }\r\n\r\n      const widthComparison =\r\n        firstMaterial.sheetParameters.width -\r\n        secondMaterial.sheetParameters.width;\r\n      if (widthComparison !== 0) {\r\n        return widthComparison;\r\n      }\r\n    }\r\n\r\n    if (firstMaterial.type === \"rod\" && secondMaterial.type === \"rod\") {\r\n      // Сортування за diameter\r\n      const diameterComparison =\r\n        firstMaterial.rodParameters.diameter -\r\n        secondMaterial.rodParameters.diameter;\r\n      if (diameterComparison !== 0) {\r\n        return diameterComparison;\r\n      }\r\n    }\r\n\r\n    // Сортування за weight\r\n    return firstMaterial.weight - secondMaterial.weight;\r\n  });\r\n\r\n  return sortedArrayObj;\r\n}\r\n","import { Modal, Box, IconButton } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nexport const ModalBig = ({ open, children, onClose }) => {\r\n  return (\r\n    <Modal open={open}>\r\n      <Box\r\n        sx={{\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          width: { xs: \"100%\", md: \"500px\" },\r\n          maxWidth: \"500px\",\r\n          bgcolor: \"#fff\",\r\n          borderRadius: 2,\r\n          boxShadow:\r\n            \"0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),  0px 2px 1px rgba(0, 0, 0, 0.2)\",\r\n          p: 4,\r\n        }}\r\n      >\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          size=\"medium\"\r\n          onClick={() => onClose()}\r\n          sx={{ position: \"absolute\", top: 3, right: 3 }}\r\n        >\r\n          <CloseIcon fontSize=\"medium\" sx={{ color: \"#1976d2\" }} />\r\n        </IconButton>\r\n        {children}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n","import { Modal, Box } from \"@mui/material\";\r\n\r\nexport const ModalSmall = ({ open, onClose, children }) => {\r\n  return (\r\n    <Modal open={open} onClose={onClose} disableRestoreFocus>\r\n      <Box\r\n        sx={{\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          maxWidth: \"460px\",\r\n          bgcolor: \"#fff\",\r\n          borderRadius: 2,\r\n          boxShadow:\r\n            \"0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),  0px 2px 1px rgba(0, 0, 0, 0.2)\",\r\n          p: 4,\r\n        }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n","import { Container } from \"@mui/material\";\r\n\r\nexport const MyContainer = ({ children }) => {\r\n  return (\r\n    <Container\r\n      maxWidth=\"xl\"\r\n      sx={{\r\n        display: \"flex\",\r\n        gap: 2,\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n","import { TextField } from \"@mui/material\";\r\n\r\nexport const Filter = ({ value, onChange }) => {\r\n  return (\r\n    <>\r\n      <TextField\r\n        id=\"filled-search\"\r\n        label=\"Пошук деталі\"\r\n        type=\"search\"\r\n        variant=\"outlined\"\r\n        name=\"filter\"\r\n        sx={{\r\n          width: \"300px\",\r\n        }}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { Link } from \"react-router-dom\";\r\n\r\nimport { IconButton, Typography, Box, ListItem } from \"@mui/material\";\r\n\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nexport const ProductItem = ({ product, index, onSelectProduct, location }) => {\r\n  const { _id, name, number } = product;\r\n\r\n  return (\r\n    <ListItem\r\n      sx={{\r\n        justifyContent: \"space-between\",\r\n        borderBottom: \"1px solid\",\r\n        gap: 8,\r\n      }}\r\n    >\r\n      <Box\r\n        to={`/products/${_id}`}\r\n        state={{ from: location }}\r\n        component={Link}\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          textDecoration: \"none\",\r\n          color: \"inherit\",\r\n          maxWidth: \"260px\",\r\n          flexGrow: \"1\",\r\n        }}\r\n      >\r\n        <Typography variant=\"body1\" mr={1}>\r\n          {index + 1}.\r\n        </Typography>\r\n        <Box>\r\n          <Typography variant=\"body2\" sx={{ overflowWrap: \"break-word\" }}>\r\n            {name}\r\n          </Typography>\r\n          <Typography variant=\"body2\" sx={{ overflowWrap: \"break-word\" }}>\r\n            {number}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      <IconButton\r\n        aria-label=\"add to order list\"\r\n        size=\"medium\"\r\n        onClick={() => {\r\n          onSelectProduct(_id);\r\n        }}\r\n      >\r\n        <AddIcon fontSize=\"medium\" sx={{ color: \"#1976d2\" }} />\r\n      </IconButton>\r\n    </ListItem>\r\n  );\r\n};\r\n","import { ProductItem } from \"../ProductItem\";\r\n\r\nimport List from \"@mui/material/List\";\r\n\r\nexport const ProductsList = ({\r\n  products,\r\n  onDeleteProduct,\r\n  onOpenModalOnUpdate,\r\n  onSelectProduct,\r\n  location,\r\n}) => {\r\n  return (\r\n    <List\r\n      sx={{\r\n        width: \"100%\",\r\n        maxWidth: 360,\r\n        position: \"relative\",\r\n        overflow: \"auto\",\r\n        maxHeight: \"75vh\",\r\n        \"& ul\": { padding: 0 },\r\n      }}\r\n    >\r\n      {products.map((product, index) => {\r\n        return (\r\n          <ProductItem\r\n            index={index}\r\n            key={product._id}\r\n            product={product}\r\n            onDeleteProduct={onDeleteProduct}\r\n            onOpenModalOnUpdate={onOpenModalOnUpdate}\r\n            onSelectProduct={onSelectProduct}\r\n            location={location}\r\n          />\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n","import {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Paper,\r\n  Box,\r\n  Typography,\r\n  IconButton,\r\n} from \"@mui/material\";\r\n\r\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\n\r\nimport { getMetalConsumption } from \"../../utils/getMetalConsumption\";\r\n\r\nexport const SelectedProductList = ({ products, onDeleteProductFromOrder }) => {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} size=\"small\">\r\n        <TableHead>\r\n          <TableRow\r\n            sx={{ position: \"sticky\", top: 0, zIndex: 1, background: \"#fff\" }}\r\n          >\r\n            <TableCell align=\"center\">№ п.п.</TableCell>\r\n            <TableCell align=\"center\">Найменування</TableCell>\r\n            <TableCell align=\"center\">Кіл.(шт.)</TableCell>\r\n            <TableCell align=\"center\">Матеріал</TableCell>\r\n            <TableCell align=\"center\">Вага(кг.)</TableCell>\r\n            <TableCell align=\"center\">Норма(кг.)</TableCell>\r\n            <TableCell align=\"center\">\r\n              Hoрма <br />\r\n              (в част. листа/\r\n              <br /> в част м. п.)\r\n            </TableCell>\r\n            <TableCell align=\"center\">Видалити</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {products.map((product, index) => {\r\n            const { _id, name, number, reserved, weight, quantity, material } =\r\n              product;\r\n            return (\r\n              <TableRow\r\n                key={_id}\r\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n              >\r\n                <TableCell align=\"center\">{index + 1}</TableCell>\r\n                <TableCell align=\"left\">\r\n                  <Box>\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      sx={{ overflowWrap: \"break-word\" }}\r\n                    >\r\n                      {name}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      sx={{ overflowWrap: \"break-word\" }}\r\n                    >\r\n                      {number}\r\n                    </Typography>\r\n                  </Box>\r\n                </TableCell>\r\n                <TableCell align=\"center\">{reserved}</TableCell>\r\n\r\n                {material?.type === \"sheet\" && (\r\n                  <TableCell align=\"center\">\r\n                    Лист {material.sheetParameters.thickness}x\r\n                    {material.sheetParameters.length}x\r\n                    {material.sheetParameters.width} {material.brand}\r\n                    <Typography component=\"span\" sx={{ fontWeight: 700 }}>\r\n                      {\" \"}\r\n                      ({material.weight} кг.)\r\n                    </Typography>\r\n                  </TableCell>\r\n                )}\r\n\r\n                {material?.type === \"rod\" && (\r\n                  <TableCell align=\"center\">\r\n                    Круг {material.rodParameters.diameter} {material.brand}\r\n                    <Typography component=\"span\" sx={{ fontWeight: 700 }}>\r\n                      {\" \"}\r\n                      ({material.weight} кг.)\r\n                    </Typography>\r\n                  </TableCell>\r\n                )}\r\n                <TableCell align=\"center\">{weight}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  {getMetalConsumption(material, quantity)}\r\n                </TableCell>\r\n\r\n                {material?.type === \"sheet\" && (\r\n                  <TableCell align=\"center\">\r\n                    {(1 / product.quantity).toFixed(4)}\r\n                  </TableCell>\r\n                )}\r\n\r\n                {material?.type === \"rod\" && (\r\n                  <TableCell align=\"center\">\r\n                    {(6 / product.quantity).toFixed(4)}\r\n                  </TableCell>\r\n                )}\r\n\r\n                <TableCell align=\"center\">\r\n                  <IconButton\r\n                    aria-label=\"delete\"\r\n                    size=\"medium\"\r\n                    sx={{ color: \"#1976d2\" }}\r\n                    onClick={() => onDeleteProductFromOrder(_id)}\r\n                  >\r\n                    <DeleteForeverIcon fontSize=\"medium\" />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n","import { FormControl, Button, Typography, TextField } from \"@mui/material\";\r\n\r\nexport const FormQuantityProduct = ({ onSubmit, onClose, product }) => {\r\n  const handelSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const form = evt.currentTarget;\r\n    const reserved = form.elements.reserved.value;\r\n\r\n    onSubmit(reserved, product);\r\n    onClose();\r\n    form.reset();\r\n  };\r\n  return (\r\n    <FormControl\r\n      id=\"quantityProduct\"\r\n      variant=\"standard\"\r\n      component=\"form\"\r\n      onSubmit={handelSubmit}\r\n      sx={{\r\n        display: \"flex\",\r\n        gap: \"12px\",\r\n        flexDirection: \"column\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <Typography variant=\"h6\" component=\"p\" align=\"center\" sx={{ mb: 2 }}>\r\n        Введіть кількість деталей\r\n      </Typography>\r\n      <TextField\r\n        autoFocus\r\n        type=\"number\"\r\n        name=\"reserved\"\r\n        variant=\"outlined\"\r\n        label=\"Кількість деталей, шт.\"\r\n        inputProps={{ min: \"1\" }}\r\n        defaultValue={\"1\"}\r\n      />\r\n      <Button type=\"submit\" variant=\"contained\" size=\"large\">\r\n        OK\r\n      </Button>\r\n    </FormControl>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { Box, Button, Typography, CircularProgress } from \"@mui/material\";\r\nimport PostAddIcon from \"@mui/icons-material/PostAdd\";\r\n\r\nimport * as productsAPI from \"services/products-API\";\r\nimport * as ordersAPI from \"services/orders-API\";\r\nimport {\r\n  getMaterialsForOneOrder,\r\n  normalizeProductsForOrder,\r\n  normalizeMaterialsForOrder,\r\n} from \"utils\";\r\n\r\nimport { MyContainer } from \"components/MyContainer\";\r\nimport { AddProductForm } from \"components/AddProductForm\";\r\nimport { Filter } from \"components/Filter\";\r\nimport { ProductsList } from \"components/ProductsList\";\r\nimport { SelectedProductList } from \"components/SelectedProductList\";\r\nimport { ModalBig } from \"components/ModalBig\";\r\nimport { FormQuantityProduct } from \"components/FormQuantityProduct\";\r\nimport { ModalSmall } from \"components/ModalSmall\";\r\n\r\nimport { useAuth } from \"hooks\";\r\n\r\nconst Products = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // const [isLoadingAddOrder, setIsLoadingAddOrder] = useState(true);\r\n\r\n  const [selectedProducts, setSelectedProducts] = useState(() => {\r\n    const sevedSelectedProducts = localStorage.getItem(\"selectedProducts\");\r\n\r\n    if (sevedSelectedProducts !== null && sevedSelectedProducts !== \"\") {\r\n      const parsedSelecdedProducts = JSON.parse(sevedSelectedProducts);\r\n      return parsedSelecdedProducts;\r\n    }\r\n\r\n    return [];\r\n  });\r\n\r\n  const [selectedOneProduct, setSelectedOneProduct] = useState(null);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showModalFormQuantity, setShowModalFormQuantity] = useState(false);\r\n\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const openModalFormQuantity = () => {\r\n    setShowModalFormQuantity(true);\r\n  };\r\n  const closeModalFormQuantity = () => {\r\n    setShowModalFormQuantity(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getAllProducts() {\r\n      try {\r\n        setIsLoading(true);\r\n        const { data } = await productsAPI.fetchAllProductsAPI();\r\n\r\n        setProducts(data);\r\n      } catch (error) {\r\n        toast.error(`Щось пішло не так. Спробуй знову...`);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n    getAllProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selectedProductToLocal = selectedProducts.map(\r\n      ({ _id, reserved }) => ({\r\n        _id,\r\n        reserved,\r\n      })\r\n    );\r\n\r\n    localStorage.setItem(\r\n      \"selectedProducts\",\r\n      JSON.stringify(selectedProductToLocal)\r\n    );\r\n  }, [selectedProducts]);\r\n\r\n  const addProduct = async ({\r\n    name,\r\n    number,\r\n    weight,\r\n    quantity,\r\n    workshop,\r\n    material,\r\n  }) => {\r\n    const newProduct = {\r\n      name,\r\n      number,\r\n      weight,\r\n      quantity,\r\n      workshop,\r\n      material,\r\n    };\r\n\r\n    try {\r\n      const { data } = await productsAPI.addProductAPI(newProduct);\r\n\r\n      setProducts((prevProducts) => [data, ...prevProducts]);\r\n      toast.success(`Деталь  ${name}-${number} успішно додана до списку`);\r\n    } catch (error) {\r\n      if (error.response.status === 409) {\r\n        toast.error(`Деталь з децимальним номером  ${number} вже є в списку`);\r\n      } else {\r\n        toast.error(`Щось пішло не так. Спробуй знову...`);\r\n      }\r\n      return error;\r\n    }\r\n  };\r\n\r\n  const handleChangeFilter = (evt) => {\r\n    const { value } = evt.currentTarget;\r\n    setFilter(value);\r\n  };\r\n\r\n  const getVisibelProducts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return products.filter(\r\n      (product) =>\r\n        product.name.toLowerCase().includes(normalizedFilter) ||\r\n        product.number?.toLowerCase().startsWith(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  const visibleProducts = getVisibelProducts();\r\n\r\n  const selectProduct = (id) => {\r\n    const selectedProduct = products.find((product) => product._id === id);\r\n    const { _id, name, number } = selectedProduct;\r\n\r\n    const hasProduct = selectedProducts.some((product) => product._id === _id);\r\n\r\n    if (hasProduct) {\r\n      toast.warn(`Деталь ${name}- ${number} вже є в списку замовлення `);\r\n\r\n      return;\r\n    }\r\n    setSelectedOneProduct(selectedProduct);\r\n    openModalFormQuantity();\r\n  };\r\n\r\n  const addProductToOrder = (reserved, product) => {\r\n    const productOne = { ...product, reserved };\r\n\r\n    if (!productOne.material) {\r\n      toast.error(\r\n        `В даталі що вибрали не заданий матеріал. Добавте матеріал та спробуйте знову.`\r\n      );\r\n      return;\r\n    }\r\n\r\n    setSelectedProducts((prevSelectedProducts) => [\r\n      ...prevSelectedProducts,\r\n      productOne,\r\n    ]);\r\n    setSelectedOneProduct(null);\r\n  };\r\n\r\n  const deleteProductFromOrder = (id) => {\r\n    setSelectedProducts((prevSelectedProducts) =>\r\n      prevSelectedProducts.filter((product) => product._id !== id)\r\n    );\r\n  };\r\n\r\n  const addOrder = async (products) => {\r\n    const materialsForOneOrder = getMaterialsForOneOrder(products);\r\n\r\n    const newOrder = {\r\n      user: user.name,\r\n      products: normalizeProductsForOrder(products),\r\n      materials: normalizeMaterialsForOrder(materialsForOneOrder),\r\n    };\r\n\r\n    try {\r\n      await ordersAPI.addOrderAPI(newOrder);\r\n      localStorage.removeItem(\"selectedProducts\");\r\n      toast.success(\r\n        \"Деталі успішно додані в замовлення на розрахунок матеріалу.\"\r\n      );\r\n      navigate(\"/orders\");\r\n    } catch (error) {\r\n      toast.error(\"Щось пішло не так. Спробуй знову...\");\r\n    }\r\n  };\r\n\r\n  // ----- можливо винести в окрему функцію, також можна почистити сам обєкт , не можна а треба\r\n\r\n  const formatedSecectedProducts = selectedProducts.reduce(\r\n    (acc, selectedProduct) => {\r\n      const product = products.find(\r\n        (product) => product._id === selectedProduct._id\r\n      );\r\n      if (product) {\r\n        acc.push({ ...product, reserved: selectedProduct.reserved });\r\n      }\r\n\r\n      return acc;\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <MyContainer>\r\n        <Box\r\n          sx={{\r\n            width: \"380px\",\r\n            borderRadius: 4,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            gap: \"12px\",\r\n            mt: 10,\r\n            mb: 6,\r\n            p: 1,\r\n            pt: 3,\r\n            backgroundColor: \"#f5f5f5\",\r\n            boxShadow: \"0 0 8px 0 rgba(0,0,0,.3)\",\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            startIcon={<PostAddIcon />}\r\n            onClick={openModal}\r\n            sx={{\r\n              width: \"300px\",\r\n            }}\r\n          >\r\n            Добавити деталь\r\n          </Button>\r\n\r\n          <Filter value={filter} onChange={handleChangeFilter} />\r\n          <Typography\r\n            variant=\"h5\"\r\n            sx={{\r\n              fontWeight: 700,\r\n            }}\r\n          >\r\n            Список деталей\r\n          </Typography>\r\n\r\n          <Box>\r\n            {products.length > 0 && (\r\n              <Typography variant=\"body1\" align=\"center\">\r\n                Всього в базі - {products.length} дет.\r\n              </Typography>\r\n            )}\r\n            {filter && (\r\n              <Typography variant=\"body1\" align=\"center\">\r\n                Знайдено збігів - {visibleProducts.length}\r\n              </Typography>\r\n            )}\r\n          </Box>\r\n\r\n          {isLoading && (\r\n            <CircularProgress size={80} sx={{ mt: \"auto\", mb: \"auto\" }} />\r\n          )}\r\n\r\n          {products && (\r\n            <ProductsList\r\n              products={visibleProducts}\r\n              onSelectProduct={selectProduct}\r\n              location={location}\r\n            />\r\n          )}\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            flexGrow: 1,\r\n            display: { xs: \"none\", md: \"flex\" },\r\n            borderRadius: 4,\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            gap: \"12px\",\r\n            mt: 10,\r\n            mb: 6,\r\n            p: 1,\r\n            backgroundColor: \"#f5f5f5\",\r\n            boxShadow: \"0 0 8px 0 rgba(0,0,0,.3)\",\r\n          }}\r\n        >\r\n          {/* {isLoading && (\r\n            <CircularProgress size={80} sx={{ mt: \"auto\", mb: \"auto\" }} />\r\n          )} */}\r\n\r\n          <SelectedProductList\r\n            products={formatedSecectedProducts}\r\n            onDeleteProductFromOrder={deleteProductFromOrder}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            disabled={selectedProducts.length <= 0}\r\n            onClick={() => {\r\n              addOrder(formatedSecectedProducts);\r\n            }}\r\n          >\r\n            Сформувати замовлення\r\n          </Button>\r\n        </Box>\r\n      </MyContainer>\r\n\r\n      <ModalBig open={showModal} onClose={closeModal}>\r\n        <AddProductForm onSubmit={addProduct} onClose={closeModal} />\r\n      </ModalBig>\r\n\r\n      <ModalSmall open={showModalFormQuantity} onClose={closeModalFormQuantity}>\r\n        <FormQuantityProduct\r\n          onClose={closeModalFormQuantity}\r\n          onSubmit={addProductToOrder}\r\n          product={selectedOneProduct}\r\n        />\r\n      </ModalSmall>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","export const selectMaterials = (state) => state.materials.items;\r\nexport const selectIsLoading = (state) => state.materials.isLoading;\r\nexport const selectError = (state) => state.materials.errors;\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://technology-backend.onrender.com/api\";\r\n\r\nexport const fetchAllOrdersAPI = async () => {\r\n  const { data } = await axios.get(\"/orders\");\r\n  return data;\r\n};\r\n\r\nexport const fetchOrderAPI = async (id) => {\r\n  const { data } = await axios.get(`/orders/${id}`);\r\n  return data;\r\n};\r\n\r\nexport const addOrderAPI = async (body) => {\r\n  const { data } = await axios.post(\"/orders\", body);\r\n  return data;\r\n};\r\n\r\nexport const removeOrderAPI = async (id) => {\r\n  const { data } = await axios.delete(`/orders/${id}`);\r\n  return data;\r\n};\r\n\r\nexport const updateToRemoveOrderAPI = async (id) => {\r\n  const { data } = await axios.patch(`/orders/${id}`);\r\n  return data;\r\n};\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://technology-backend.onrender.com/api\";\r\n\r\nexport const fetchAllProductsAPI = async () => {\r\n  const { data } = await axios.get(\"/products\");\r\n  return data;\r\n};\r\n\r\nexport const fetchProductAPI = async (id) => {\r\n  const { data } = await axios.get(`/products/${id}`);\r\n  return data;\r\n};\r\n\r\nexport const addProductAPI = async (body) => {\r\n  const { data } = await axios.post(\"/products\", body);\r\n  return data;\r\n};\r\n\r\nexport const removeProductAPI = async (id) => {\r\n  const { data } = await axios.delete(`/products/${id}`);\r\n  return data;\r\n};\r\n\r\nexport const updateProductAPI = async (id, body) => {\r\n  const { data } = await axios.put(`/products/${id}`, body);\r\n  return data;\r\n};\r\n","export function getMetalConsumption(material, quantity) {\r\n  if (quantity !== 0) {\r\n    if (material.type === \"sheet\") {\r\n      return (material.weight / quantity).toFixed(3);\r\n    } else if (material.type === \"rod\") {\r\n      return ((material.weight * 6) / quantity).toFixed(3);\r\n    }\r\n  } else {\r\n    return Infinity;\r\n  }\r\n}\r\n","export function getMaterialsForOneOrder(products) {\r\n  // знаходимо унікальні значення  сортаменту в замовленні\r\n  const getAssortmentUnique = (products) => {\r\n    const assortmentUnique = products\r\n      .map((product) => product.material)\r\n      .reduce((acc, material) => {\r\n        const isUnique = acc.some((element) => element._id === material._id);\r\n\r\n        if (!isUnique) {\r\n          acc.push({ ...material });\r\n        }\r\n        return acc;\r\n      }, []);\r\n    return assortmentUnique;\r\n  };\r\n  const uniqueMaterials = getAssortmentUnique(products);\r\n\r\n  //  для кожного унікального значення матеріалу додаємо норму витрати металу при збігу id.\r\n  const materialsForOneOrder = uniqueMaterials.map((material) => {\r\n    let amountOfMaterial = null;\r\n    if (material.type === \"sheet\") {\r\n      amountOfMaterial = products.reduce((acc, product) => {\r\n        if (material._id === product.material._id) {\r\n          acc = acc + (1 / product.quantity) * product.reserved;\r\n        }\r\n        return acc;\r\n      }, 0);\r\n    }\r\n    if (material.type === \"rod\") {\r\n      amountOfMaterial = products.reduce((acc, product) => {\r\n        if (material._id === product.material._id) {\r\n          acc = acc + (6 / product.quantity) * product.reserved;\r\n        }\r\n        return acc;\r\n      }, 0);\r\n    }\r\n\r\n    return { ...material, amount: amountOfMaterial?.toFixed(3) };\r\n  });\r\n\r\n  return materialsForOneOrder;\r\n}\r\n","export function formatDate(date) {\r\n  const dateTime = new Date(date);\r\n  const formattedDate = dateTime.toLocaleDateString(\"uk-UA\");\r\n\r\n  return formattedDate;\r\n}\r\n","export function formatTime(date) {\r\n  const dateTime = new Date(date);\r\n  const formattedTime = dateTime.toLocaleTimeString(\"uk-UA\", { hours: false });\r\n\r\n  return formattedTime;\r\n}\r\n","export function normalizeProductsForOrder(products) {\r\n  const normalizedProducts = products.map(({ name, number, reserved }) => {\r\n    return { name, number, reserved };\r\n  });\r\n  return normalizedProducts;\r\n}\r\n","export function normalizeMaterialsForOrder(materials) {\r\n  const normalizedMaterials = materials.map((material) => {\r\n    const { brand, type, weight, amount, sheetParameters, rodParameters } =\r\n      material;\r\n    let normalizedMaterial = null;\r\n    if (type === \"sheet\") {\r\n      normalizedMaterial = {\r\n        brand,\r\n        type,\r\n        sheetParameters,\r\n        weight,\r\n        amount,\r\n      };\r\n    }\r\n\r\n    if (type === \"rod\") {\r\n      normalizedMaterial = {\r\n        brand,\r\n        type,\r\n        rodParameters,\r\n        weight,\r\n        amount,\r\n      };\r\n    }\r\n    return normalizedMaterial;\r\n  });\r\n  return normalizedMaterials;\r\n}\r\n","export const getTotalWeight = (materials) => {\r\n  const totalWeigth = materials.reduce((acc, material) => {\r\n    const { amount, weight } = material;\r\n    acc = acc + amount * weight;\r\n    return acc;\r\n  }, 0);\r\n\r\n  return totalWeigth;\r\n};\r\n"],"names":["workshop","validationSchema","yup","shape","name","required","number","weight","min","quantity","material","initialValues","AddProductForm","onSubmit","onClose","productForUpdate","_id","arrayObj","materials","useSelector","selectMaterials","sortedMaterials","sort","firstMaterial","secondMaterial","typeComparison","type","localeCompare","thicknessComparison","sheetParameters","thickness","lengthComparison","length","widthComparison","width","diameterComparison","rodParameters","diameter","formik","useFormik","values","resetForm","then","res","FormControl","variant","component","handleSubmit","sx","display","gap","flexDirection","padding","TextField","id","label","placeholder","size","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","inputProps","step","FormLabel","color","RadioGroup","justifyContent","alignItems","FormControlLabel","control","Radio","FormHelperText","margin","select","map","MenuItem","Typography","toFixed","brand","nanoid","Button","ModalBig","open","children","Modal","Box","position","top","left","transform","xs","md","maxWidth","bgcolor","borderRadius","boxShadow","p","IconButton","onClick","right","Close","fontSize","ModalSmall","disableRestoreFocus","MyContainer","Container","height","Filter","ProductItem","product","index","onSelectProduct","location","ListItem","borderBottom","to","state","from","Link","textDecoration","flexGrow","mr","overflowWrap","Add","ProductsList","products","onDeleteProduct","onOpenModalOnUpdate","List","overflow","maxHeight","SelectedProductList","onDeleteProductFromOrder","TableContainer","Paper","Table","minWidth","TableHead","TableRow","zIndex","background","TableCell","align","TableBody","reserved","border","fontWeight","getMetalConsumption","DeleteForever","FormQuantityProduct","evt","preventDefault","form","currentTarget","elements","reset","mb","autoFocus","defaultValue","useState","setProducts","filter","setFilter","isLoading","setIsLoading","sevedSelectedProducts","localStorage","getItem","JSON","parse","selectedProducts","setSelectedProducts","selectedOneProduct","setSelectedOneProduct","showModal","setShowModal","showModalFormQuantity","setShowModalFormQuantity","useLocation","navigate","useNavigate","user","useAuth","closeModal","closeModalFormQuantity","useEffect","productsAPI","data","toast","getAllProducts","selectedProductToLocal","setItem","stringify","addProduct","newProduct","prevProducts","response","status","visibleProducts","normalizedFilter","toLowerCase","includes","startsWith","getVisibelProducts","addOrder","materialsForOneOrder","getMaterialsForOneOrder","newOrder","normalizeProductsForOrder","normalizeMaterialsForOrder","ordersAPI","removeItem","formatedSecectedProducts","reduce","acc","selectedProduct","find","push","mt","pt","backgroundColor","startIcon","PostAdd","CircularProgress","some","prevSelectedProducts","disabled","productOne","items","axios","fetchAllOrdersAPI","fetchOrderAPI","addOrderAPI","body","removeOrderAPI","updateToRemoveOrderAPI","fetchAllProductsAPI","fetchProductAPI","addProductAPI","removeProductAPI","updateProductAPI","Infinity","uniqueMaterials","element","getAssortmentUnique","amountOfMaterial","amount","formatDate","date","Date","toLocaleDateString","formatTime","toLocaleTimeString","hours","normalizedMaterial","getTotalWeight"],"sourceRoot":""}