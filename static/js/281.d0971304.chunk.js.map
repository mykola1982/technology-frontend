{"version":3,"file":"static/js/281.d0971304.chunk.js","mappings":"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","sources":["components/MyContainer/MyContainer.jsx","data/fakeAPI.js","redux/materials/materialsSelector.js","components/MaterialsList/MaterialsList.jsx","components/AddMaterialForm/AddMaterialForm.jsx","pages/Materials/Materials.jsx"],"sourcesContent":["import { Container } from \"@mui/material\";\r\n\r\nexport const MyContainer = ({ children }) => {\r\n  return (\r\n    <Container\r\n      maxWidth=\"xl\"\r\n      sx={{\r\n        display: \"flex\",\r\n        gap: 2,\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n","export const materials = [\r\n  {\r\n    id: \"1\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20.8,\r\n  },\r\n  {\r\n    id: \"2\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 26,\r\n  },\r\n  {\r\n    id: \"3\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 31.2,\r\n  },\r\n  {\r\n    id: \"4\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 39,\r\n  },\r\n  {\r\n    id: \"5\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 52,\r\n  },\r\n  {\r\n    id: \"6\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 65,\r\n  },\r\n  {\r\n    id: \"7\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 78,\r\n  },\r\n  {\r\n    id: \"8\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20.8,\r\n  },\r\n  {\r\n    id: \"9\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 26,\r\n  },\r\n  {\r\n    id: \"10\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 31.2,\r\n  },\r\n  {\r\n    id: \"11\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 39,\r\n  },\r\n  {\r\n    id: \"12\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 52,\r\n  },\r\n  {\r\n    id: \"13\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 65,\r\n  },\r\n  {\r\n    id: \"14\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 78,\r\n  },\r\n  {\r\n    id: \"15\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20,\r\n  },\r\n  {\r\n    id: \"16\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 25,\r\n  },\r\n  {\r\n    id: \"17\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 30,\r\n  },\r\n  {\r\n    id: \"18\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 37.5,\r\n  },\r\n  {\r\n    id: \"19\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 50,\r\n  },\r\n  {\r\n    id: \"20\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 62.5,\r\n  },\r\n  {\r\n    id: \"21\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 75,\r\n  },\r\n  {\r\n    id: \"22\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20,\r\n  },\r\n  {\r\n    id: \"23\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 25,\r\n  },\r\n  {\r\n    id: \"24\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 30,\r\n  },\r\n  {\r\n    id: \"25\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 37.5,\r\n  },\r\n  {\r\n    id: \"26\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 50,\r\n  },\r\n  {\r\n    id: \"27\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 62.5,\r\n  },\r\n  {\r\n    id: \"28\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 75,\r\n  },\r\n];\r\n\r\nexport const getMaterials = () => {\r\n  return materials;\r\n};\r\n","export const selectMaterials = (state) => state.materials.items;\r\nexport const selectIsLoading = (state) => state.materials.isLoading;\r\nexport const selectError = (state) => state.materials.errors;\r\n","import { useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Paper,\r\n  IconButton,\r\n} from \"@mui/material\";\r\n\r\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\n\r\nimport { selectMaterials } from \"redux/materials/materialsSelector\";\r\n\r\nexport const MaterialsList = () => {\r\n  const materials = useSelector(selectMaterials);\r\n  console.log(materials);\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow\r\n            sx={{ position: \"sticky\", top: 0, zIndex: 1, background: \"#fff\" }}\r\n          >\r\n            <TableCell align=\"center\">№ п.п.</TableCell>\r\n            <TableCell align=\"center\">Сортамент</TableCell>\r\n            <TableCell align=\"center\">Вага листа</TableCell>\r\n            <TableCell align=\"center\">Видалити</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        <TableBody>\r\n          {materials?.map((material, index) => {\r\n            // const { _id, type, brand, sheetParameters, rodParameters, weight } =\r\n            //   material;\r\n\r\n            // const { diameter } = rodParameters;\r\n\r\n            // const { width, length, thickness } = sheetParameters;\r\n            return (\r\n              <TableRow\r\n                key={material._id}\r\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n              >\r\n                <TableCell align=\"center\">{index + 1}</TableCell>\r\n                {material.type === \"sheet\" && (\r\n                  <TableCell align=\"center\">\r\n                    {material.sheetParameters.thickness}x\r\n                    {material.sheetParameters.length}x\r\n                    {material.sheetParameters.width}\r\n                  </TableCell>\r\n                )}\r\n                {material.type === \"rod\" && (\r\n                  <TableCell align=\"center\">\r\n                    {material.rodParameters.diameter}\r\n                  </TableCell>\r\n                )}\r\n\r\n                <TableCell align=\"center\">{material.weight}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <IconButton\r\n                    sx={{ color: \"#1976d2\" }}\r\n                    aria-label=\"delete\"\r\n                    size=\"medium\"\r\n\r\n                    // onClick={() => openModal(_id)}\r\n                  >\r\n                    <DeleteForeverIcon fontSize=\"medium\" />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n","import * as yup from \"yup\";\r\n\r\nimport { useFormik } from \"formik\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  RadioGroup,\r\n  Radio,\r\n  FormHelperText,\r\n  TextField,\r\n} from \"@mui/material\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  type: yup.string().oneOf([\"sheet\", \"rod\"]).required(\"Це поле є обовязковим\"),\r\n  brand: yup.string().required(\"Це поле є обовязковим\"),\r\n\r\n  sheetParameters: yup.object().when(\"type\", {\r\n    is: \"sheet\",\r\n    then: yup.object().shape({\r\n      width: yup.string().required(\"Це поле є обовязковим\"),\r\n      length: yup.string().required(\"Це поле є обовязковим\"),\r\n      thickness: yup.string().required(\"Це поле є обовязковим\"),\r\n    }),\r\n    otherwise: yup.mixed().notRequired(),\r\n  }),\r\n\r\n  rodParameters: yup.object().when(\"type\", {\r\n    is: \"rod\",\r\n    then: yup\r\n      .object()\r\n      .shape({ diameter: yup.string().required(\"Це поле є обовязковим\") }),\r\n    otherwise: yup.mixed().notRequired(),\r\n  }),\r\n  weight: yup.number().required(\"Це поле є обовязковим\"),\r\n});\r\n\r\nconst initialValues = {\r\n  type: \"\",\r\n  brand: \"\",\r\n  sheetParameters: { width: \"\", length: \"\", thickness: \"\" },\r\n  rodParameters: { diameter: \"\" },\r\n  weight: \"\",\r\n};\r\n\r\nexport const AddMaterialForm = () => {\r\n  const handleSubmit = (values, { resetForm }) => {\r\n    console.log(values);\r\n    resetForm();\r\n  };\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: handleSubmit,\r\n  });\r\n\r\n  let labelWeight;\r\n  if (formik.values.type === \"sheet\") {\r\n    labelWeight = \"Вага листа,кг.\";\r\n  } else if (formik.values.type === \"rod\") {\r\n    labelWeight = \"Вага одного м.п. прута,кг.\";\r\n  }\r\n\r\n  let placeholderWeight;\r\n\r\n  if (formik.values.type === \"sheet\") {\r\n    placeholderWeight = \"Введіть вагу листа,кг.\";\r\n  } else if (formik.values.type === \"rod\") {\r\n    placeholderWeight = \"Введіть вагу одного м.п. прута,кг.\";\r\n  }\r\n\r\n  return (\r\n    <FormControl\r\n      variant=\"standard\"\r\n      component=\"form\"\r\n      onSubmit={formik.handleSubmit}\r\n    >\r\n      <FormLabel id=\"radio-buttons-group-type\">Тип метеріалу:</FormLabel>\r\n      <RadioGroup\r\n        name=\"type\"\r\n        aria-labelledby=\"radio-buttons-group-type\"\r\n        value={formik.values.type}\r\n        onChange={formik.handleChange}\r\n      >\r\n        <FormControlLabel value=\"sheet\" control={<Radio />} label=\"Лист\" />\r\n        <FormControlLabel value=\"rod\" control={<Radio />} label=\"Круг\" />\r\n      </RadioGroup>\r\n      {formik.touched.type && Boolean(formik.errors.type) && (\r\n        <FormHelperText sx={{ margin: \"4px 14px 0 14px\", color: \"#d32f2f\" }}>\r\n          {formik.touched.type && formik.errors.type}\r\n        </FormHelperText>\r\n      )}\r\n      <TextField\r\n        id=\"brand\"\r\n        type=\"text\"\r\n        name=\"brand\"\r\n        label=\"Марка матеріалу\"\r\n        placeholder=\"Введіть марку матеріалу\"\r\n        size=\"small\"\r\n        value={formik.values.brand}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        error={formik.touched.brand && Boolean(formik.errors.brand)}\r\n        helperText={formik.touched.brand && formik.errors.brand}\r\n      />\r\n\r\n      {formik.values.type === \"sheet\" && (\r\n        <>\r\n          <TextField\r\n            id=\"width\"\r\n            type=\"text\"\r\n            name=\"width\"\r\n            label=\"Ширина листа\"\r\n            placeholder=\"Введіть ширину листа\"\r\n            size=\"small\"\r\n            value={formik.values.sheetParameters.width}\r\n            // onChange={formik.handleChange}\r\n            // onBlur={formik.handleBlur}\r\n            error={formik.touched.width && Boolean(formik.errors.width)}\r\n            helperText={formik.touched.width && formik.errors.width}\r\n          />\r\n          <TextField\r\n            id=\"length\"\r\n            type=\"text\"\r\n            name=\"length\"\r\n            label=\"Довжина листа\"\r\n            placeholder=\"Введіть довжину листа\"\r\n            size=\"small\"\r\n            value={formik.values.sheetParameters.length}\r\n            // onChange={formik.handleChange}\r\n            // onBlur={formik.handleBlur}\r\n            error={formik.touched.length && Boolean(formik.errors.length)}\r\n            helperText={formik.touched.length && formik.errors.length}\r\n          />\r\n          <TextField\r\n            id=\"thickness\"\r\n            type=\"text\"\r\n            name=\"thickness\"\r\n            label=\"Товщина листа\"\r\n            placeholder=\"Введіть товщину листа\"\r\n            size=\"small\"\r\n            value={formik.values.sheetParameters.thickness}\r\n            // onChange={formik.handleChange}\r\n            // onBlur={formik.handleBlur}\r\n            error={formik.touched.thickness && Boolean(formik.errors.thickness)}\r\n            helperText={formik.touched.thickness && formik.errors.thickness}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      {formik.values.type === \"rod\" && (\r\n        <TextField\r\n          id=\"diameter\"\r\n          type=\"text\"\r\n          name=\"diameter\"\r\n          label=\"Діаметер прута\"\r\n          placeholder=\"Введіть діаметер, мм.\"\r\n          size=\"small\"\r\n          value={formik.values.rodParameters.diameter}\r\n          // onChange={formik.handleChange}\r\n          // onBlur={formik.handleBlur}\r\n          error={formik.touched.diameter && Boolean(formik.errors.diameter)}\r\n          helperText={formik.touched.diameter && formik.errors.diameter}\r\n        />\r\n      )}\r\n\r\n      {formik.values.type && (\r\n        <TextField\r\n          id=\"weight\"\r\n          type=\"number\"\r\n          name=\"weight\"\r\n          inputProps={{ min: \"0.001\", step: \"0.001\" }}\r\n          label={labelWeight}\r\n          placeholder={placeholderWeight}\r\n          size=\"small\"\r\n          value={formik.values.weight}\r\n          // onChange={formik.handleChange}\r\n          // onBlur={formik.handleBlur}\r\n          error={formik.touched.weight && Boolean(formik.errors.weight)}\r\n          helperText={formik.touched.weight && formik.errors.weight}\r\n        />\r\n      )}\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        sx={{ width: \"300px\", margin: \"0 auto\" }}\r\n      >\r\n        Додати матеріал\r\n      </Button>\r\n    </FormControl>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { Box } from \"@mui/material\";\r\n\r\nimport { selectMaterials } from \"redux/materials/materialsSelector\";\r\n\r\nimport { getMaterials } from \"../../data/fakeAPI\";\r\nimport { Loader } from \"components/Loader\";\r\nimport { MyContainer } from \"components/MyContainer\";\r\nimport { MaterialsList } from \"components/MaterialsList\";\r\nimport { AddMaterialForm } from \"../../components/AddMaterialForm\";\r\n\r\nconst Materials = () => {\r\n  const materials = useSelector(selectMaterials);\r\n\r\n  console.log(materials);\r\n\r\n  return (\r\n    <>\r\n      <MyContainer>\r\n        <Box\r\n          sx={{\r\n            width: \"380px\",\r\n            justifyContent: \"center\",\r\n            borderRadius: 4,\r\n            display: \"flex\",\r\n            mt: 10,\r\n            mb: 6,\r\n            p: 1,\r\n            pt: 3,\r\n            backgroundColor: \"#f5f5f5\",\r\n            boxShadow: \"0 0 8px 0 rgba(0,0,0,.3)\",\r\n          }}\r\n        >\r\n          <AddMaterialForm />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            flexGrow: 1,\r\n            display: { xs: \"none\", md: \"flex\" },\r\n            borderRadius: 4,\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            gap: \"12px\",\r\n            mt: 10,\r\n            mb: 6,\r\n            p: 1,\r\n            backgroundColor: \"#f5f5f5\",\r\n            boxShadow: \"0 0 8px 0 rgba(0,0,0,.3)\",\r\n          }}\r\n        >\r\n          <MaterialsList />\r\n        </Box>\r\n      </MyContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Materials;\r\n"],"names":["MyContainer","children","Container","maxWidth","sx","display","gap","height","materials","id","sizeSheet","thicknessSheet","weightSheet","getMaterials","selectMaterials","state","items","MaterialsList","useSelector","console","log","TableContainer","component","Paper","Table","TableHead","TableRow","position","top","zIndex","background","TableCell","align","TableBody","map","material","index","border","type","sheetParameters","thickness","length","width","rodParameters","diameter","weight","IconButton","color","size","DeleteForever","fontSize","_id","validationSchema","yup","shape","oneOf","required","brand","when","is","then","otherwise","notRequired","initialValues","AddMaterialForm","labelWeight","placeholderWeight","formik","useFormik","onSubmit","values","resetForm","FormControl","variant","handleSubmit","FormLabel","RadioGroup","name","value","onChange","handleChange","FormControlLabel","control","Radio","label","touched","Boolean","errors","FormHelperText","margin","TextField","placeholder","onBlur","handleBlur","error","helperText","inputProps","min","step","Button","Box","justifyContent","borderRadius","mt","mb","p","pt","backgroundColor","boxShadow","flexGrow","xs","md","flexDirection","alignItems"],"sourceRoot":""}