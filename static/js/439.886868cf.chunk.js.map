{"version":3,"file":"static/js/439.886868cf.chunk.js","mappings":"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","sources":["components/MyContainer/MyContainer.jsx","data/fakeAPI.js","components/OrderList/OrderList.jsx","pages/Orders/Orders.jsx","services/orders-API.js","utils/formatDate.js","utils/formatTime.js","utils/getMetalConsumption.js","utils/getMaterialsForOneOrder.js","utils/getUniqueValues.js","../node_modules/@mui/icons-material/Print.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { Container } from \"@mui/material\";\r\n\r\nexport const MyContainer = ({ children }) => {\r\n  return (\r\n    <Container\r\n      maxWidth=\"xl\"\r\n      sx={{\r\n        display: \"flex\",\r\n        gap: 2,\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n","export const materials = [\r\n  {\r\n    id: \"1\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20.8,\r\n  },\r\n  {\r\n    id: \"2\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 26,\r\n  },\r\n  {\r\n    id: \"3\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 31.2,\r\n  },\r\n  {\r\n    id: \"4\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 39,\r\n  },\r\n  {\r\n    id: \"5\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 52,\r\n  },\r\n  {\r\n    id: \"6\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 65,\r\n  },\r\n  {\r\n    id: \"7\",\r\n    sizeSheet: \"2500x1250 Оц.\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 78,\r\n  },\r\n  {\r\n    id: \"8\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20.8,\r\n  },\r\n  {\r\n    id: \"9\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 26,\r\n  },\r\n  {\r\n    id: \"10\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 31.2,\r\n  },\r\n  {\r\n    id: \"11\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 39,\r\n  },\r\n  {\r\n    id: \"12\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 52,\r\n  },\r\n  {\r\n    id: \"13\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 65,\r\n  },\r\n  {\r\n    id: \"14\",\r\n    sizeSheet: \"2500x1250 Ст3.\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 78,\r\n  },\r\n  {\r\n    id: \"15\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20,\r\n  },\r\n  {\r\n    id: \"16\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 25,\r\n  },\r\n  {\r\n    id: \"17\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 30,\r\n  },\r\n  {\r\n    id: \"18\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 37.5,\r\n  },\r\n  {\r\n    id: \"19\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 50,\r\n  },\r\n  {\r\n    id: \"20\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 62.5,\r\n  },\r\n  {\r\n    id: \"21\",\r\n    sizeSheet: \"2500x1250 AISI 430\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 75,\r\n  },\r\n  {\r\n    id: \"22\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"0.8\",\r\n    weightSheet: 20,\r\n  },\r\n  {\r\n    id: \"23\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"1.0\",\r\n    weightSheet: 25,\r\n  },\r\n  {\r\n    id: \"24\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"1.2\",\r\n    weightSheet: 30,\r\n  },\r\n  {\r\n    id: \"25\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"1.5\",\r\n    weightSheet: 37.5,\r\n  },\r\n  {\r\n    id: \"26\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"2.0\",\r\n    weightSheet: 50,\r\n  },\r\n  {\r\n    id: \"27\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"2.5\",\r\n    weightSheet: 62.5,\r\n  },\r\n  {\r\n    id: \"28\",\r\n    sizeSheet: \"2500x1250 AISI 304\",\r\n    thicknessSheet: \"3.0\",\r\n    weightSheet: 75,\r\n  },\r\n];\r\n\r\nexport const getMaterials = () => {\r\n  return materials;\r\n};\r\n","import { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Box,\r\n  TableContainer,\r\n  Table,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableBody,\r\n  Paper,\r\n  IconButton,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nimport PrintIcon from \"@mui/icons-material/Print\";\r\n\r\nimport { nanoid } from \"nanoid\";\r\nimport { formatDate } from \"utils\";\r\nimport { formatTime } from \"utils\";\r\n\r\nexport const OrderList = ({ orders, location }) => {\r\n  // винести в окрему функцію\r\n  const reverseOrders = orders.reduce((acc, element) => {\r\n    return (acc = [element, ...acc]);\r\n  }, []);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\"> № п.п </TableCell>\r\n            <TableCell align=\"center\"> Користувач, дата та час </TableCell>\r\n            <TableCell align=\"center\">\r\n              Найменування деталей та кількість деталей в замовленні\r\n            </TableCell>\r\n            <TableCell align=\"center\">\r\n              Сортамент та кількість потрібного металу для виконання замовлення\r\n            </TableCell>\r\n            <TableCell align=\"center\">Дії</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {reverseOrders.map((order, index) => {\r\n            const { _id, user, createdAt, products, materials } = order;\r\n\r\n            return (\r\n              <TableRow\r\n                key={_id}\r\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n              >\r\n                <TableCell align=\"center\">{index + 1}</TableCell>\r\n                <TableCell aling=\"center\">\r\n                  <Box\r\n                    sx={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"center\",\r\n\r\n                      gap: \"4px\",\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"p\" sx={{ fontWeight: 700 }}>\r\n                      {user}\r\n                    </Typography>\r\n                    <Typography variant=\"p\">{formatDate(createdAt)}</Typography>\r\n                    <Typography variant=\"p\">{formatTime(createdAt)}</Typography>\r\n                  </Box>\r\n                </TableCell>\r\n                <TableCell aling=\"center\">\r\n                  {products.map(({ name, number, reserved }, index) => {\r\n                    return (\r\n                      <p key={nanoid()}>\r\n                        {\" \"}\r\n                        {index + 1}. {name}\r\n                        {\"  \"}\r\n                        {number} - {reserved} шт.\r\n                      </p>\r\n                    );\r\n                  })}\r\n                </TableCell>\r\n                <TableCell aling=\"center\">\r\n                  {materials.map(({ sheet, thickness, amount }, index) => {\r\n                    return (\r\n                      <p key={nanoid()}>\r\n                        {index + 1}. {thickness}x{sheet} - {amount.toFixed(3)}{\" \"}\r\n                        листів.\r\n                      </p>\r\n                    );\r\n                  })}\r\n                </TableCell>\r\n                <TableCell aling=\"center\">\r\n                  <IconButton\r\n                    component={Link}\r\n                    to={`/orders/${_id}`}\r\n                    state={{ from: location }}\r\n                    sx={{ color: \"#1976d2\" }}\r\n                    aria-label=\"print order\"\r\n                    size=\"medium\"\r\n                  >\r\n                    <PrintIcon fontSize=\"medium\" />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { Box } from \"@mui/material\";\r\n\r\nimport { MyContainer } from \"../../components/MyContainer\";\r\n\r\nimport * as orderAPI from \"../../services/orders-API\";\r\nimport { OrderList } from \"../../components/OrderList\";\r\n\r\nconst Orders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  const location = useLocation();\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function getAllOrders() {\r\n      try {\r\n        setIsLoading(true);\r\n        const { data } = await orderAPI.fetchAllOrdersAPI();\r\n        setOrders(data);\r\n      } catch (error) {\r\n        toast.error(`Щось пішло не так. Спробуй знову...`);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n\r\n    getAllOrders();\r\n  }, []);\r\n\r\n  return (\r\n    <MyContainer>\r\n      <Box\r\n        sx={{\r\n          width: \"100%\",\r\n          borderRadius: 4,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          gap: \"12px\",\r\n          mt: 10,\r\n          mb: 6,\r\n          p: 1,\r\n          backgroundColor: \"#f5f5f5\",\r\n          boxShadow: \"0 0 8px 0 rgba(0,0,0,.3)\",\r\n        }}\r\n      >\r\n        <OrderList orders={orders} location={location} />\r\n      </Box>\r\n    </MyContainer>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://technology-backend.onrender.com/api\";\r\n\r\nexport const fetchAllOrdersAPI = async () => {\r\n  const { data } = await axios.get(\"/orders\");\r\n  return data;\r\n};\r\n\r\nexport const fetchOrderAPI = async (id) => {\r\n  const { data } = await axios.get(`/orders/${id}`);\r\n  return data;\r\n};\r\n\r\nexport const addOrderAPI = async (body) => {\r\n  const { data } = await axios.post(\"/orders\", body);\r\n  return data;\r\n};\r\n\r\nexport const removeOrderAPI = async (id) => {\r\n  const { data } = await axios.delete(`/order/${id}`);\r\n  return data;\r\n};\r\n","export function formatDate(date) {\r\n  const dateTime = new Date(date);\r\n  const formattedDate = dateTime.toLocaleDateString(\"uk-UA\");\r\n\r\n  return formattedDate;\r\n}\r\n","export function formatTime(date) {\r\n  const dateTime = new Date(date);\r\n  const formattedTime = dateTime.toLocaleTimeString(\"uk-UA\", { hours: false });\r\n\r\n  return formattedTime;\r\n}\r\n","import { getMaterials } from \"../data/fakeAPI\";\r\n\r\nconst materials = getMaterials();\r\n\r\nexport function getMetalConsumption(quantity, sheet, thickness) {\r\n  const isMaterial = materials.find(\r\n    (material) =>\r\n      material.sizeSheet === sheet && material.thicknessSheet === thickness\r\n  );\r\n\r\n  if (quantity !== 0) {\r\n    return (isMaterial.weightSheet / quantity).toFixed(3);\r\n  } else {\r\n    return Infinity;\r\n  }\r\n}\r\n","export function getMaterialsForOneOrder(products) {\r\n  // знаходимо унікальні значення  сортаменту в замовленні\r\n  const getAssortmentUnique = (products) => {\r\n    const assortmentUnique = products\r\n      .map((product) => product.material)\r\n      .reduce((acc, product) => {\r\n        const isUnique = acc.some(\r\n          (element) =>\r\n            element.thickness === product.thickness &&\r\n            element.sheet === product.sheet\r\n        );\r\n\r\n        if (!isUnique) {\r\n          acc.push({ ...product });\r\n        }\r\n        return acc;\r\n      }, []);\r\n    return assortmentUnique;\r\n  };\r\n\r\n  //  для кожного унікального значення матеріалу додаємо норму витрати\r\n  //   металу при збігу зі знаеннями розкою листа та товщини.\r\n  const materialsForOneOrder = getAssortmentUnique(products).map((material) => {\r\n    const amountOfMaterial = products.reduce((acc, product) => {\r\n      if (\r\n        material.thickness === product.material.thickness &&\r\n        material.sheet === product.material.sheet\r\n      ) {\r\n        acc = acc + (1 / product.quantity) * product.reserved;\r\n      }\r\n      return acc;\r\n    }, 0);\r\n    return { ...material, amount: amountOfMaterial.toFixed(3) };\r\n  });\r\n\r\n  return materialsForOneOrder;\r\n}\r\n","export function getUniqueValues(arrayObj, keyObj) {\r\n  const uniqueValues = arrayObj\r\n    .map((element) => element[keyObj])\r\n    .filter((element, index, array) => array.indexOf(element) === index);\r\n\r\n  return uniqueValues;\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\"\n}), 'Print');\nexports.default = _default;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["MyContainer","children","Container","maxWidth","sx","display","gap","height","materials","id","sizeSheet","thicknessSheet","weightSheet","getMaterials","OrderList","orders","location","reverseOrders","reduce","acc","element","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","order","index","_id","user","createdAt","products","border","aling","Box","flexDirection","justifyContent","Typography","variant","fontWeight","formatDate","formatTime","name","number","reserved","nanoid","sheet","thickness","amount","toFixed","IconButton","Link","to","state","from","color","size","Print","fontSize","useState","setOrders","useLocation","setIsLoading","useEffect","orderAPI","data","toast","getAllOrders","width","borderRadius","alignItems","mt","mb","p","backgroundColor","boxShadow","axios","fetchAllOrdersAPI","fetchOrderAPI","addOrderAPI","body","date","Date","toLocaleDateString","toLocaleTimeString","hours","getMetalConsumption","quantity","isMaterial","find","material","Infinity","getMaterialsForOneOrder","product","some","push","getAssortmentUnique","amountOfMaterial","getUniqueValues","arrayObj","keyObj","filter","array","indexOf","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase"],"sourceRoot":""}